Version 4.0 HI-TECH Software Intermediate Code
"60 ./MCAL_Layer/ADC/../GPIO/hal_gpio.h
[s S273 :3 `uc 1 :3 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S273 . port pin direction logic ]
"45 ./ECU_Layer/LCD/ecu_lcd.h
[; ;./ECU_Layer/LCD/ecu_lcd.h: 45: typedef struct{
[s S275 `S273 1 `S273 1 `S273 -> 4 `i ]
[n S275 . rs en data_pin ]
"14 Application.c
[; ;Application.c: 14: lcd_4bit_t lcd_1 = {
[c E2990 0 1 2 3 4 .. ]
[n E2990 . PORTA_INDEX PORTB_INDEX PORTC_INDEX PORTD_INDEX PORTE_INDEX  ]
[c E2980 0 1 2 3 4 5 6 7 .. ]
[n E2980 . GPIO_PIN0 GPIO_PIN1 GPIO_PIN2 GPIO_PIN3 GPIO_PIN4 GPIO_PIN5 GPIO_PIN6 GPIO_PIN7  ]
[c E2976 0 1 .. ]
[n E2976 . GPIO_DIRECTION_OUTPUT GPIO_DIRECTION_INPUT  ]
[c E2972 0 1 .. ]
[n E2972 . GPIO_LOW GPIO_HIGH  ]
[v F3272 `(v ~T0 @X0 0 tf ]
"40
[; ;Application.c: 40: ADC_conf_t ad1 = {
[c E3193 0 1 .. ]
[n E3193 . LOW_PRIORITY HIGH_PRIORITY  ]
[c E3251 0 1 2 3 4 5 6 7 .. ]
[n E3251 . ADC_0TAD ADC_2TAD ADC_4TAD ADC_6TAD ADC_8TAD ADC_12TAD ADC_16TAD ADC_20TAD  ]
[c E3261 0 1 2 3 4 5 6 .. ]
[n E3261 . FoscBy2 FoscBy8 FoscBy32 Frc FoscBy4 FoscBy16 FoscBy64  ]
[c E3236 0 1 2 3 4 5 6 7 8 9 10 11 12 .. ]
[n E3236 . ADC_CHANNEL_AN0 ADC_CHANNEL_AN1 ADC_CHANNEL_AN2 ADC_CHANNEL_AN3 ADC_CHANNEL_AN4 ADC_CHANNEL_AN5 ADC_CHANNEL_AN6 ADC_CHANNEL_AN7 ADC_CHANNEL_AN8 ADC_CHANNEL_AN9 ADC_CHANNEL_AN10 ADC_CHANNEL_AN11 ADC_CHANNEL_AN12  ]
"106 ./MCAL_Layer/ADC/hal_adc.h
[; ;./MCAL_Layer/ADC/hal_adc.h: 106: typedef struct {
[s S284 `*F3272 1 `E3193 1 `E3251 1 `E3261 1 `E3236 1 :1 `uc 1 :1 `uc 1 :6 `uc 1 ]
[n S284 . ADC_CallBack priority aqcTime clk ch ADC_LR_ADJUST ADC_Vref Reserved ]
"12 Application.c
[; ;Application.c: 12: void adisr(void);
[v _adisr `(v ~T0 @X0 0 ef ]
"126 ./MCAL_Layer/ADC/hal_adc.h
[; ;./MCAL_Layer/ADC/hal_adc.h: 126: STD_ReturnType ADC_GetConversionRes(const ADC_conf_t * obj, uint16_t* res);
[v _ADC_GetConversionRes `(uc ~T0 @X0 0 ef2`*CS284`*us ]
[p mainexit ]
"120
[; ;./MCAL_Layer/ADC/hal_adc.h: 120: STD_ReturnType ADC_INIT(const ADC_conf_t * obj);
[v _ADC_INIT `(uc ~T0 @X0 0 ef1`*CS284 ]
"57 ./ECU_Layer/LCD/ecu_lcd.h
[; ;./ECU_Layer/LCD/ecu_lcd.h: 57: STD_ReturnType lcd_4bit_intialize(const lcd_4bit_t *lcd);
[v _lcd_4bit_intialize `(uc ~T0 @X0 0 ef1`*CS275 ]
"62
[; ;./ECU_Layer/LCD/ecu_lcd.h: 62: STD_ReturnType lcd_4bit_send_string_pos(const lcd_4bit_t *lcd, uint8_t row, uint8_t column, uint8_t *str);
[v _lcd_4bit_send_string_pos `(uc ~T0 @X0 0 ef4`*CS275`uc`uc`*uc ]
[v F2948 `(v ~T0 @X0 1 tf1`ul ]
"12 C:/Program Files/Microchip/MPLABX/v6.15/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\builtins.h
[v __delay `JF2948 ~T0 @X0 0 e ]
[p i __delay ]
"128 ./MCAL_Layer/ADC/hal_adc.h
[; ;./MCAL_Layer/ADC/hal_adc.h: 128: STD_ReturnType ADC_GetFrom_NON_BLOCKING(const ADC_conf_t * obj,ADC_CHANNELS_SELECT_t channel );
[v _ADC_GetFrom_NON_BLOCKING `(uc ~T0 @X0 0 ef2`*CS284`E3236 ]
"54 C:/Program Files/Microchip/MPLABX/v6.15/packs/Microchip/PIC18Fxxxx_DFP/1.4.151/xc8\pic\include\proc\pic18f4620.h
[; <" PORTA equ 0F80h ;# ">
"191
[; <" PORTB equ 0F81h ;# ">
"362
[; <" PORTC equ 0F82h ;# ">
"537
[; <" PORTD equ 0F83h ;# ">
"679
[; <" PORTE equ 0F84h ;# ">
"882
[; <" LATA equ 0F89h ;# ">
"994
[; <" LATB equ 0F8Ah ;# ">
"1106
[; <" LATC equ 0F8Bh ;# ">
"1218
[; <" LATD equ 0F8Ch ;# ">
"1330
[; <" LATE equ 0F8Dh ;# ">
"1382
[; <" TRISA equ 0F92h ;# ">
"1387
[; <" DDRA equ 0F92h ;# ">
"1604
[; <" TRISB equ 0F93h ;# ">
"1609
[; <" DDRB equ 0F93h ;# ">
"1826
[; <" TRISC equ 0F94h ;# ">
"1831
[; <" DDRC equ 0F94h ;# ">
"2048
[; <" TRISD equ 0F95h ;# ">
"2053
[; <" DDRD equ 0F95h ;# ">
"2270
[; <" TRISE equ 0F96h ;# ">
"2275
[; <" DDRE equ 0F96h ;# ">
"2434
[; <" OSCTUNE equ 0F9Bh ;# ">
"2499
[; <" PIE1 equ 0F9Dh ;# ">
"2576
[; <" PIR1 equ 0F9Eh ;# ">
"2653
[; <" IPR1 equ 0F9Fh ;# ">
"2730
[; <" PIE2 equ 0FA0h ;# ">
"2796
[; <" PIR2 equ 0FA1h ;# ">
"2862
[; <" IPR2 equ 0FA2h ;# ">
"2928
[; <" EECON1 equ 0FA6h ;# ">
"2994
[; <" EECON2 equ 0FA7h ;# ">
"3001
[; <" EEDATA equ 0FA8h ;# ">
"3008
[; <" EEADR equ 0FA9h ;# ">
"3015
[; <" EEADRH equ 0FAAh ;# ">
"3022
[; <" RCSTA equ 0FABh ;# ">
"3027
[; <" RCSTA1 equ 0FABh ;# ">
"3232
[; <" TXSTA equ 0FACh ;# ">
"3237
[; <" TXSTA1 equ 0FACh ;# ">
"3488
[; <" TXREG equ 0FADh ;# ">
"3493
[; <" TXREG1 equ 0FADh ;# ">
"3500
[; <" RCREG equ 0FAEh ;# ">
"3505
[; <" RCREG1 equ 0FAEh ;# ">
"3512
[; <" SPBRG equ 0FAFh ;# ">
"3517
[; <" SPBRG1 equ 0FAFh ;# ">
"3524
[; <" SPBRGH equ 0FB0h ;# ">
"3531
[; <" T3CON equ 0FB1h ;# ">
"3643
[; <" TMR3 equ 0FB2h ;# ">
"3650
[; <" TMR3L equ 0FB2h ;# ">
"3657
[; <" TMR3H equ 0FB3h ;# ">
"3664
[; <" CMCON equ 0FB4h ;# ">
"3754
[; <" CVRCON equ 0FB5h ;# ">
"3833
[; <" ECCP1AS equ 0FB6h ;# ">
"3915
[; <" PWM1CON equ 0FB7h ;# ">
"3985
[; <" BAUDCON equ 0FB8h ;# ">
"3990
[; <" BAUDCTL equ 0FB8h ;# ">
"4157
[; <" CCP2CON equ 0FBAh ;# ">
"4236
[; <" CCPR2 equ 0FBBh ;# ">
"4243
[; <" CCPR2L equ 0FBBh ;# ">
"4250
[; <" CCPR2H equ 0FBCh ;# ">
"4257
[; <" CCP1CON equ 0FBDh ;# ">
"4354
[; <" CCPR1 equ 0FBEh ;# ">
"4361
[; <" CCPR1L equ 0FBEh ;# ">
"4368
[; <" CCPR1H equ 0FBFh ;# ">
"4375
[; <" ADCON2 equ 0FC0h ;# ">
"4446
[; <" ADCON1 equ 0FC1h ;# ">
"4531
[; <" ADCON0 equ 0FC2h ;# ">
"4650
[; <" ADRES equ 0FC3h ;# ">
"4657
[; <" ADRESL equ 0FC3h ;# ">
"4664
[; <" ADRESH equ 0FC4h ;# ">
"4671
[; <" SSPCON2 equ 0FC5h ;# ">
"4733
[; <" SSPCON1 equ 0FC6h ;# ">
"4803
[; <" SSPSTAT equ 0FC7h ;# ">
"5024
[; <" SSPADD equ 0FC8h ;# ">
"5031
[; <" SSPBUF equ 0FC9h ;# ">
"5038
[; <" T2CON equ 0FCAh ;# ">
"5109
[; <" PR2 equ 0FCBh ;# ">
"5114
[; <" MEMCON equ 0FCBh ;# ">
"5219
[; <" TMR2 equ 0FCCh ;# ">
"5226
[; <" T1CON equ 0FCDh ;# ">
"5329
[; <" TMR1 equ 0FCEh ;# ">
"5336
[; <" TMR1L equ 0FCEh ;# ">
"5343
[; <" TMR1H equ 0FCFh ;# ">
"5350
[; <" RCON equ 0FD0h ;# ">
"5483
[; <" WDTCON equ 0FD1h ;# ">
"5511
[; <" HLVDCON equ 0FD2h ;# ">
"5516
[; <" LVDCON equ 0FD2h ;# ">
"5781
[; <" OSCCON equ 0FD3h ;# ">
"5858
[; <" T0CON equ 0FD5h ;# ">
"5935
[; <" TMR0 equ 0FD6h ;# ">
"5942
[; <" TMR0L equ 0FD6h ;# ">
"5949
[; <" TMR0H equ 0FD7h ;# ">
"5956
[; <" STATUS equ 0FD8h ;# ">
"6027
[; <" FSR2 equ 0FD9h ;# ">
"6034
[; <" FSR2L equ 0FD9h ;# ">
"6041
[; <" FSR2H equ 0FDAh ;# ">
"6048
[; <" PLUSW2 equ 0FDBh ;# ">
"6055
[; <" PREINC2 equ 0FDCh ;# ">
"6062
[; <" POSTDEC2 equ 0FDDh ;# ">
"6069
[; <" POSTINC2 equ 0FDEh ;# ">
"6076
[; <" INDF2 equ 0FDFh ;# ">
"6083
[; <" BSR equ 0FE0h ;# ">
"6090
[; <" FSR1 equ 0FE1h ;# ">
"6097
[; <" FSR1L equ 0FE1h ;# ">
"6104
[; <" FSR1H equ 0FE2h ;# ">
"6111
[; <" PLUSW1 equ 0FE3h ;# ">
"6118
[; <" PREINC1 equ 0FE4h ;# ">
"6125
[; <" POSTDEC1 equ 0FE5h ;# ">
"6132
[; <" POSTINC1 equ 0FE6h ;# ">
"6139
[; <" INDF1 equ 0FE7h ;# ">
"6146
[; <" WREG equ 0FE8h ;# ">
"6158
[; <" FSR0 equ 0FE9h ;# ">
"6165
[; <" FSR0L equ 0FE9h ;# ">
"6172
[; <" FSR0H equ 0FEAh ;# ">
"6179
[; <" PLUSW0 equ 0FEBh ;# ">
"6186
[; <" PREINC0 equ 0FECh ;# ">
"6193
[; <" POSTDEC0 equ 0FEDh ;# ">
"6200
[; <" POSTINC0 equ 0FEEh ;# ">
"6207
[; <" INDF0 equ 0FEFh ;# ">
"6214
[; <" INTCON3 equ 0FF0h ;# ">
"6306
[; <" INTCON2 equ 0FF1h ;# ">
"6376
[; <" INTCON equ 0FF2h ;# ">
"6493
[; <" PROD equ 0FF3h ;# ">
"6500
[; <" PRODL equ 0FF3h ;# ">
"6507
[; <" PRODH equ 0FF4h ;# ">
"6514
[; <" TABLAT equ 0FF5h ;# ">
"6523
[; <" TBLPTR equ 0FF6h ;# ">
"6530
[; <" TBLPTRL equ 0FF6h ;# ">
"6537
[; <" TBLPTRH equ 0FF7h ;# ">
"6544
[; <" TBLPTRU equ 0FF8h ;# ">
"6553
[; <" PCLAT equ 0FF9h ;# ">
"6560
[; <" PC equ 0FF9h ;# ">
"6567
[; <" PCL equ 0FF9h ;# ">
"6574
[; <" PCLATH equ 0FFAh ;# ">
"6581
[; <" PCLATU equ 0FFBh ;# ">
"6588
[; <" STKPTR equ 0FFCh ;# ">
"6694
[; <" TOS equ 0FFDh ;# ">
"6701
[; <" TOSL equ 0FFDh ;# ">
"6708
[; <" TOSH equ 0FFEh ;# ">
"6715
[; <" TOSU equ 0FFFh ;# ">
"14 Application.c
[; ;Application.c: 14: lcd_4bit_t lcd_1 = {
[v _lcd_1 `S275 ~T0 @X0 1 e ]
[i _lcd_1
:U ..
:U ..
:U ..
:U ..
-> . `E2990 2 `uc
-> . `E2980 0 `uc
-> . `E2976 0 `uc
-> . `E2972 0 `uc
..
..
:U ..
:U ..
-> . `E2990 2 `uc
-> . `E2980 1 `uc
-> . `E2976 0 `uc
-> . `E2972 0 `uc
..
..
:U ..
:U ..
-> . `E2990 2 `uc
-> . `E2980 2 `uc
-> . `E2976 0 `uc
-> . `E2972 0 `uc
..
:U ..
-> . `E2990 2 `uc
-> . `E2980 3 `uc
-> . `E2976 0 `uc
-> . `E2972 0 `uc
..
:U ..
-> . `E2990 2 `uc
-> . `E2980 4 `uc
-> . `E2976 0 `uc
-> . `E2972 0 `uc
..
:U ..
-> . `E2990 2 `uc
-> . `E2980 5 `uc
-> . `E2976 0 `uc
-> . `E2972 0 `uc
..
..
..
..
]
"40
[; ;Application.c: 40: ADC_conf_t ad1 = {
[v _ad1 `S284 ~T0 @X0 1 e ]
[i _ad1
:U ..
:U ..
&U _adisr
-> -> 0 `i `E3193
. `E3251 5
. `E3261 5
. `E3236 0
-> -> 1 `ui `uc
-> -> 0 `ui `uc
..
..
]
"49
[; ;Application.c: 49: uint16_t res1 = 0;
[v _res1 `us ~T0 @X0 1 e ]
[i _res1
-> -> 0 `i `us
]
"50
[; ;Application.c: 50: uint8_t flag = 0;
[v _flag `uc ~T0 @X0 1 e ]
[i _flag
-> -> 0 `i `uc
]
"52
[; ;Application.c: 52: void adisr(void)
[v _adisr `(v ~T0 @X0 1 ef ]
"53
[; ;Application.c: 53: {
{
[e :U _adisr ]
[f ]
"54
[; ;Application.c: 54:  ADC_GetConversionRes(&ad1, &res1);
[e ( _ADC_GetConversionRes (2 , -> &U _ad1 `*CS284 &U _res1 ]
"55
[; ;Application.c: 55:  flag++;
[e ++ _flag -> -> 1 `i `uc ]
"56
[; ;Application.c: 56: }
[e :UE 285 ]
}
"57
[; ;Application.c: 57: uint8_t chr[] = {
[v _chr `uc ~T0 @X0 -> 8 `i e ]
[i _chr
:U ..
-> -> 0 `i `uc
-> -> 4 `i `uc
-> -> 12 `i `uc
-> -> 20 `i `uc
-> -> 20 `i `uc
-> -> 31 `i `uc
-> -> 4 `i `uc
-> -> 0 `i `uc
..
]
[v $root$_main `(v ~T0 @X0 0 e ]
"68
[; ;Application.c: 68: int main(int argc, char **argv)
[v _main `(i ~T0 @X0 1 ef2`i`**uc ]
"69
[; ;Application.c: 69: {
{
[e :U _main ]
"68
[; ;Application.c: 68: int main(int argc, char **argv)
[v _argc `i ~T0 @X0 1 r1 ]
[v _argv `**uc ~T0 @X0 1 r2 ]
"69
[; ;Application.c: 69: {
[f ]
"70
[; ;Application.c: 70:  ADC_INIT(&ad1);
[e ( _ADC_INIT (1 -> &U _ad1 `*CS284 ]
"72
[; ;Application.c: 72:  lcd_4bit_intialize(&lcd_1);
[e ( _lcd_4bit_intialize (1 -> &U _lcd_1 `*CS275 ]
"74
[; ;Application.c: 74:  lcd_4bit_send_string_pos(&lcd_1, 1, 7, "ADC TEST");
[e ( _lcd_4bit_send_string_pos (4 , , , -> &U _lcd_1 `*CS275 -> -> 1 `i `uc -> -> 7 `i `uc :s 1C ]
"75
[; ;Application.c: 75:  _delay((unsigned long)((2000)*(16000000/4000.0)));
[e ( __delay (1 -> * -> -> 2000 `i `d / -> -> 16000000 `l `d .4000.0 `ul ]
"76
[; ;Application.c: 76:  while (1) {
[e :U 288 ]
{
"77
[; ;Application.c: 77:   ADC_GetFrom_NON_BLOCKING(&ad1, ADC_CHANNEL_AN0);
[e ( _ADC_GetFrom_NON_BLOCKING (2 , -> &U _ad1 `*CS284 . `E3236 0 ]
"78
[; ;Application.c: 78:  }
}
[e :U 287 ]
[e $U 288  ]
[e :U 289 ]
"80
[; ;Application.c: 80:  return(0);
[e ) -> 0 `i ]
[e $UE 286  ]
"81
[; ;Application.c: 81: }
[e :UE 286 ]
}
[a 1C 65 68 67 32 84 69 83 84 0 ]
