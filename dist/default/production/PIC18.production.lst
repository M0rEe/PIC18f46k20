

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sun Jan 21 22:26:22 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1,inline
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1,inline
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1,inline
    32                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    47                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    49   000000                     
    50                           ; Generated 23/03/2023 GMT
    51                           ; 
    52                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    53                           ; All rights reserved.
    54                           ; 
    55                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    56                           ; 
    57                           ; Redistribution and use in source and binary forms, with or without modification, are
    58                           ; permitted provided that the following conditions are met:
    59                           ; 
    60                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    61                           ;        conditions and the following disclaimer.
    62                           ; 
    63                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    64                           ;        of conditions and the following disclaimer in the documentation and/or other
    65                           ;        materials provided with the distribution. Publication is not required when
    66                           ;        this file is used in an embedded application.
    67                           ; 
    68                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    69                           ;        software without specific prior written permission.
    70                           ; 
    71                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    72                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    73                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    74                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    75                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    76                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    77                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    78                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    79                           ; 
    80                           ; 
    81                           ; Code-generator required, PIC18F4620 Definitions
    82                           ; 
    83                           ; SFR Addresses
    84   000000                     
    85                           	psect	idataCOMRAM
    86   001C3C                     __pidataCOMRAM:
    87                           	callstack 0
    88                           
    89                           ;initializer for _port_regs
    90   001C3C  80                 	db	128
    91   001C3D  0F                 	db	15
    92   001C3E  81                 	db	129
    93   001C3F  0F                 	db	15
    94   001C40  82                 	db	130
    95   001C41  0F                 	db	15
    96   001C42  83                 	db	131
    97   001C43  0F                 	db	15
    98   001C44  84                 	db	132
    99   001C45  0F                 	db	15
   100                           
   101                           ;initializer for _lat_regs
   102   001C46  89                 	db	137
   103   001C47  0F                 	db	15
   104   001C48  8A                 	db	138
   105   001C49  0F                 	db	15
   106   001C4A  8B                 	db	139
   107   001C4B  0F                 	db	15
   108   001C4C  8C                 	db	140
   109   001C4D  0F                 	db	15
   110   001C4E  8D                 	db	141
   111   001C4F  0F                 	db	15
   112                           
   113                           ;initializer for _tris_regs
   114   001C50  92                 	db	146
   115   001C51  0F                 	db	15
   116   001C52  93                 	db	147
   117   001C53  0F                 	db	15
   118   001C54  94                 	db	148
   119   001C55  0F                 	db	15
   120   001C56  95                 	db	149
   121   001C57  0F                 	db	15
   122   001C58  96                 	db	150
   123   001C59  0F                 	db	15
   124                           
   125                           ;initializer for _RB7_Flag
   126   001C5A  01                 	db	1
   127                           
   128                           ;initializer for _RB6_Flag
   129   001C5B  01                 	db	1
   130                           
   131                           ;initializer for _RB5_Flag
   132   001C5C  01                 	db	1
   133                           
   134                           ;initializer for _RB4_Flag
   135   001C5D  01                 	db	1
   136                           
   137                           ;initializer for _ad1
   138   001C5E  BC                 	db	low _adisr
   139   001C5F  1C                 	db	high _adisr
   140   001C60  00                 	db	0
   141   001C61  05                 	db	5
   142   001C62  05                 	db	5
   143   001C63  00                 	db	0
   144   001C64  01                 	db	1
   145                           
   146                           ;initializer for _lcd_1
   147   001C65  02                 	db	2
   148   001C66  0A                 	db	10
   149   001C67  12                 	db	18
   150   001C68  1A                 	db	26
   151   001C69  22                 	db	34
   152   001C6A  2A                 	db	42
   153                           
   154                           	psect	idataBANK0
   155   001CCC                     __pidataBANK0:
   156                           	callstack 0
   157                           
   158                           ;initializer for _chr
   159   001CCC  00                 	db	0
   160   001CCD  04                 	db	4
   161   001CCE  0C                 	db	12
   162   001CCF  14                 	db	20
   163   001CD0  14                 	db	20
   164   001CD1  1F                 	db	31
   165   001CD2  04                 	db	4
   166   001CD3  00                 	db	0
   167   000000                     _ADCON1bits	set	4033
   168   000000                     _ADRESL	set	4035
   169   000000                     _ADRESH	set	4036
   170   000000                     _INTCON2bits	set	4081
   171   000000                     _EECON2	set	4007
   172   000000                     _EEDATA	set	4008
   173   000000                     _PORTBbits	set	3969
   174   000000                     _EECON1bits	set	4006
   175   000000                     _EEADR	set	4009
   176   000000                     _EEADRH	set	4010
   177   000000                     _INTCONbits	set	4082
   178   000000                     _PORTE	set	3972
   179   000000                     _PORTD	set	3971
   180   000000                     _PORTC	set	3970
   181   000000                     _PORTB	set	3969
   182   000000                     _PORTA	set	3968
   183   000000                     _LATA	set	3977
   184   000000                     _TRISA	set	3986
   185   000000                     _ADCON2bits	set	4032
   186   000000                     _ADCON0bits	set	4034
   187   000000                     _INTCON3bits	set	4080
   188   000000                     _PIE1bits	set	3997
   189   000000                     _TRISE	set	3990
   190   000000                     _TRISD	set	3989
   191   000000                     _TRISC	set	3988
   192   000000                     _TRISB	set	3987
   193   000000                     _LATE	set	3981
   194   000000                     _LATD	set	3980
   195   000000                     _LATC	set	3979
   196   000000                     _LATB	set	3978
   197   000000                     _PIR1bits	set	3998
   198                           
   199                           	psect	smallconst
   200   001000                     __psmallconst:
   201                           	callstack 0
   202   001000  00                 	db	0
   203   001001                     STR_4:
   204   001001  41                 	db	65	;'A'
   205   001002  44                 	db	68	;'D'
   206   001003  43                 	db	67	;'C'
   207   001004  20                 	db	32
   208   001005  54                 	db	84	;'T'
   209   001006  45                 	db	69	;'E'
   210   001007  53                 	db	83	;'S'
   211   001008  54                 	db	84	;'T'
   212   001009  00                 	db	0
   213   00100A                     STR_1:
   214   00100A  25                 	db	37
   215   00100B  69                 	db	105	;'i'
   216   00100C  00                 	db	0
   217   00100D  00                 	db	0	; dummy byte at the end
   218   000000                     
   219                           ; #config settings
   220                           
   221                           	psect	cinit
   222   001A18                     __pcinit:
   223                           	callstack 0
   224   001A18                     start_initialization:
   225                           	callstack 0
   226   001A18                     __initialization:
   227                           	callstack 0
   228                           
   229                           ; Initialize objects allocated to BANK0 (8 bytes)
   230                           ; load TBLPTR registers with __pidataBANK0
   231   001A18  0ECC               	movlw	low __pidataBANK0
   232   001A1A  6EF6               	movwf	tblptrl,c
   233   001A1C  0E1C               	movlw	high __pidataBANK0
   234   001A1E  6EF7               	movwf	tblptrh,c
   235   001A20  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   236   001A22  6EF8               	movwf	tblptru,c
   237   001A24  EE00  F08B         	lfsr	0,__pdataBANK0
   238   001A28  EE10 F008          	lfsr	1,8
   239   001A2C                     copy_data0:
   240   001A2C  0009               	tblrd		*+
   241   001A2E  CFF5 FFEE          	movff	tablat,postinc0
   242   001A32  50E5               	movf	postdec1,w,c
   243   001A34  50E1               	movf	fsr1l,w,c
   244   001A36  E1FA               	bnz	copy_data0
   245                           
   246                           ; Initialize objects allocated to COMRAM (47 bytes)
   247                           ; load TBLPTR registers with __pidataCOMRAM
   248   001A38  0E3C               	movlw	low __pidataCOMRAM
   249   001A3A  6EF6               	movwf	tblptrl,c
   250   001A3C  0E1C               	movlw	high __pidataCOMRAM
   251   001A3E  6EF7               	movwf	tblptrh,c
   252   001A40  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   253   001A42  6EF8               	movwf	tblptru,c
   254   001A44  EE00  F001         	lfsr	0,__pdataCOMRAM
   255   001A48  EE10 F02F          	lfsr	1,47
   256   001A4C                     copy_data1:
   257   001A4C  0009               	tblrd		*+
   258   001A4E  CFF5 FFEE          	movff	tablat,postinc0
   259   001A52  50E5               	movf	postdec1,w,c
   260   001A54  50E1               	movf	fsr1l,w,c
   261   001A56  E1FA               	bnz	copy_data1
   262                           
   263                           ; Clear objects allocated to COMRAM (34 bytes)
   264   001A58  EE00  F053         	lfsr	0,__pbssCOMRAM
   265   001A5C  0E22               	movlw	34
   266   001A5E                     clear_0:
   267   001A5E  6AEE               	clrf	postinc0,c
   268   001A60  06E8               	decf	wreg,f,c
   269   001A62  E1FD               	bnz	clear_0
   270   001A64                     end_of_initialization:
   271                           	callstack 0
   272   001A64                     __end_of__initialization:
   273                           	callstack 0
   274   001A64  9075               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   275   001A66  9275               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   276   001A68  0100               	movlb	0
   277   001A6A  EF37  F00D         	goto	_main	;jump to C main() function
   278                           
   279                           	psect	bssCOMRAM
   280   000053                     __pbssCOMRAM:
   281                           	callstack 0
   282   000053                     _ADC_CALLBACK:
   283                           	callstack 0
   284   000053                     	ds	2
   285   000055                     _RB7_CallBack_LOW:
   286                           	callstack 0
   287   000055                     	ds	2
   288   000057                     _RB6_CallBack_LOW:
   289                           	callstack 0
   290   000057                     	ds	2
   291   000059                     _RB5_CallBack_LOW:
   292                           	callstack 0
   293   000059                     	ds	2
   294   00005B                     _RB4_CallBack_LOW:
   295                           	callstack 0
   296   00005B                     	ds	2
   297   00005D                     _RB7_CallBack_HIGH:
   298                           	callstack 0
   299   00005D                     	ds	2
   300   00005F                     _RB6_CallBack_HIGH:
   301                           	callstack 0
   302   00005F                     	ds	2
   303   000061                     _RB5_CallBack_HIGH:
   304                           	callstack 0
   305   000061                     	ds	2
   306   000063                     _RB4_CallBack_HIGH:
   307                           	callstack 0
   308   000063                     	ds	2
   309   000065                     _INT2_CALBACK:
   310                           	callstack 0
   311   000065                     	ds	2
   312   000067                     _INT1_CALBACK:
   313                           	callstack 0
   314   000067                     	ds	2
   315   000069                     _INT0_CALBACK:
   316                           	callstack 0
   317   000069                     	ds	2
   318   00006B                     _flag:
   319                           	callstack 0
   320   00006B                     	ds	1
   321   00006C                     relayOFF@F3056:
   322                           	callstack 0
   323   00006C                     	ds	1
   324   00006D                     relayON@F3051:
   325                           	callstack 0
   326   00006D                     	ds	1
   327   00006E                     relayInit@F3046:
   328                           	callstack 0
   329   00006E                     	ds	1
   330   00006F                     led_toggle@F3068:
   331                           	callstack 0
   332   00006F                     	ds	1
   333   000070                     led_off@F3063:
   334                           	callstack 0
   335   000070                     	ds	1
   336   000071                     led_on@F3058:
   337                           	callstack 0
   338   000071                     	ds	1
   339   000072                     led_init@F3053:
   340                           	callstack 0
   341   000072                     	ds	1
   342   000073                     _res1:
   343                           	callstack 0
   344   000073                     	ds	2
   345                           
   346                           	psect	dataCOMRAM
   347   000001                     __pdataCOMRAM:
   348                           	callstack 0
   349   000001                     _port_regs:
   350                           	callstack 0
   351   000001                     	ds	10
   352   00000B                     _lat_regs:
   353                           	callstack 0
   354   00000B                     	ds	10
   355   000015                     _tris_regs:
   356                           	callstack 0
   357   000015                     	ds	10
   358   00001F                     _RB7_Flag:
   359                           	callstack 0
   360   00001F                     	ds	1
   361   000020                     _RB6_Flag:
   362                           	callstack 0
   363   000020                     	ds	1
   364   000021                     _RB5_Flag:
   365                           	callstack 0
   366   000021                     	ds	1
   367   000022                     _RB4_Flag:
   368                           	callstack 0
   369   000022                     	ds	1
   370   000023                     _ad1:
   371                           	callstack 0
   372   000023                     	ds	7
   373   00002A                     _lcd_1:
   374                           	callstack 0
   375   00002A                     	ds	6
   376                           
   377                           	psect	dataBANK0
   378   00008B                     __pdataBANK0:
   379                           	callstack 0
   380   00008B                     _chr:
   381                           	callstack 0
   382   00008B                     	ds	8
   383                           
   384                           	psect	cstackBANK0
   385   000080                     __pcstackBANK0:
   386                           	callstack 0
   387   000080                     lcd_4bit_intialize@i:
   388                           	callstack 0
   389   000080                     lcd_4bit_send_string_pos@lcd:
   390                           	callstack 0
   391                           
   392                           ; 1 bytes @ 0x0
   393   000080                     	ds	1
   394   000081                     lcd_4bit_send_string_pos@row:
   395                           	callstack 0
   396                           
   397                           ; 1 bytes @ 0x1
   398   000081                     	ds	1
   399   000082                     lcd_4bit_send_string_pos@column:
   400                           	callstack 0
   401                           
   402                           ; 1 bytes @ 0x2
   403   000082                     	ds	1
   404   000083                     lcd_4bit_send_string_pos@str:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0x3
   408   000083                     	ds	1
   409   000084                     
   410                           ; 2 bytes @ 0x4
   411   000084                     	ds	2
   412   000086                     
   413                           ; 3 bytes @ 0x6
   414   000086                     	ds	3
   415   000089                     ??_main:
   416                           
   417                           ; 1 bytes @ 0x9
   418   000089                     	ds	2
   419                           
   420                           	psect	cstackCOMRAM
   421   000030                     __pcstackCOMRAM:
   422                           	callstack 0
   423   000030                     RB4_ISR@src:
   424                           	callstack 0
   425   000030                     RB5_ISR@src:
   426                           	callstack 0
   427   000030                     RB6_ISR@src:
   428                           	callstack 0
   429   000030                     RB7_ISR@src:
   430                           	callstack 0
   431   000030                     ADC_GetConversionRes@obj:
   432                           	callstack 0
   433                           
   434                           ; 1 bytes @ 0x0
   435   000030                     	ds	1
   436   000031                     ADC_GetConversionRes@res:
   437                           	callstack 0
   438                           
   439                           ; 1 bytes @ 0x1
   440   000031                     	ds	1
   441   000032                     ??_ADC_GetConversionRes:
   442                           
   443                           ; 1 bytes @ 0x2
   444   000032                     	ds	3
   445   000035                     ADC_GetConversionRes@ret:
   446                           	callstack 0
   447                           
   448                           ; 1 bytes @ 0x5
   449   000035                     	ds	1
   450   000036                     ??_InterruptManager:
   451                           
   452                           ; 1 bytes @ 0x6
   453   000036                     	ds	4
   454   00003A                     gpio_pin_direction_initialize@pin_config:
   455                           	callstack 0
   456   00003A                     gpio_pin_write_logic@pin_config:
   457                           	callstack 0
   458   00003A                     ADC_StartConversion@obj:
   459                           	callstack 0
   460   00003A                     ADC_CHANNEL_PIN_CONFIGURE@obj:
   461                           	callstack 0
   462   00003A                     ADC_RESULT_ADJUST@obj:
   463                           	callstack 0
   464   00003A                     ADC_VOLTAGE_REFRECE_CONFIGURE@obj:
   465                           	callstack 0
   466                           
   467                           ; 1 bytes @ 0xA
   468   00003A                     	ds	1
   469   00003B                     ??_gpio_pin_direction_initialize:
   470   00003B                     ??_ADC_CHANNEL_PIN_CONFIGURE:
   471   00003B                     gpio_pin_write_logic@logic:
   472                           	callstack 0
   473   00003B                     ADC_StartConversion@ret:
   474                           	callstack 0
   475                           
   476                           ; 1 bytes @ 0xB
   477   00003B                     	ds	1
   478   00003C                     ??_gpio_pin_write_logic:
   479                           
   480                           ; 1 bytes @ 0xC
   481   00003C                     	ds	1
   482   00003D                     ADC_INIT@obj:
   483                           	callstack 0
   484   00003D                     ADC_SelectChannnel@obj:
   485                           	callstack 0
   486                           
   487                           ; 1 bytes @ 0xD
   488   00003D                     	ds	1
   489   00003E                     ??_ADC_INIT:
   490   00003E                     ADC_SelectChannnel@channel:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0xE
   494   00003E                     	ds	1
   495   00003F                     ??_ADC_SelectChannnel:
   496                           
   497                           ; 1 bytes @ 0xF
   498   00003F                     	ds	1
   499   000040                     gpio_pin_direction_initialize@ret:
   500                           	callstack 0
   501   000040                     ADC_SelectChannnel@ret:
   502                           	callstack 0
   503                           
   504                           ; 1 bytes @ 0x10
   505   000040                     	ds	1
   506   000041                     gpio_pin_write_logic@ret:
   507                           	callstack 0
   508   000041                     ADC_GetFrom_NON_BLOCKING@obj:
   509                           	callstack 0
   510                           
   511                           ; 1 bytes @ 0x11
   512   000041                     	ds	1
   513   000042                     lcd_4bit_send_data@lcd:
   514                           	callstack 0
   515   000042                     lcd_4bit_blink_en@lcd:
   516                           	callstack 0
   517   000042                     gpio_pin_initialize@pin_config:
   518                           	callstack 0
   519   000042                     ADC_GetFrom_NON_BLOCKING@channel:
   520                           	callstack 0
   521                           
   522                           ; 1 bytes @ 0x12
   523   000042                     	ds	1
   524   000043                     lcd_4bit_send_data@command:
   525                           	callstack 0
   526   000043                     lcd_4bit_blink_en@ret:
   527                           	callstack 0
   528   000043                     gpio_pin_initialize@ret:
   529                           	callstack 0
   530   000043                     ADC_GetFrom_NON_BLOCKING@ret:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x13
   534   000043                     	ds	1
   535   000044                     ??_lcd_4bit_send_data:
   536                           
   537                           ; 1 bytes @ 0x14
   538   000044                     	ds	2
   539   000046                     lcd_4bit_send_data@ret:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x16
   543   000046                     	ds	1
   544   000047                     lcd_4bit_send_data@i:
   545                           	callstack 0
   546                           
   547                           ; 1 bytes @ 0x17
   548   000047                     	ds	1
   549   000048                     lcd_4bit_send_command@lcd:
   550                           	callstack 0
   551   000048                     lcd_4bit_send_char_data@lcd:
   552                           	callstack 0
   553                           
   554                           ; 1 bytes @ 0x18
   555   000048                     	ds	1
   556   000049                     lcd_4bit_send_command@command:
   557                           	callstack 0
   558   000049                     lcd_4bit_send_char_data@data:
   559                           	callstack 0
   560                           
   561                           ; 1 bytes @ 0x19
   562   000049                     	ds	1
   563   00004A                     lcd_4bit_send_command@ret:
   564                           	callstack 0
   565   00004A                     lcd_4bit_send_char_data@ret:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x1A
   569   00004A                     	ds	1
   570   00004B                     lcd_4bit_set_cursor_At@lcd:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x1B
   574   00004B                     	ds	1
   575   00004C                     lcd_4bit_set_cursor_At@row:
   576                           	callstack 0
   577                           
   578                           ; 1 bytes @ 0x1C
   579   00004C                     	ds	1
   580   00004D                     lcd_4bit_set_cursor_At@col:
   581                           	callstack 0
   582                           
   583                           ; 1 bytes @ 0x1D
   584   00004D                     	ds	1
   585   00004E                     ??_lcd_4bit_set_cursor_At:
   586                           
   587                           ; 1 bytes @ 0x1E
   588   00004E                     	ds	2
   589   000050                     lcd_4bit_set_cursor_At@ret:
   590                           	callstack 0
   591                           
   592                           ; 1 bytes @ 0x20
   593   000050                     	ds	1
   594   000051                     lcd_4bit_intialize@lcd:
   595                           	callstack 0
   596                           
   597                           ; 1 bytes @ 0x21
   598   000051                     	ds	1
   599   000052                     ??_lcd_4bit_intialize:
   600                           
   601                           ; 1 bytes @ 0x22
   602   000052                     	ds	1
   603                           
   604 ;;
   605 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   606 ;;
   607 ;; *************** function _main *****************
   608 ;; Defined at:
   609 ;;		line 68 in file "Application.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  argc            2    4[BANK0 ] int 
   612 ;;  argv            3    6[BANK0 ] PTR PTR unsigned char 
   613 ;; Auto vars:     Size  Location     Type
   614 ;;		None
   615 ;; Return value:  Size  Location     Type
   616 ;;                  2    4[BANK0 ] int 
   617 ;; Registers used:
   618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   619 ;; Tracked objects:
   620 ;;		On entry : 0/0
   621 ;;		On exit  : 0/0
   622 ;;		Unchanged: 0/0
   623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   624 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   626 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   627 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   628 ;;Total ram usage:        7 bytes
   629 ;; Hardware stack levels required when called: 9
   630 ;; This function calls:
   631 ;;		_ADC_GetFrom_NON_BLOCKING
   632 ;;		_ADC_INIT
   633 ;;		_lcd_4bit_intialize
   634 ;;		_lcd_4bit_send_string_pos
   635 ;; This function is called by:
   636 ;;		Startup code after reset
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           	psect	text0
   641   001A6E                     __ptext0:
   642                           	callstack 0
   643   001A6E                     _main:
   644                           	callstack 22
   645   001A6E                     
   646                           ;Application.c: 68: int main(int argc, char **argv);Application.c: 69: {;Application.c: 
      +                          70:  ADC_INIT(&ad1);
   647   001A6E  0E23               	movlw	low _ad1
   648   001A70  6E3D               	movwf	ADC_INIT@obj^0,c
   649   001A72  EC01  F00C         	call	_ADC_INIT	;wreg free
   650   001A76                     
   651                           ;Application.c: 72:  lcd_4bit_intialize(&lcd_1);
   652   001A76  0E2A               	movlw	low _lcd_1
   653   001A78  6E51               	movwf	lcd_4bit_intialize@lcd^0,c
   654   001A7A  EC75  F00A         	call	_lcd_4bit_intialize	;wreg free
   655   001A7E                     
   656                           ;Application.c: 74:  lcd_4bit_send_string_pos(&lcd_1, 1, 7, "ADC TEST");
   657   001A7E  0E2A               	movlw	low _lcd_1
   658   001A80  0100               	movlb	0	; () banked
   659   001A82  6F80               	movwf	lcd_4bit_send_string_pos@lcd& (0+255),b
   660   001A84  0E01               	movlw	1
   661   001A86  6F81               	movwf	lcd_4bit_send_string_pos@row& (0+255),b
   662   001A88  0E07               	movlw	7
   663   001A8A  6F82               	movwf	lcd_4bit_send_string_pos@column& (0+255),b
   664   001A8C  0E01               	movlw	low STR_4
   665   001A8E  6F83               	movwf	lcd_4bit_send_string_pos@str& (0+255),b
   666   001A90  EC4E  F00C         	call	_lcd_4bit_send_string_pos	;wreg free
   667   001A94                     
   668                           ;Application.c: 75:  _delay((unsigned long)((2000)*(16000000/4000.0)));
   669   001A94  0E29               	movlw	41
   670   001A96  0100               	movlb	0	; () banked
   671   001A98  6F8A               	movwf	(??_main+1)& (0+255),b
   672   001A9A  0E96               	movlw	150
   673   001A9C  6F89               	movwf	??_main& (0+255),b
   674   001A9E  0E7F               	movlw	127
   675   001AA0                     u3927:
   676   001AA0  2EE8               	decfsz	wreg,f,c
   677   001AA2  D7FE               	bra	u3927
   678   001AA4  2F89               	decfsz	??_main& (0+255),f,b
   679   001AA6  D7FC               	bra	u3927
   680   001AA8  2F8A               	decfsz	(??_main+1)& (0+255),f,b
   681   001AAA  D7FA               	bra	u3927
   682   001AAC                     l4897:
   683                           
   684                           ;Application.c: 77:   ADC_GetFrom_NON_BLOCKING(&ad1, ADC_CHANNEL_AN0);
   685   001AAC  0E23               	movlw	low _ad1
   686   001AAE  6E41               	movwf	ADC_GetFrom_NON_BLOCKING@obj^0,c
   687   001AB0  0E00               	movlw	0
   688   001AB2  6E42               	movwf	ADC_GetFrom_NON_BLOCKING@channel^0,c
   689   001AB4  EC05  F00E         	call	_ADC_GetFrom_NON_BLOCKING	;wreg free
   690   001AB8  EF56  F00D         	goto	l4897
   691   001ABC  EF07  F000         	goto	start
   692   001AC0                     __end_of_main:
   693                           	callstack 0
   694                           
   695 ;; *************** function _lcd_4bit_send_string_pos *****************
   696 ;; Defined at:
   697 ;;		line 116 in file "ECU_Layer/LCD/ecu_lcd.c"
   698 ;; Parameters:    Size  Location     Type
   699 ;;  lcd             1    0[BANK0 ] PTR const struct .
   700 ;;		 -> lcd_1(6), 
   701 ;;  row             1    1[BANK0 ] unsigned char 
   702 ;;  column          1    2[BANK0 ] unsigned char 
   703 ;;  str             1    3[BANK0 ] PTR unsigned char 
   704 ;;		 -> STR_4(9), 
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  ret             1    0        unsigned char 
   707 ;; Return value:  Size  Location     Type
   708 ;;                  1    wreg      unsigned char 
   709 ;; Registers used:
   710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   711 ;; Tracked objects:
   712 ;;		On entry : 0/0
   713 ;;		On exit  : 0/0
   714 ;;		Unchanged: 0/0
   715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   716 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   719 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   720 ;;Total ram usage:        4 bytes
   721 ;; Hardware stack levels used: 1
   722 ;; Hardware stack levels required when called: 8
   723 ;; This function calls:
   724 ;;		_lcd_4bit_send_char_data
   725 ;;		_lcd_4bit_set_cursor_At
   726 ;; This function is called by:
   727 ;;		_main
   728 ;; This function uses a non-reentrant model
   729 ;;
   730                           
   731                           	psect	text1
   732   00189C                     __ptext1:
   733                           	callstack 0
   734   00189C                     _lcd_4bit_send_string_pos:
   735                           	callstack 22
   736   00189C                     
   737                           ;ECU_Layer/LCD/ecu_lcd.c: 119:     if (((void*)0) == lcd) {
   738   00189C  0100               	movlb	0	; () banked
   739   00189E  5180               	movf	lcd_4bit_send_string_pos@lcd& (0+255),w,b
   740   0018A0  A4D8               	btfss	status,2,c
   741   0018A2  EF55  F00C         	goto	u3411
   742   0018A6  EF57  F00C         	goto	u3410
   743   0018AA                     u3411:
   744   0018AA  EF59  F00C         	goto	l4373
   745   0018AE                     u3410:
   746   0018AE                     
   747                           ; BSR set to: 0
   748                           ;ECU_Layer/LCD/ecu_lcd.c: 121:     } else {
   749   0018AE  EF80  F00C         	goto	l155
   750   0018B2                     l4373:
   751                           
   752                           ; BSR set to: 0
   753   0018B2  C080  F04B         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_cursor_At@lcd
   754   0018B6  C081  F04C         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_cursor_At@row
   755   0018BA  C082  F04D         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_cursor_At@col
   756   0018BE  EC5C  F00B         	call	_lcd_4bit_set_cursor_At	;wreg free
   757                           
   758                           ;ECU_Layer/LCD/ecu_lcd.c: 123:         while (*str) {
   759   0018C2  EF71  F00C         	goto	l4379
   760   0018C6                     l4375:
   761   0018C6  C080  F048         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
   762   0018CA  C083  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
   763   0018CE                     	if	1	;There is more than 1 active tblptr byte
   764   0018CE  0E10               	movlw	high __smallconst
   765   0018D0  6EF7               	movwf	tblptrh,c
   766   0018D2                     	endif
   767   0018D2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   768   0018D2  6AF8               	clrf	tblptru,c
   769   0018D4                     	endif
   770   0018D4                     	if	0	;tblptru may be non-zero
   771   0018D4                     	endif
   772   0018D4  0008               	tblrd		*
   773   0018D6  CFF5 F049          	movff	tablat,lcd_4bit_send_char_data@data
   774   0018DA  ECB0  F00C         	call	_lcd_4bit_send_char_data	;wreg free
   775   0018DE  0100               	movlb	0	; () banked
   776   0018E0  2B83               	incf	lcd_4bit_send_string_pos@str& (0+255),f,b
   777   0018E2                     l4379:
   778                           
   779                           ;ECU_Layer/LCD/ecu_lcd.c: 123:         while (*str) {
   780   0018E2  C083  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
   781   0018E6                     	if	1	;There is more than 1 active tblptr byte
   782   0018E6  0E10               	movlw	high __smallconst
   783   0018E8  6EF7               	movwf	tblptrh,c
   784   0018EA                     	endif
   785   0018EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
   786   0018EA  6AF8               	clrf	tblptru,c
   787   0018EC                     	endif
   788   0018EC                     	if	0	;tblptru may be non-zero
   789   0018EC                     	endif
   790   0018EC  0008               	tblrd		*
   791   0018EE  50F5               	movf	tablat,w,c
   792   0018F0  0900               	iorlw	0
   793   0018F2  A4D8               	btfss	status,2,c
   794   0018F4  EF7E  F00C         	goto	u3421
   795   0018F8  EF80  F00C         	goto	u3420
   796   0018FC                     u3421:
   797   0018FC  EF63  F00C         	goto	l4375
   798   001900                     u3420:
   799   001900                     l155:
   800   001900  0012               	return		;funcret
   801   001902                     __end_of_lcd_4bit_send_string_pos:
   802                           	callstack 0
   803                           
   804 ;; *************** function _lcd_4bit_send_char_data *****************
   805 ;; Defined at:
   806 ;;		line 72 in file "ECU_Layer/LCD/ecu_lcd.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  lcd             1   24[COMRAM] PTR const struct .
   809 ;;		 -> lcd_1(6), 
   810 ;;  data            1   25[COMRAM] unsigned char 
   811 ;; Auto vars:     Size  Location     Type
   812 ;;  ret             1   26[COMRAM] unsigned char 
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      unsigned char 
   815 ;; Registers used:
   816 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   822 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   823 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   825 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   826 ;;Total ram usage:        3 bytes
   827 ;; Hardware stack levels used: 1
   828 ;; Hardware stack levels required when called: 6
   829 ;; This function calls:
   830 ;;		_gpio_pin_write_logic
   831 ;;		_lcd_4bit_blink_en
   832 ;;		_lcd_4bit_send_data
   833 ;; This function is called by:
   834 ;;		_lcd_4bit_send_string_pos
   835 ;;		_lcd_4bit_send_char_data_pos
   836 ;;		_lcd_4bit_send_string
   837 ;;		_lcd_4bit_send_custom_char
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841                           	psect	text2
   842   001960                     __ptext2:
   843                           	callstack 0
   844   001960                     _lcd_4bit_send_char_data:
   845                           	callstack 23
   846   001960                     
   847                           ;ECU_Layer/LCD/ecu_lcd.c: 75:     if (((void*)0) == lcd) {
   848   001960  5048               	movf	lcd_4bit_send_char_data@lcd^0,w,c
   849   001962  A4D8               	btfss	status,2,c
   850   001964  EFB6  F00C         	goto	u3321
   851   001968  EFB8  F00C         	goto	u3320
   852   00196C                     u3321:
   853   00196C  EFBC  F00C         	goto	l4257
   854   001970                     u3320:
   855   001970                     
   856                           ;ECU_Layer/LCD/ecu_lcd.c: 76:         ret = (STD_ReturnType) 0x00;
   857   001970  0E00               	movlw	0
   858   001972  6E4A               	movwf	lcd_4bit_send_char_data@ret^0,c
   859                           
   860                           ;ECU_Layer/LCD/ecu_lcd.c: 77:     } else {
   861   001974  EFDC  F00C         	goto	l4259
   862   001978                     l4257:
   863                           
   864                           ;ECU_Layer/LCD/ecu_lcd.c: 78:         ret = gpio_pin_write_logic(&(lcd->rs), GPIO_HIGH);
   865   001978  C048  F03A         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@pin_config
   866   00197C  0E01               	movlw	1
   867   00197E  6E3B               	movwf	gpio_pin_write_logic@logic^0,c
   868   001980  EC6A  F009         	call	_gpio_pin_write_logic	;wreg free
   869   001984  6E4A               	movwf	lcd_4bit_send_char_data@ret^0,c
   870                           
   871                           ;ECU_Layer/LCD/ecu_lcd.c: 80:         ret = lcd_4bit_send_data(lcd, (data >> 4));
   872   001986  C048  F042         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_data@lcd
   873   00198A  3849               	swapf	lcd_4bit_send_char_data@data^0,w,c
   874   00198C  0B0F               	andlw	15
   875   00198E  6E43               	movwf	lcd_4bit_send_data@command^0,c
   876   001990  EC81  F00C         	call	_lcd_4bit_send_data	;wreg free
   877   001994  6E4A               	movwf	lcd_4bit_send_char_data@ret^0,c
   878                           
   879                           ;ECU_Layer/LCD/ecu_lcd.c: 82:         ret = lcd_4bit_blink_en(lcd);
   880   001996  C048  F042         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_blink_en@lcd
   881   00199A  ECC7  F00D         	call	_lcd_4bit_blink_en	;wreg free
   882   00199E  6E4A               	movwf	lcd_4bit_send_char_data@ret^0,c
   883                           
   884                           ;ECU_Layer/LCD/ecu_lcd.c: 84:         ret = lcd_4bit_send_data(lcd, (data));
   885   0019A0  C048  F042         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_data@lcd
   886   0019A4  C049  F043         	movff	lcd_4bit_send_char_data@data,lcd_4bit_send_data@command
   887   0019A8  EC81  F00C         	call	_lcd_4bit_send_data	;wreg free
   888   0019AC  6E4A               	movwf	lcd_4bit_send_char_data@ret^0,c
   889                           
   890                           ;ECU_Layer/LCD/ecu_lcd.c: 86:         ret = lcd_4bit_blink_en(lcd);
   891   0019AE  C048  F042         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_blink_en@lcd
   892   0019B2  ECC7  F00D         	call	_lcd_4bit_blink_en	;wreg free
   893   0019B6  6E4A               	movwf	lcd_4bit_send_char_data@ret^0,c
   894   0019B8                     l4259:
   895                           
   896                           ;ECU_Layer/LCD/ecu_lcd.c: 88:     return ret;
   897   0019B8  504A               	movf	lcd_4bit_send_char_data@ret^0,w,c
   898   0019BA  0012               	return		;funcret
   899   0019BC                     __end_of_lcd_4bit_send_char_data:
   900                           	callstack 0
   901                           
   902 ;; *************** function _lcd_4bit_intialize *****************
   903 ;; Defined at:
   904 ;;		line 19 in file "ECU_Layer/LCD/ecu_lcd.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;  lcd             1   33[COMRAM] PTR const struct .
   907 ;;		 -> lcd_1(6), 
   908 ;; Auto vars:     Size  Location     Type
   909 ;;  i               1    0[BANK0 ] unsigned char 
   910 ;;  ret             1    0        unsigned char 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  1    wreg      unsigned char 
   913 ;; Registers used:
   914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   920 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;      Totals:         2       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;Total ram usage:        3 bytes
   925 ;; Hardware stack levels used: 1
   926 ;; Hardware stack levels required when called: 8
   927 ;; This function calls:
   928 ;;		_gpio_pin_initialize
   929 ;;		_lcd_4bit_send_command
   930 ;;		_lcd_4bit_set_cursor_At
   931 ;; This function is called by:
   932 ;;		_main
   933 ;; This function uses a non-reentrant model
   934 ;;
   935                           
   936                           	psect	text3
   937   0014EA                     __ptext3:
   938                           	callstack 0
   939   0014EA                     _lcd_4bit_intialize:
   940                           	callstack 22
   941   0014EA                     
   942                           ;ECU_Layer/LCD/ecu_lcd.c: 22:     if (((void*)0) == lcd) {
   943   0014EA  5051               	movf	lcd_4bit_intialize@lcd^0,w,c
   944   0014EC  A4D8               	btfss	status,2,c
   945   0014EE  EF7B  F00A         	goto	u3381
   946   0014F2  EF7D  F00A         	goto	u3380
   947   0014F6                     u3381:
   948   0014F6  EF7F  F00A         	goto	l4317
   949   0014FA                     u3380:
   950   0014FA                     
   951                           ;ECU_Layer/LCD/ecu_lcd.c: 24:     } else {
   952   0014FA  EFEB  F00A         	goto	l124
   953   0014FE                     l4317:
   954                           
   955                           ;ECU_Layer/LCD/ecu_lcd.c: 26:         gpio_pin_initialize(&(lcd->en));
   956   0014FE  2851               	incf	lcd_4bit_intialize@lcd^0,w,c
   957   001500  6E42               	movwf	gpio_pin_initialize@pin_config^0,c
   958   001502  ECE6  F00D         	call	_gpio_pin_initialize	;wreg free
   959                           
   960                           ;ECU_Layer/LCD/ecu_lcd.c: 27:         gpio_pin_initialize(&(lcd->rs));
   961   001506  C051  F042         	movff	lcd_4bit_intialize@lcd,gpio_pin_initialize@pin_config
   962   00150A  ECE6  F00D         	call	_gpio_pin_initialize	;wreg free
   963   00150E                     
   964                           ;ECU_Layer/LCD/ecu_lcd.c: 28:         uint8_t i;;ECU_Layer/LCD/ecu_lcd.c: 29:         fo
      +                          r (i = 0; i < 4; i++) {
   965   00150E  0E00               	movlw	0
   966   001510  0100               	movlb	0	; () banked
   967   001512  6F80               	movwf	lcd_4bit_intialize@i& (0+255),b
   968   001514                     l4325:
   969                           
   970                           ; BSR set to: 0
   971                           ;ECU_Layer/LCD/ecu_lcd.c: 30:             gpio_pin_initialize(&(lcd->data_pin[i]));
   972   001514  5051               	movf	lcd_4bit_intialize@lcd^0,w,c
   973   001516  2580               	addwf	lcd_4bit_intialize@i& (0+255),w,b
   974   001518  0F02               	addlw	2
   975   00151A  6E42               	movwf	gpio_pin_initialize@pin_config^0,c
   976   00151C  ECE6  F00D         	call	_gpio_pin_initialize	;wreg free
   977   001520                     
   978                           ;ECU_Layer/LCD/ecu_lcd.c: 31:         }
   979   001520  0100               	movlb	0	; () banked
   980   001522  2B80               	incf	lcd_4bit_intialize@i& (0+255),f,b
   981   001524                     
   982                           ; BSR set to: 0
   983   001524  0E03               	movlw	3
   984   001526  6580               	cpfsgt	lcd_4bit_intialize@i& (0+255),b
   985   001528  EF98  F00A         	goto	u3391
   986   00152C  EF9A  F00A         	goto	u3390
   987   001530                     u3391:
   988   001530  EF8A  F00A         	goto	l4325
   989   001534                     u3390:
   990   001534                     
   991                           ; BSR set to: 0
   992                           ;ECU_Layer/LCD/ecu_lcd.c: 32:         _delay((unsigned long)((20)*(16000000/4000.0)));
   993   001534  0E68               	movlw	104
   994   001536  6E52               	movwf	??_lcd_4bit_intialize^0,c
   995   001538  0EE4               	movlw	228
   996   00153A                     u3937:
   997   00153A  2EE8               	decfsz	wreg,f,c
   998   00153C  D7FE               	bra	u3937
   999   00153E  2E52               	decfsz	??_lcd_4bit_intialize^0,f,c
  1000   001540  D7FC               	bra	u3937
  1001   001542  D000               	nop2	
  1002   001544  C051  F048         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1003   001548  0E38               	movlw	56
  1004   00154A  6E49               	movwf	lcd_4bit_send_command@command^0,c
  1005   00154C  ECDE  F00C         	call	_lcd_4bit_send_command	;wreg free
  1006   001550                     
  1007                           ;ECU_Layer/LCD/ecu_lcd.c: 35:         _delay((unsigned long)((5)*(16000000/4000.0)));
  1008   001550  0E1A               	movlw	26
  1009   001552  6E52               	movwf	??_lcd_4bit_intialize^0,c
  1010   001554  0EF8               	movlw	248
  1011   001556                     u3947:
  1012   001556  2EE8               	decfsz	wreg,f,c
  1013   001558  D7FE               	bra	u3947
  1014   00155A  2E52               	decfsz	??_lcd_4bit_intialize^0,f,c
  1015   00155C  D7FC               	bra	u3947
  1016   00155E  D000               	nop2	
  1017   001560  C051  F048         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1018   001564  0E38               	movlw	56
  1019   001566  6E49               	movwf	lcd_4bit_send_command@command^0,c
  1020   001568  ECDE  F00C         	call	_lcd_4bit_send_command	;wreg free
  1021   00156C                     
  1022                           ;ECU_Layer/LCD/ecu_lcd.c: 37:         _delay((unsigned long)((150)*(16000000/4000000.0))
      +                          );
  1023   00156C  0EC8               	movlw	200
  1024   00156E                     u3957:
  1025   00156E  2EE8               	decfsz	wreg,f,c
  1026   001570  D7FE               	bra	u3957
  1027   001572  C051  F048         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1028   001576  0E38               	movlw	56
  1029   001578  6E49               	movwf	lcd_4bit_send_command@command^0,c
  1030   00157A  ECDE  F00C         	call	_lcd_4bit_send_command	;wreg free
  1031   00157E  C051  F048         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1032   001582  0E01               	movlw	1
  1033   001584  6E49               	movwf	lcd_4bit_send_command@command^0,c
  1034   001586  ECDE  F00C         	call	_lcd_4bit_send_command	;wreg free
  1035   00158A  C051  F048         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1036   00158E  0E02               	movlw	2
  1037   001590  6E49               	movwf	lcd_4bit_send_command@command^0,c
  1038   001592  ECDE  F00C         	call	_lcd_4bit_send_command	;wreg free
  1039   001596  C051  F048         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1040   00159A  0E06               	movlw	6
  1041   00159C  6E49               	movwf	lcd_4bit_send_command@command^0,c
  1042   00159E  ECDE  F00C         	call	_lcd_4bit_send_command	;wreg free
  1043   0015A2  C051  F048         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1044   0015A6  0E0D               	movlw	13
  1045   0015A8  6E49               	movwf	lcd_4bit_send_command@command^0,c
  1046   0015AA  ECDE  F00C         	call	_lcd_4bit_send_command	;wreg free
  1047   0015AE  C051  F048         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1048   0015B2  0E28               	movlw	40
  1049   0015B4  6E49               	movwf	lcd_4bit_send_command@command^0,c
  1050   0015B6  ECDE  F00C         	call	_lcd_4bit_send_command	;wreg free
  1051   0015BA  C051  F048         	movff	lcd_4bit_intialize@lcd,lcd_4bit_send_command@lcd
  1052   0015BE  0E80               	movlw	128
  1053   0015C0  6E49               	movwf	lcd_4bit_send_command@command^0,c
  1054   0015C2  ECDE  F00C         	call	_lcd_4bit_send_command	;wreg free
  1055   0015C6  C051  F04B         	movff	lcd_4bit_intialize@lcd,lcd_4bit_set_cursor_At@lcd
  1056   0015CA  0E01               	movlw	1
  1057   0015CC  6E4C               	movwf	lcd_4bit_set_cursor_At@row^0,c
  1058   0015CE  0E01               	movlw	1
  1059   0015D0  6E4D               	movwf	lcd_4bit_set_cursor_At@col^0,c
  1060   0015D2  EC5C  F00B         	call	_lcd_4bit_set_cursor_At	;wreg free
  1061   0015D6                     l124:
  1062   0015D6  0012               	return		;funcret
  1063   0015D8                     __end_of_lcd_4bit_intialize:
  1064                           	callstack 0
  1065                           
  1066 ;; *************** function _lcd_4bit_set_cursor_At *****************
  1067 ;; Defined at:
  1068 ;;		line 333 in file "ECU_Layer/LCD/ecu_lcd.c"
  1069 ;; Parameters:    Size  Location     Type
  1070 ;;  lcd             1   27[COMRAM] PTR struct .
  1071 ;;		 -> lcd_1(6), 
  1072 ;;  row             1   28[COMRAM] unsigned char 
  1073 ;;  col             1   29[COMRAM] unsigned char 
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;  ret             1   32[COMRAM] unsigned char 
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      unsigned char 
  1078 ;; Registers used:
  1079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1085 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1086 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1087 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1088 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1089 ;;Total ram usage:        6 bytes
  1090 ;; Hardware stack levels used: 1
  1091 ;; Hardware stack levels required when called: 7
  1092 ;; This function calls:
  1093 ;;		_lcd_4bit_send_command
  1094 ;; This function is called by:
  1095 ;;		_lcd_4bit_intialize
  1096 ;;		_lcd_4bit_send_string_pos
  1097 ;;		_lcd_4bit_send_char_data_pos
  1098 ;; This function uses a non-reentrant model
  1099 ;;
  1100                           
  1101                           	psect	text4
  1102   0016B8                     __ptext4:
  1103                           	callstack 0
  1104   0016B8                     _lcd_4bit_set_cursor_At:
  1105                           	callstack 22
  1106   0016B8                     
  1107                           ;ECU_Layer/LCD/ecu_lcd.c: 335:     STD_ReturnType ret = (STD_ReturnType) 0x01;
  1108   0016B8  0E01               	movlw	1
  1109   0016BA  6E50               	movwf	lcd_4bit_set_cursor_At@ret^0,c
  1110                           
  1111                           ;ECU_Layer/LCD/ecu_lcd.c: 337:     if (((void*)0) == lcd) {
  1112   0016BC  504B               	movf	lcd_4bit_set_cursor_At@lcd^0,w,c
  1113   0016BE  A4D8               	btfss	status,2,c
  1114   0016C0  EF64  F00B         	goto	u3311
  1115   0016C4  EF66  F00B         	goto	u3310
  1116   0016C8                     u3311:
  1117   0016C8  EF92  F00B         	goto	l4243
  1118   0016CC                     u3310:
  1119   0016CC                     
  1120                           ;ECU_Layer/LCD/ecu_lcd.c: 338:         ret = (STD_ReturnType) 0x00;
  1121   0016CC  0E00               	movlw	0
  1122   0016CE  6E50               	movwf	lcd_4bit_set_cursor_At@ret^0,c
  1123                           
  1124                           ;ECU_Layer/LCD/ecu_lcd.c: 339:     } else {
  1125   0016D0  EFAF  F00B         	goto	l4245
  1126   0016D4                     l4233:
  1127                           
  1128                           ;ECU_Layer/LCD/ecu_lcd.c: 342:                 ret = lcd_4bit_send_command(lcd, (0x80 + 
      +                          col));
  1129   0016D4  C04B  F048         	movff	lcd_4bit_set_cursor_At@lcd,lcd_4bit_send_command@lcd
  1130   0016D8  504D               	movf	lcd_4bit_set_cursor_At@col^0,w,c
  1131   0016DA  0F80               	addlw	128
  1132   0016DC  6E49               	movwf	lcd_4bit_send_command@command^0,c
  1133   0016DE  ECDE  F00C         	call	_lcd_4bit_send_command	;wreg free
  1134   0016E2  6E50               	movwf	lcd_4bit_set_cursor_At@ret^0,c
  1135                           
  1136                           ;ECU_Layer/LCD/ecu_lcd.c: 343:                 break;
  1137   0016E4  EFAF  F00B         	goto	l4245
  1138   0016E8                     l4235:
  1139                           
  1140                           ;ECU_Layer/LCD/ecu_lcd.c: 346:                 ret = lcd_4bit_send_command(lcd, (0xc0 + 
      +                          col));
  1141   0016E8  C04B  F048         	movff	lcd_4bit_set_cursor_At@lcd,lcd_4bit_send_command@lcd
  1142   0016EC  504D               	movf	lcd_4bit_set_cursor_At@col^0,w,c
  1143   0016EE  0FC0               	addlw	192
  1144   0016F0  6E49               	movwf	lcd_4bit_send_command@command^0,c
  1145   0016F2  ECDE  F00C         	call	_lcd_4bit_send_command	;wreg free
  1146   0016F6  6E50               	movwf	lcd_4bit_set_cursor_At@ret^0,c
  1147                           
  1148                           ;ECU_Layer/LCD/ecu_lcd.c: 347:                 break;
  1149   0016F8  EFAF  F00B         	goto	l4245
  1150   0016FC                     l4237:
  1151                           
  1152                           ;ECU_Layer/LCD/ecu_lcd.c: 350:                 ret = lcd_4bit_send_command(lcd, (0x94 + 
      +                          col));
  1153   0016FC  C04B  F048         	movff	lcd_4bit_set_cursor_At@lcd,lcd_4bit_send_command@lcd
  1154   001700  504D               	movf	lcd_4bit_set_cursor_At@col^0,w,c
  1155   001702  0F94               	addlw	148
  1156   001704  6E49               	movwf	lcd_4bit_send_command@command^0,c
  1157   001706  ECDE  F00C         	call	_lcd_4bit_send_command	;wreg free
  1158   00170A  6E50               	movwf	lcd_4bit_set_cursor_At@ret^0,c
  1159                           
  1160                           ;ECU_Layer/LCD/ecu_lcd.c: 351:                 break;
  1161   00170C  EFAF  F00B         	goto	l4245
  1162   001710                     l4239:
  1163                           
  1164                           ;ECU_Layer/LCD/ecu_lcd.c: 354:                 ret = lcd_4bit_send_command(lcd, (0xd4 + 
      +                          col));
  1165   001710  C04B  F048         	movff	lcd_4bit_set_cursor_At@lcd,lcd_4bit_send_command@lcd
  1166   001714  504D               	movf	lcd_4bit_set_cursor_At@col^0,w,c
  1167   001716  0FD4               	addlw	212
  1168   001718  6E49               	movwf	lcd_4bit_send_command@command^0,c
  1169   00171A  ECDE  F00C         	call	_lcd_4bit_send_command	;wreg free
  1170   00171E  6E50               	movwf	lcd_4bit_set_cursor_At@ret^0,c
  1171                           
  1172                           ;ECU_Layer/LCD/ecu_lcd.c: 355:                 break;
  1173   001720  EFAF  F00B         	goto	l4245
  1174   001724                     l4243:
  1175   001724  504C               	movf	lcd_4bit_set_cursor_At@row^0,w,c
  1176   001726  6E4E               	movwf	??_lcd_4bit_set_cursor_At^0,c
  1177   001728  6A4F               	clrf	(??_lcd_4bit_set_cursor_At+1)^0,c
  1178                           
  1179                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1180                           ; Switch size 1, requested type "simple"
  1181                           ; Number of cases is 1, Range of values is 0 to 0
  1182                           ; switch strategies available:
  1183                           ; Name         Instructions Cycles
  1184                           ; simple_byte            4     3 (average)
  1185                           ;	Chosen strategy is simple_byte
  1186   00172A  504F               	movf	(??_lcd_4bit_set_cursor_At+1)^0,w,c
  1187   00172C  0A00               	xorlw	0	; case 0
  1188   00172E  B4D8               	btfsc	status,2,c
  1189   001730  EF9C  F00B         	goto	l4979
  1190   001734  EFAF  F00B         	goto	l4245
  1191   001738                     l4979:
  1192                           
  1193                           ; Switch size 1, requested type "simple"
  1194                           ; Number of cases is 4, Range of values is 1 to 4
  1195                           ; switch strategies available:
  1196                           ; Name         Instructions Cycles
  1197                           ; simple_byte           13     7 (average)
  1198                           ;	Chosen strategy is simple_byte
  1199   001738  504E               	movf	??_lcd_4bit_set_cursor_At^0,w,c
  1200   00173A  0A01               	xorlw	1	; case 1
  1201   00173C  B4D8               	btfsc	status,2,c
  1202   00173E  EF6A  F00B         	goto	l4233
  1203   001742  0A03               	xorlw	3	; case 2
  1204   001744  B4D8               	btfsc	status,2,c
  1205   001746  EF74  F00B         	goto	l4235
  1206   00174A  0A01               	xorlw	1	; case 3
  1207   00174C  B4D8               	btfsc	status,2,c
  1208   00174E  EF7E  F00B         	goto	l4237
  1209   001752  0A07               	xorlw	7	; case 4
  1210   001754  B4D8               	btfsc	status,2,c
  1211   001756  EF88  F00B         	goto	l4239
  1212   00175A  EFAF  F00B         	goto	l4245
  1213   00175E                     l4245:
  1214                           
  1215                           ;ECU_Layer/LCD/ecu_lcd.c: 360:     return ret;
  1216   00175E  5050               	movf	lcd_4bit_set_cursor_At@ret^0,w,c
  1217   001760  0012               	return		;funcret
  1218   001762                     __end_of_lcd_4bit_set_cursor_At:
  1219                           	callstack 0
  1220                           
  1221 ;; *************** function _lcd_4bit_send_command *****************
  1222 ;; Defined at:
  1223 ;;		line 51 in file "ECU_Layer/LCD/ecu_lcd.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  lcd             1   24[COMRAM] PTR const struct .
  1226 ;;		 -> lcd_1(6), 
  1227 ;;  command         1   25[COMRAM] unsigned char 
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;  ret             1   26[COMRAM] unsigned char 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      unsigned char 
  1232 ;; Registers used:
  1233 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1239 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1242 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1243 ;;Total ram usage:        3 bytes
  1244 ;; Hardware stack levels used: 1
  1245 ;; Hardware stack levels required when called: 6
  1246 ;; This function calls:
  1247 ;;		_gpio_pin_write_logic
  1248 ;;		_lcd_4bit_blink_en
  1249 ;;		_lcd_4bit_send_data
  1250 ;; This function is called by:
  1251 ;;		_lcd_4bit_intialize
  1252 ;;		_lcd_4bit_set_cursor_At
  1253 ;;		_lcd_4bit_send_custom_char
  1254 ;; This function uses a non-reentrant model
  1255 ;;
  1256                           
  1257                           	psect	text5
  1258   0019BC                     __ptext5:
  1259                           	callstack 0
  1260   0019BC                     _lcd_4bit_send_command:
  1261                           	callstack 22
  1262   0019BC                     
  1263                           ;ECU_Layer/LCD/ecu_lcd.c: 54:     if (((void*)0) == lcd) {
  1264   0019BC  5048               	movf	lcd_4bit_send_command@lcd^0,w,c
  1265   0019BE  A4D8               	btfss	status,2,c
  1266   0019C0  EFE4  F00C         	goto	u3291
  1267   0019C4  EFE6  F00C         	goto	u3290
  1268   0019C8                     u3291:
  1269   0019C8  EFEA  F00C         	goto	l4213
  1270   0019CC                     u3290:
  1271   0019CC                     
  1272                           ;ECU_Layer/LCD/ecu_lcd.c: 55:         ret = (STD_ReturnType) 0x00;
  1273   0019CC  0E00               	movlw	0
  1274   0019CE  6E4A               	movwf	lcd_4bit_send_command@ret^0,c
  1275                           
  1276                           ;ECU_Layer/LCD/ecu_lcd.c: 56:     } else {
  1277   0019D0  EF0A  F00D         	goto	l4215
  1278   0019D4                     l4213:
  1279                           
  1280                           ;ECU_Layer/LCD/ecu_lcd.c: 58:         ret = gpio_pin_write_logic(&(lcd->rs), GPIO_LOW);
  1281   0019D4  C048  F03A         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@pin_config
  1282   0019D8  0E00               	movlw	0
  1283   0019DA  6E3B               	movwf	gpio_pin_write_logic@logic^0,c
  1284   0019DC  EC6A  F009         	call	_gpio_pin_write_logic	;wreg free
  1285   0019E0  6E4A               	movwf	lcd_4bit_send_command@ret^0,c
  1286                           
  1287                           ;ECU_Layer/LCD/ecu_lcd.c: 60:         ret = lcd_4bit_send_data(lcd, (command >> 4));
  1288   0019E2  C048  F042         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_data@lcd
  1289   0019E6  3849               	swapf	lcd_4bit_send_command@command^0,w,c
  1290   0019E8  0B0F               	andlw	15
  1291   0019EA  6E43               	movwf	lcd_4bit_send_data@command^0,c
  1292   0019EC  EC81  F00C         	call	_lcd_4bit_send_data	;wreg free
  1293   0019F0  6E4A               	movwf	lcd_4bit_send_command@ret^0,c
  1294                           
  1295                           ;ECU_Layer/LCD/ecu_lcd.c: 62:         ret = lcd_4bit_blink_en(lcd);
  1296   0019F2  C048  F042         	movff	lcd_4bit_send_command@lcd,lcd_4bit_blink_en@lcd
  1297   0019F6  ECC7  F00D         	call	_lcd_4bit_blink_en	;wreg free
  1298   0019FA  6E4A               	movwf	lcd_4bit_send_command@ret^0,c
  1299                           
  1300                           ;ECU_Layer/LCD/ecu_lcd.c: 64:         ret = lcd_4bit_send_data(lcd, (command));
  1301   0019FC  C048  F042         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_data@lcd
  1302   001A00  C049  F043         	movff	lcd_4bit_send_command@command,lcd_4bit_send_data@command
  1303   001A04  EC81  F00C         	call	_lcd_4bit_send_data	;wreg free
  1304   001A08  6E4A               	movwf	lcd_4bit_send_command@ret^0,c
  1305                           
  1306                           ;ECU_Layer/LCD/ecu_lcd.c: 66:         ret = lcd_4bit_blink_en(lcd);
  1307   001A0A  C048  F042         	movff	lcd_4bit_send_command@lcd,lcd_4bit_blink_en@lcd
  1308   001A0E  ECC7  F00D         	call	_lcd_4bit_blink_en	;wreg free
  1309   001A12  6E4A               	movwf	lcd_4bit_send_command@ret^0,c
  1310   001A14                     l4215:
  1311                           
  1312                           ;ECU_Layer/LCD/ecu_lcd.c: 69:     return ret;
  1313   001A14  504A               	movf	lcd_4bit_send_command@ret^0,w,c
  1314   001A16  0012               	return		;funcret
  1315   001A18                     __end_of_lcd_4bit_send_command:
  1316                           	callstack 0
  1317                           
  1318 ;; *************** function _lcd_4bit_send_data *****************
  1319 ;; Defined at:
  1320 ;;		line 304 in file "ECU_Layer/LCD/ecu_lcd.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  lcd             1   18[COMRAM] PTR struct .
  1323 ;;		 -> lcd_1(6), 
  1324 ;;  command         1   19[COMRAM] unsigned char 
  1325 ;; Auto vars:     Size  Location     Type
  1326 ;;  i               1   23[COMRAM] unsigned char 
  1327 ;;  ret             1   22[COMRAM] unsigned char 
  1328 ;; Return value:  Size  Location     Type
  1329 ;;                  1    wreg      unsigned char 
  1330 ;; Registers used:
  1331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1332 ;; Tracked objects:
  1333 ;;		On entry : 0/0
  1334 ;;		On exit  : 0/0
  1335 ;;		Unchanged: 0/0
  1336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1338 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1339 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1340 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1341 ;;Total ram usage:        6 bytes
  1342 ;; Hardware stack levels used: 1
  1343 ;; Hardware stack levels required when called: 5
  1344 ;; This function calls:
  1345 ;;		_gpio_pin_write_logic
  1346 ;; This function is called by:
  1347 ;;		_lcd_4bit_send_command
  1348 ;;		_lcd_4bit_send_char_data
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text6
  1353   001902                     __ptext6:
  1354                           	callstack 0
  1355   001902                     _lcd_4bit_send_data:
  1356                           	callstack 22
  1357   001902                     
  1358                           ;ECU_Layer/LCD/ecu_lcd.c: 308:     if (((void*)0) == lcd) {
  1359   001902  5042               	movf	lcd_4bit_send_data@lcd^0,w,c
  1360   001904  A4D8               	btfss	status,2,c
  1361   001906  EF87  F00C         	goto	u3201
  1362   00190A  EF89  F00C         	goto	u3200
  1363   00190E                     u3201:
  1364   00190E  EF8D  F00C         	goto	l4157
  1365   001912                     u3200:
  1366   001912                     
  1367                           ;ECU_Layer/LCD/ecu_lcd.c: 309:         ret = (STD_ReturnType) 0x00;
  1368   001912  0E00               	movlw	0
  1369   001914  6E46               	movwf	lcd_4bit_send_data@ret^0,c
  1370                           
  1371                           ;ECU_Layer/LCD/ecu_lcd.c: 310:     } else {
  1372   001916  EFAE  F00C         	goto	l4169
  1373   00191A                     l4157:
  1374                           
  1375                           ;ECU_Layer/LCD/ecu_lcd.c: 311:         uint8_t i;;ECU_Layer/LCD/ecu_lcd.c: 312:         
      +                          for (i = 0; i < 4; i++) {
  1376   00191A  0E00               	movlw	0
  1377   00191C  6E47               	movwf	lcd_4bit_send_data@i^0,c
  1378   00191E                     l4163:
  1379                           
  1380                           ;ECU_Layer/LCD/ecu_lcd.c: 313:             ret = gpio_pin_write_logic(&(lcd->data_pin[i]
      +                          ), (command >> i)&(uint8_t) (0x01));
  1381   00191E  5042               	movf	lcd_4bit_send_data@lcd^0,w,c
  1382   001920  2447               	addwf	lcd_4bit_send_data@i^0,w,c
  1383   001922  0F02               	addlw	2
  1384   001924  6E3A               	movwf	gpio_pin_write_logic@pin_config^0,c
  1385   001926  C047  F044         	movff	lcd_4bit_send_data@i,??_lcd_4bit_send_data
  1386   00192A  C043  F045         	movff	lcd_4bit_send_data@command,??_lcd_4bit_send_data+1
  1387   00192E  2A44               	incf	??_lcd_4bit_send_data^0,f,c
  1388   001930  EF9C  F00C         	goto	u3214
  1389   001934                     u3215:
  1390   001934  90D8               	bcf	status,0,c
  1391   001936  3245               	rrcf	(??_lcd_4bit_send_data+1)^0,f,c
  1392   001938                     u3214:
  1393   001938  2E44               	decfsz	??_lcd_4bit_send_data^0,f,c
  1394   00193A  EF9A  F00C         	goto	u3215
  1395   00193E  5045               	movf	(??_lcd_4bit_send_data+1)^0,w,c
  1396   001940  0B01               	andlw	1
  1397   001942  6E3B               	movwf	gpio_pin_write_logic@logic^0,c
  1398   001944  EC6A  F009         	call	_gpio_pin_write_logic	;wreg free
  1399   001948  6E46               	movwf	lcd_4bit_send_data@ret^0,c
  1400   00194A                     
  1401                           ;ECU_Layer/LCD/ecu_lcd.c: 314:         }
  1402   00194A  2A47               	incf	lcd_4bit_send_data@i^0,f,c
  1403   00194C  0E03               	movlw	3
  1404   00194E  6447               	cpfsgt	lcd_4bit_send_data@i^0,c
  1405   001950  EFAC  F00C         	goto	u3221
  1406   001954  EFAE  F00C         	goto	u3220
  1407   001958                     u3221:
  1408   001958  EF8F  F00C         	goto	l4163
  1409   00195C                     u3220:
  1410   00195C                     l4169:
  1411                           
  1412                           ;ECU_Layer/LCD/ecu_lcd.c: 316:     return ret;
  1413   00195C  5046               	movf	lcd_4bit_send_data@ret^0,w,c
  1414   00195E  0012               	return		;funcret
  1415   001960                     __end_of_lcd_4bit_send_data:
  1416                           	callstack 0
  1417                           
  1418 ;; *************** function _lcd_4bit_blink_en *****************
  1419 ;; Defined at:
  1420 ;;		line 319 in file "ECU_Layer/LCD/ecu_lcd.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;  lcd             1   18[COMRAM] PTR struct .
  1423 ;;		 -> lcd_1(6), 
  1424 ;; Auto vars:     Size  Location     Type
  1425 ;;  ret             1   19[COMRAM] unsigned char 
  1426 ;; Return value:  Size  Location     Type
  1427 ;;                  1    wreg      unsigned char 
  1428 ;; Registers used:
  1429 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1430 ;; Tracked objects:
  1431 ;;		On entry : 0/0
  1432 ;;		On exit  : 0/0
  1433 ;;		Unchanged: 0/0
  1434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1435 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1436 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1439 ;;Total ram usage:        2 bytes
  1440 ;; Hardware stack levels used: 1
  1441 ;; Hardware stack levels required when called: 5
  1442 ;; This function calls:
  1443 ;;		_gpio_pin_write_logic
  1444 ;; This function is called by:
  1445 ;;		_lcd_4bit_send_command
  1446 ;;		_lcd_4bit_send_char_data
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           	psect	text7
  1451   001B8E                     __ptext7:
  1452                           	callstack 0
  1453   001B8E                     _lcd_4bit_blink_en:
  1454                           	callstack 22
  1455   001B8E                     
  1456                           ;ECU_Layer/LCD/ecu_lcd.c: 323:     if (((void*)0) == lcd) {
  1457   001B8E  5042               	movf	lcd_4bit_blink_en@lcd^0,w,c
  1458   001B90  A4D8               	btfss	status,2,c
  1459   001B92  EFCD  F00D         	goto	u3231
  1460   001B96  EFCF  F00D         	goto	u3230
  1461   001B9A                     u3231:
  1462   001B9A  EFD3  F00D         	goto	l4177
  1463   001B9E                     u3230:
  1464   001B9E                     
  1465                           ;ECU_Layer/LCD/ecu_lcd.c: 324:         ret = (STD_ReturnType) 0x00;
  1466   001B9E  0E00               	movlw	0
  1467   001BA0  6E43               	movwf	lcd_4bit_blink_en@ret^0,c
  1468                           
  1469                           ;ECU_Layer/LCD/ecu_lcd.c: 325:     } else {
  1470   001BA2  EFE4  F00D         	goto	l4183
  1471   001BA6                     l4177:
  1472   001BA6  2842               	incf	lcd_4bit_blink_en@lcd^0,w,c
  1473   001BA8  6E3A               	movwf	gpio_pin_write_logic@pin_config^0,c
  1474   001BAA  0E01               	movlw	1
  1475   001BAC  6E3B               	movwf	gpio_pin_write_logic@logic^0,c
  1476   001BAE  EC6A  F009         	call	_gpio_pin_write_logic	;wreg free
  1477   001BB2                     
  1478                           ;ECU_Layer/LCD/ecu_lcd.c: 327:         _delay((unsigned long)((5)*(16000000/4000000.0)))
      +                          ;
  1479   001BB2  0E06               	movlw	6
  1480   001BB4                     u3967:
  1481   001BB4  2EE8               	decfsz	wreg,f,c
  1482   001BB6  D7FE               	bra	u3967
  1483   001BB8  D000               	nop2	
  1484   001BBA                     
  1485                           ;ECU_Layer/LCD/ecu_lcd.c: 328:         ret = gpio_pin_write_logic(&(lcd->en), GPIO_LOW);
  1486   001BBA  2842               	incf	lcd_4bit_blink_en@lcd^0,w,c
  1487   001BBC  6E3A               	movwf	gpio_pin_write_logic@pin_config^0,c
  1488   001BBE  0E00               	movlw	0
  1489   001BC0  6E3B               	movwf	gpio_pin_write_logic@logic^0,c
  1490   001BC2  EC6A  F009         	call	_gpio_pin_write_logic	;wreg free
  1491   001BC6  6E43               	movwf	lcd_4bit_blink_en@ret^0,c
  1492   001BC8                     l4183:
  1493                           
  1494                           ;ECU_Layer/LCD/ecu_lcd.c: 330:     return ret;
  1495   001BC8  5043               	movf	lcd_4bit_blink_en@ret^0,w,c
  1496   001BCA  0012               	return		;funcret
  1497   001BCC                     __end_of_lcd_4bit_blink_en:
  1498                           	callstack 0
  1499                           
  1500 ;; *************** function _gpio_pin_initialize *****************
  1501 ;; Defined at:
  1502 ;;		line 89 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1503 ;; Parameters:    Size  Location     Type
  1504 ;;  pin_config      1   18[COMRAM] PTR const struct .
  1505 ;;		 -> lcd_1$data_pin(4), lcd_1(6), relayInit@pinObj(1), led_init@pin_obj(1), 
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;  ret             1   19[COMRAM] unsigned char 
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      unsigned char 
  1510 ;; Registers used:
  1511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1517 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1520 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1521 ;;Total ram usage:        2 bytes
  1522 ;; Hardware stack levels used: 1
  1523 ;; Hardware stack levels required when called: 5
  1524 ;; This function calls:
  1525 ;;		_gpio_pin_direction_initialize
  1526 ;;		_gpio_pin_write_logic
  1527 ;; This function is called by:
  1528 ;;		_lcd_4bit_intialize
  1529 ;;		_segInit
  1530 ;;		_dcMotor_intit
  1531 ;;		_keypadInit
  1532 ;;		_lcd_8bit_intialize
  1533 ;;		_led_init
  1534 ;;		_relayInit
  1535 ;;		_interrupt_INTx_Pin_Init
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text8
  1540   001BCC                     __ptext8:
  1541                           	callstack 0
  1542   001BCC                     _gpio_pin_initialize:
  1543                           	callstack 24
  1544   001BCC                     
  1545                           ;MCAL_Layer/GPIO/hal_gpio.c: 89: STD_ReturnType gpio_pin_initialize(const pin_config_t *
      +                          pin_config);MCAL_Layer/GPIO/hal_gpio.c: 90: {;MCAL_Layer/GPIO/hal_gpio.c: 91:     STD_Re
      +                          turnType ret = (STD_ReturnType) 0x01;
  1546   001BCC  0E01               	movlw	1
  1547   001BCE  6E43               	movwf	gpio_pin_initialize@ret^0,c
  1548                           
  1549                           ;MCAL_Layer/GPIO/hal_gpio.c: 92:     if(((void*)0) == pin_config){
  1550   001BD0  5042               	movf	gpio_pin_initialize@pin_config^0,w,c
  1551   001BD2  A4D8               	btfss	status,2,c
  1552   001BD4  EFEE  F00D         	goto	u3301
  1553   001BD8  EFF0  F00D         	goto	u3300
  1554   001BDC                     u3301:
  1555   001BDC  EFF4  F00D         	goto	l4223
  1556   001BE0                     u3300:
  1557   001BE0                     
  1558                           ;MCAL_Layer/GPIO/hal_gpio.c: 93:         ret = (STD_ReturnType) 0x00;
  1559   001BE0  0E00               	movlw	0
  1560   001BE2  6E43               	movwf	gpio_pin_initialize@ret^0,c
  1561                           
  1562                           ;MCAL_Layer/GPIO/hal_gpio.c: 94:     }
  1563   001BE4  EF03  F00E         	goto	l4225
  1564   001BE8                     l4223:
  1565                           
  1566                           ;MCAL_Layer/GPIO/hal_gpio.c: 96:        gpio_pin_direction_initialize(pin_config);
  1567   001BE8  C042  F03A         	movff	gpio_pin_initialize@pin_config,gpio_pin_direction_initialize@pin_config
  1568   001BEC  ECF2  F009         	call	_gpio_pin_direction_initialize	;wreg free
  1569                           
  1570                           ;MCAL_Layer/GPIO/hal_gpio.c: 97:        gpio_pin_write_logic(pin_config,pin_config->logi
      +                          c);
  1571   001BF0  C042  F03A         	movff	gpio_pin_initialize@pin_config,gpio_pin_write_logic@pin_config
  1572   001BF4  5042               	movf	gpio_pin_initialize@pin_config^0,w,c
  1573   001BF6  6ED9               	movwf	fsr2l,c
  1574   001BF8  6ADA               	clrf	fsr2h,c
  1575   001BFA  0E00               	movlw	0
  1576   001BFC  BEDF               	btfsc	indf2,7,c
  1577   001BFE  0E01               	movlw	1
  1578   001C00  6E3B               	movwf	gpio_pin_write_logic@logic^0,c
  1579   001C02  EC6A  F009         	call	_gpio_pin_write_logic	;wreg free
  1580   001C06                     l4225:
  1581                           
  1582                           ;MCAL_Layer/GPIO/hal_gpio.c: 99:     return ret;
  1583   001C06  5043               	movf	gpio_pin_initialize@ret^0,w,c
  1584   001C08  0012               	return		;funcret
  1585   001C0A                     __end_of_gpio_pin_initialize:
  1586                           	callstack 0
  1587                           
  1588 ;; *************** function _gpio_pin_write_logic *****************
  1589 ;; Defined at:
  1590 ;;		line 51 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  pin_config      1   10[COMRAM] PTR struct .
  1593 ;;		 -> lcd_1$data_pin(4), lcd_1$rs(1), lcd_1(6), relayOFF@pinObj(1), 
  1594 ;;		 -> relayON@pinObj(1), relayInit@pinObj(1), led_off@pin_obj(1), led_on@pin_obj(1), 
  1595 ;;		 -> led_init@pin_obj(1), 
  1596 ;;  logic           1   11[COMRAM] enum E2972
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;  ret             1   17[COMRAM] unsigned char 
  1599 ;; Return value:  Size  Location     Type
  1600 ;;                  1    wreg      unsigned char 
  1601 ;; Registers used:
  1602 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1609 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1610 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1611 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1612 ;;Total ram usage:        8 bytes
  1613 ;; Hardware stack levels used: 1
  1614 ;; Hardware stack levels required when called: 4
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_lcd_4bit_send_command
  1619 ;;		_lcd_4bit_send_char_data
  1620 ;;		_lcd_4bit_send_data
  1621 ;;		_lcd_4bit_blink_en
  1622 ;;		_gpio_pin_initialize
  1623 ;;		_segWrite
  1624 ;;		_dcMotor_Move_right
  1625 ;;		_dcMotor_Move_left
  1626 ;;		_dcMotor_Stop
  1627 ;;		_keypadReadValue
  1628 ;;		_lcd_8bit_send_command
  1629 ;;		_lcd_8bit_send_char_data
  1630 ;;		_lcd_8bit_send_data
  1631 ;;		_lcd_8bit_blink_en
  1632 ;;		_led_on
  1633 ;;		_led_off
  1634 ;;		_relayON
  1635 ;;		_relayOFF
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           	psect	text9
  1640   0012D4                     __ptext9:
  1641                           	callstack 0
  1642   0012D4                     _gpio_pin_write_logic:
  1643                           	callstack 22
  1644   0012D4                     
  1645                           ;MCAL_Layer/GPIO/hal_gpio.c: 51: STD_ReturnType gpio_pin_write_logic(pin_config_t *pin_c
      +                          onfig,logic_t logic);MCAL_Layer/GPIO/hal_gpio.c: 52: {;MCAL_Layer/GPIO/hal_gpio.c: 53:  
      +                             STD_ReturnType ret = (STD_ReturnType) 0x01;
  1646   0012D4  0E01               	movlw	1
  1647   0012D6  6E41               	movwf	gpio_pin_write_logic@ret^0,c
  1648                           
  1649                           ;MCAL_Layer/GPIO/hal_gpio.c: 54:     if(((void*)0) == pin_config){
  1650   0012D8  503A               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1651   0012DA  A4D8               	btfss	status,2,c
  1652   0012DC  EF72  F009         	goto	u3151
  1653   0012E0  EF74  F009         	goto	u3150
  1654   0012E4                     u3151:
  1655   0012E4  EFDB  F009         	goto	l4143
  1656   0012E8                     u3150:
  1657   0012E8                     l4129:
  1658                           
  1659                           ;MCAL_Layer/GPIO/hal_gpio.c: 55:         ret = (STD_ReturnType) 0x00;
  1660   0012E8  0E00               	movlw	0
  1661   0012EA  6E41               	movwf	gpio_pin_write_logic@ret^0,c
  1662                           
  1663                           ;MCAL_Layer/GPIO/hal_gpio.c: 56:     }
  1664   0012EC  EFF0  F009         	goto	l4145
  1665   0012F0                     l4131:
  1666                           
  1667                           ;MCAL_Layer/GPIO/hal_gpio.c: 60:               (*(lat_regs[pin_config->port]) &= ~(0x01 
      +                          << pin_config->pin));
  1668   0012F0  503A               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1669   0012F2  6ED9               	movwf	fsr2l,c
  1670   0012F4  6ADA               	clrf	fsr2h,c
  1671   0012F6  30DF               	rrcf	223,w,c
  1672   0012F8  32E8               	rrcf	wreg,f,c
  1673   0012FA  32E8               	rrcf	wreg,f,c
  1674   0012FC  0B07               	andlw	7
  1675   0012FE  6E3C               	movwf	??_gpio_pin_write_logic^0,c
  1676   001300  0E01               	movlw	1
  1677   001302  6E3D               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1678   001304  2A3C               	incf	??_gpio_pin_write_logic^0,f,c
  1679   001306  EF87  F009         	goto	u3164
  1680   00130A                     u3165:
  1681   00130A  90D8               	bcf	status,0,c
  1682   00130C  363D               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1683   00130E                     u3164:
  1684   00130E  2E3C               	decfsz	??_gpio_pin_write_logic^0,f,c
  1685   001310  EF85  F009         	goto	u3165
  1686   001314  503D               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1687   001316  0AFF               	xorlw	255
  1688   001318  6E3E               	movwf	(??_gpio_pin_write_logic+2)^0,c
  1689   00131A  503A               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1690   00131C  6ED9               	movwf	fsr2l,c
  1691   00131E  6ADA               	clrf	fsr2h,c
  1692   001320  50DF               	movf	223,w,c
  1693   001322  0B07               	andlw	7
  1694   001324  0D02               	mullw	2
  1695   001326  50F3               	movf	243,w,c
  1696   001328  0F0B               	addlw	low _lat_regs
  1697   00132A  6ED9               	movwf	fsr2l,c
  1698   00132C  6ADA               	clrf	fsr2h,c
  1699   00132E  CFDE F03F          	movff	postinc2,??_gpio_pin_write_logic+3
  1700   001332  CFDD F040          	movff	postdec2,??_gpio_pin_write_logic+4
  1701   001336  C03F  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
  1702   00133A  C040  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
  1703   00133E  503E               	movf	(??_gpio_pin_write_logic+2)^0,w,c
  1704   001340  16DF               	andwf	indf2,f,c
  1705   001342                     
  1706                           ;MCAL_Layer/GPIO/hal_gpio.c: 61:               pin_config->logic = logic;
  1707   001342  503A               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1708   001344  6ED9               	movwf	fsr2l,c
  1709   001346  6ADA               	clrf	fsr2h,c
  1710   001348  B03B               	btfsc	gpio_pin_write_logic@logic^0,0,c
  1711   00134A  D002               	bra	u3175
  1712   00134C  9EDF               	bcf	indf2,7,c
  1713   00134E  D001               	bra	u3176
  1714   001350                     u3175:
  1715   001350  8EDF               	bsf	indf2,7,c
  1716   001352                     u3176:
  1717                           
  1718                           ;MCAL_Layer/GPIO/hal_gpio.c: 62:               break;
  1719   001352  EFF0  F009         	goto	l4145
  1720   001356                     l4135:
  1721                           
  1722                           ;MCAL_Layer/GPIO/hal_gpio.c: 65:               (*(lat_regs[pin_config->port]) |= (0x01 <
      +                          < pin_config->pin));
  1723   001356  503A               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1724   001358  6ED9               	movwf	fsr2l,c
  1725   00135A  6ADA               	clrf	fsr2h,c
  1726   00135C  30DF               	rrcf	223,w,c
  1727   00135E  32E8               	rrcf	wreg,f,c
  1728   001360  32E8               	rrcf	wreg,f,c
  1729   001362  0B07               	andlw	7
  1730   001364  6E3C               	movwf	??_gpio_pin_write_logic^0,c
  1731   001366  0E01               	movlw	1
  1732   001368  6E3D               	movwf	(??_gpio_pin_write_logic+1)^0,c
  1733   00136A  2A3C               	incf	??_gpio_pin_write_logic^0,f,c
  1734   00136C  EFBA  F009         	goto	u3184
  1735   001370                     u3185:
  1736   001370  90D8               	bcf	status,0,c
  1737   001372  363D               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
  1738   001374                     u3184:
  1739   001374  2E3C               	decfsz	??_gpio_pin_write_logic^0,f,c
  1740   001376  EFB8  F009         	goto	u3185
  1741   00137A  503A               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1742   00137C  6ED9               	movwf	fsr2l,c
  1743   00137E  6ADA               	clrf	fsr2h,c
  1744   001380  50DF               	movf	223,w,c
  1745   001382  0B07               	andlw	7
  1746   001384  0D02               	mullw	2
  1747   001386  50F3               	movf	243,w,c
  1748   001388  0F0B               	addlw	low _lat_regs
  1749   00138A  6ED9               	movwf	fsr2l,c
  1750   00138C  6ADA               	clrf	fsr2h,c
  1751   00138E  CFDE F03E          	movff	postinc2,??_gpio_pin_write_logic+2
  1752   001392  CFDD F03F          	movff	postdec2,??_gpio_pin_write_logic+3
  1753   001396  C03E  FFD9         	movff	??_gpio_pin_write_logic+2,fsr2l
  1754   00139A  C03F  FFDA         	movff	??_gpio_pin_write_logic+3,fsr2h
  1755   00139E  503D               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1756   0013A0  12DF               	iorwf	indf2,f,c
  1757   0013A2                     
  1758                           ;MCAL_Layer/GPIO/hal_gpio.c: 66:               pin_config->logic = logic;
  1759   0013A2  503A               	movf	gpio_pin_write_logic@pin_config^0,w,c
  1760   0013A4  6ED9               	movwf	fsr2l,c
  1761   0013A6  6ADA               	clrf	fsr2h,c
  1762   0013A8  B03B               	btfsc	gpio_pin_write_logic@logic^0,0,c
  1763   0013AA  D002               	bra	u3195
  1764   0013AC  9EDF               	bcf	indf2,7,c
  1765   0013AE  D001               	bra	u3196
  1766   0013B0                     u3195:
  1767   0013B0  8EDF               	bsf	indf2,7,c
  1768   0013B2                     u3196:
  1769                           
  1770                           ;MCAL_Layer/GPIO/hal_gpio.c: 67:               break;
  1771   0013B2  EFF0  F009         	goto	l4145
  1772   0013B6                     l4143:
  1773   0013B6  503B               	movf	gpio_pin_write_logic@logic^0,w,c
  1774   0013B8  6E3C               	movwf	??_gpio_pin_write_logic^0,c
  1775   0013BA  6A3D               	clrf	(??_gpio_pin_write_logic+1)^0,c
  1776                           
  1777                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1778                           ; Switch size 1, requested type "simple"
  1779                           ; Number of cases is 1, Range of values is 0 to 0
  1780                           ; switch strategies available:
  1781                           ; Name         Instructions Cycles
  1782                           ; simple_byte            4     3 (average)
  1783                           ;	Chosen strategy is simple_byte
  1784   0013BC  503D               	movf	(??_gpio_pin_write_logic+1)^0,w,c
  1785   0013BE  0A00               	xorlw	0	; case 0
  1786   0013C0  B4D8               	btfsc	status,2,c
  1787   0013C2  EFE5  F009         	goto	l4981
  1788   0013C6  EF74  F009         	goto	l4129
  1789   0013CA                     l4981:
  1790                           
  1791                           ; Switch size 1, requested type "simple"
  1792                           ; Number of cases is 2, Range of values is 0 to 1
  1793                           ; switch strategies available:
  1794                           ; Name         Instructions Cycles
  1795                           ; simple_byte            7     4 (average)
  1796                           ;	Chosen strategy is simple_byte
  1797   0013CA  503C               	movf	??_gpio_pin_write_logic^0,w,c
  1798   0013CC  0A00               	xorlw	0	; case 0
  1799   0013CE  B4D8               	btfsc	status,2,c
  1800   0013D0  EF78  F009         	goto	l4131
  1801   0013D4  0A01               	xorlw	1	; case 1
  1802   0013D6  B4D8               	btfsc	status,2,c
  1803   0013D8  EFAB  F009         	goto	l4135
  1804   0013DC  EF74  F009         	goto	l4129
  1805   0013E0                     l4145:
  1806                           
  1807                           ;MCAL_Layer/GPIO/hal_gpio.c: 74:     return ret;
  1808   0013E0  5041               	movf	gpio_pin_write_logic@ret^0,w,c
  1809   0013E2  0012               	return		;funcret
  1810   0013E4                     __end_of_gpio_pin_write_logic:
  1811                           	callstack 0
  1812                           
  1813 ;; *************** function _gpio_pin_direction_initialize *****************
  1814 ;; Defined at:
  1815 ;;		line 18 in file "MCAL_Layer/GPIO/hal_gpio.c"
  1816 ;; Parameters:    Size  Location     Type
  1817 ;;  pin_config      1   10[COMRAM] PTR const struct .
  1818 ;;		 -> lcd_1$data_pin(4), lcd_1(6), relayInit@pinObj(1), led_init@pin_obj(1), 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;  ret             1   16[COMRAM] unsigned char 
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      unsigned char 
  1823 ;; Registers used:
  1824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1830 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1831 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1832 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1833 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1834 ;;Total ram usage:        7 bytes
  1835 ;; Hardware stack levels used: 1
  1836 ;; Hardware stack levels required when called: 4
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_gpio_pin_initialize
  1841 ;;		_btn_init
  1842 ;;		_Interrupt_RBx_Init
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           	psect	text10
  1847   0013E4                     __ptext10:
  1848                           	callstack 0
  1849   0013E4                     _gpio_pin_direction_initialize:
  1850                           	callstack 24
  1851   0013E4                     
  1852                           ;MCAL_Layer/GPIO/hal_gpio.c: 18: STD_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config_t * pin_config);MCAL_Layer/GPIO/hal_gpio.c: 19: {;MCAL_Layer/GPIO/hal_gpio.c: 20:
      +                               STD_ReturnType ret = (STD_ReturnType) 0x01;
  1853   0013E4  0E01               	movlw	1
  1854   0013E6  6E40               	movwf	gpio_pin_direction_initialize@ret^0,c
  1855                           
  1856                           ;MCAL_Layer/GPIO/hal_gpio.c: 21:     if(((void*)0) == pin_config){
  1857   0013E8  503A               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  1858   0013EA  A4D8               	btfss	status,2,c
  1859   0013EC  EFFA  F009         	goto	u3241
  1860   0013F0  EFFC  F009         	goto	u3240
  1861   0013F4                     u3241:
  1862   0013F4  EF53  F00A         	goto	l4199
  1863   0013F8                     u3240:
  1864   0013F8                     l4189:
  1865                           
  1866                           ;MCAL_Layer/GPIO/hal_gpio.c: 22:         ret = (STD_ReturnType) 0x00;
  1867   0013F8  0E00               	movlw	0
  1868   0013FA  6E40               	movwf	gpio_pin_direction_initialize@ret^0,c
  1869                           
  1870                           ;MCAL_Layer/GPIO/hal_gpio.c: 23:     }
  1871   0013FC  EF73  F00A         	goto	l4201
  1872   001400                     l4191:
  1873                           
  1874                           ;MCAL_Layer/GPIO/hal_gpio.c: 27:               (*(tris_regs[pin_config->port]) &= ~(0x01
      +                           << pin_config->pin));
  1875   001400  503A               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  1876   001402  6ED9               	movwf	fsr2l,c
  1877   001404  6ADA               	clrf	fsr2h,c
  1878   001406  30DF               	rrcf	223,w,c
  1879   001408  32E8               	rrcf	wreg,f,c
  1880   00140A  32E8               	rrcf	wreg,f,c
  1881   00140C  0B07               	andlw	7
  1882   00140E  6E3B               	movwf	??_gpio_pin_direction_initialize^0,c
  1883   001410  0E01               	movlw	1
  1884   001412  6E3C               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1885   001414  2A3B               	incf	??_gpio_pin_direction_initialize^0,f,c
  1886   001416  EF0F  F00A         	goto	u3254
  1887   00141A                     u3255:
  1888   00141A  90D8               	bcf	status,0,c
  1889   00141C  363C               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1890   00141E                     u3254:
  1891   00141E  2E3B               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1892   001420  EF0D  F00A         	goto	u3255
  1893   001424  503C               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1894   001426  0AFF               	xorlw	255
  1895   001428  6E3D               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
  1896   00142A  503A               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  1897   00142C  6ED9               	movwf	fsr2l,c
  1898   00142E  6ADA               	clrf	fsr2h,c
  1899   001430  50DF               	movf	223,w,c
  1900   001432  0B07               	andlw	7
  1901   001434  0D02               	mullw	2
  1902   001436  50F3               	movf	243,w,c
  1903   001438  0F15               	addlw	low _tris_regs
  1904   00143A  6ED9               	movwf	fsr2l,c
  1905   00143C  6ADA               	clrf	fsr2h,c
  1906   00143E  CFDE F03E          	movff	postinc2,??_gpio_pin_direction_initialize+3
  1907   001442  CFDD F03F          	movff	postdec2,??_gpio_pin_direction_initialize+4
  1908   001446  C03E  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
  1909   00144A  C03F  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
  1910   00144E  503D               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
  1911   001450  16DF               	andwf	indf2,f,c
  1912                           
  1913                           ;MCAL_Layer/GPIO/hal_gpio.c: 28:               break;
  1914   001452  EF73  F00A         	goto	l4201
  1915   001456                     l4193:
  1916                           
  1917                           ;MCAL_Layer/GPIO/hal_gpio.c: 31:               (*(tris_regs[pin_config->port]) |= (0x01 
      +                          << pin_config->pin));
  1918   001456  503A               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  1919   001458  6ED9               	movwf	fsr2l,c
  1920   00145A  6ADA               	clrf	fsr2h,c
  1921   00145C  30DF               	rrcf	223,w,c
  1922   00145E  32E8               	rrcf	wreg,f,c
  1923   001460  32E8               	rrcf	wreg,f,c
  1924   001462  0B07               	andlw	7
  1925   001464  6E3B               	movwf	??_gpio_pin_direction_initialize^0,c
  1926   001466  0E01               	movlw	1
  1927   001468  6E3C               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
  1928   00146A  2A3B               	incf	??_gpio_pin_direction_initialize^0,f,c
  1929   00146C  EF3A  F00A         	goto	u3264
  1930   001470                     u3265:
  1931   001470  90D8               	bcf	status,0,c
  1932   001472  363C               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
  1933   001474                     u3264:
  1934   001474  2E3B               	decfsz	??_gpio_pin_direction_initialize^0,f,c
  1935   001476  EF38  F00A         	goto	u3265
  1936   00147A  503A               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  1937   00147C  6ED9               	movwf	fsr2l,c
  1938   00147E  6ADA               	clrf	fsr2h,c
  1939   001480  50DF               	movf	223,w,c
  1940   001482  0B07               	andlw	7
  1941   001484  0D02               	mullw	2
  1942   001486  50F3               	movf	243,w,c
  1943   001488  0F15               	addlw	low _tris_regs
  1944   00148A  6ED9               	movwf	fsr2l,c
  1945   00148C  6ADA               	clrf	fsr2h,c
  1946   00148E  CFDE F03D          	movff	postinc2,??_gpio_pin_direction_initialize+2
  1947   001492  CFDD F03E          	movff	postdec2,??_gpio_pin_direction_initialize+3
  1948   001496  C03D  FFD9         	movff	??_gpio_pin_direction_initialize+2,fsr2l
  1949   00149A  C03E  FFDA         	movff	??_gpio_pin_direction_initialize+3,fsr2h
  1950   00149E  503C               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1951   0014A0  12DF               	iorwf	indf2,f,c
  1952                           
  1953                           ;MCAL_Layer/GPIO/hal_gpio.c: 32:               break;
  1954   0014A2  EF73  F00A         	goto	l4201
  1955   0014A6                     l4199:
  1956   0014A6  503A               	movf	gpio_pin_direction_initialize@pin_config^0,w,c
  1957   0014A8  6ED9               	movwf	fsr2l,c
  1958   0014AA  6ADA               	clrf	fsr2h,c
  1959   0014AC  BCDF               	btfsc	indf2,6,c
  1960   0014AE  EF5B  F00A         	goto	u3271
  1961   0014B2  EF5E  F00A         	goto	u3270
  1962   0014B6                     u3271:
  1963   0014B6  0E01               	movlw	1
  1964   0014B8  EF5F  F00A         	goto	u3280
  1965   0014BC                     u3270:
  1966   0014BC  0E00               	movlw	0
  1967   0014BE                     u3280:
  1968   0014BE  6E3B               	movwf	??_gpio_pin_direction_initialize^0,c
  1969   0014C0  6A3C               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
  1970                           
  1971                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1972                           ; Switch size 1, requested type "simple"
  1973                           ; Number of cases is 1, Range of values is 0 to 0
  1974                           ; switch strategies available:
  1975                           ; Name         Instructions Cycles
  1976                           ; simple_byte            4     3 (average)
  1977                           ;	Chosen strategy is simple_byte
  1978   0014C2  503C               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
  1979   0014C4  0A00               	xorlw	0	; case 0
  1980   0014C6  B4D8               	btfsc	status,2,c
  1981   0014C8  EF68  F00A         	goto	l4983
  1982   0014CC  EFFC  F009         	goto	l4189
  1983   0014D0                     l4983:
  1984                           
  1985                           ; Switch size 1, requested type "simple"
  1986                           ; Number of cases is 2, Range of values is 0 to 1
  1987                           ; switch strategies available:
  1988                           ; Name         Instructions Cycles
  1989                           ; simple_byte            7     4 (average)
  1990                           ;	Chosen strategy is simple_byte
  1991   0014D0  503B               	movf	??_gpio_pin_direction_initialize^0,w,c
  1992   0014D2  0A00               	xorlw	0	; case 0
  1993   0014D4  B4D8               	btfsc	status,2,c
  1994   0014D6  EF00  F00A         	goto	l4191
  1995   0014DA  0A01               	xorlw	1	; case 1
  1996   0014DC  B4D8               	btfsc	status,2,c
  1997   0014DE  EF2B  F00A         	goto	l4193
  1998   0014E2  EFFC  F009         	goto	l4189
  1999   0014E6                     l4201:
  2000                           
  2001                           ;MCAL_Layer/GPIO/hal_gpio.c: 38:     return ret;
  2002   0014E6  5040               	movf	gpio_pin_direction_initialize@ret^0,w,c
  2003   0014E8  0012               	return		;funcret
  2004   0014EA                     __end_of_gpio_pin_direction_initialize:
  2005                           	callstack 0
  2006                           
  2007 ;; *************** function _ADC_INIT *****************
  2008 ;; Defined at:
  2009 ;;		line 18 in file "MCAL_Layer/ADC/hal_adc.c"
  2010 ;; Parameters:    Size  Location     Type
  2011 ;;  obj             1   13[COMRAM] PTR const struct .
  2012 ;;		 -> ad1(7), 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  ret             1    0        unsigned char 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      unsigned char 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2024 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2025 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2026 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2027 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2028 ;;Total ram usage:        2 bytes
  2029 ;; Hardware stack levels used: 1
  2030 ;; Hardware stack levels required when called: 5
  2031 ;; This function calls:
  2032 ;;		_ADC_CHANNEL_PIN_CONFIGURE
  2033 ;;		_ADC_RESULT_ADJUST
  2034 ;;		_ADC_VOLTAGE_REFRECE_CONFIGURE
  2035 ;; This function is called by:
  2036 ;;		_main
  2037 ;; This function uses a non-reentrant model
  2038 ;;
  2039                           
  2040                           	psect	text11
  2041   001802                     __ptext11:
  2042                           	callstack 0
  2043   001802                     _ADC_INIT:
  2044                           	callstack 25
  2045   001802                     
  2046                           ;MCAL_Layer/ADC/hal_adc.c: 22:  if (((void*)0) == obj) {
  2047   001802  503D               	movf	ADC_INIT@obj^0,w,c
  2048   001804  A4D8               	btfss	status,2,c
  2049   001806  EF07  F00C         	goto	u2261
  2050   00180A  EF09  F00C         	goto	u2260
  2051   00180E                     u2261:
  2052   00180E  EF0B  F00C         	goto	l762
  2053   001812                     u2260:
  2054   001812                     
  2055                           ;MCAL_Layer/ADC/hal_adc.c: 24:  } else {
  2056   001812  EF4D  F00C         	goto	l764
  2057   001816                     l762:
  2058                           
  2059                           ;MCAL_Layer/ADC/hal_adc.c: 26:   (ADCON0bits.ADON = 0);
  2060   001816  90C2               	bcf	194,0,c	;volatile
  2061   001818                     
  2062                           ;MCAL_Layer/ADC/hal_adc.c: 29:   ADCON2bits.ACQT = obj->aqcTime;
  2063   001818  503D               	movf	ADC_INIT@obj^0,w,c
  2064   00181A  6ED9               	movwf	fsr2l,c
  2065   00181C  6ADA               	clrf	fsr2h,c
  2066   00181E  0E03               	movlw	3
  2067   001820  26D9               	addwf	fsr2l,f,c
  2068   001822  50DF               	movf	indf2,w,c
  2069   001824  6E3E               	movwf	??_ADC_INIT^0,c
  2070   001826  463E               	rlncf	??_ADC_INIT^0,f,c
  2071   001828  463E               	rlncf	??_ADC_INIT^0,f,c
  2072   00182A  463E               	rlncf	??_ADC_INIT^0,f,c
  2073   00182C  50C0               	movf	192,w,c	;volatile
  2074   00182E  183E               	xorwf	??_ADC_INIT^0,w,c
  2075   001830  0BC7               	andlw	-57
  2076   001832  183E               	xorwf	??_ADC_INIT^0,w,c
  2077   001834  6EC0               	movwf	192,c	;volatile
  2078                           
  2079                           ;MCAL_Layer/ADC/hal_adc.c: 31:   ADCON2bits.ADCS = obj->clk;
  2080   001836  503D               	movf	ADC_INIT@obj^0,w,c
  2081   001838  6ED9               	movwf	fsr2l,c
  2082   00183A  6ADA               	clrf	fsr2h,c
  2083   00183C  0E04               	movlw	4
  2084   00183E  26D9               	addwf	fsr2l,f,c
  2085   001840  50DF               	movf	indf2,w,c
  2086   001842  6E3E               	movwf	??_ADC_INIT^0,c
  2087   001844  50C0               	movf	192,w,c	;volatile
  2088   001846  183E               	xorwf	??_ADC_INIT^0,w,c
  2089   001848  0BF8               	andlw	-8
  2090   00184A  183E               	xorwf	??_ADC_INIT^0,w,c
  2091   00184C  6EC0               	movwf	192,c	;volatile
  2092                           
  2093                           ;MCAL_Layer/ADC/hal_adc.c: 33:   ADCON0bits.CHS = obj->ch;
  2094   00184E  503D               	movf	ADC_INIT@obj^0,w,c
  2095   001850  6ED9               	movwf	fsr2l,c
  2096   001852  6ADA               	clrf	fsr2h,c
  2097   001854  0E05               	movlw	5
  2098   001856  26D9               	addwf	fsr2l,f,c
  2099   001858  50DF               	movf	indf2,w,c
  2100   00185A  6E3E               	movwf	??_ADC_INIT^0,c
  2101   00185C  463E               	rlncf	??_ADC_INIT^0,f,c
  2102   00185E  463E               	rlncf	??_ADC_INIT^0,f,c
  2103   001860  50C2               	movf	194,w,c	;volatile
  2104   001862  183E               	xorwf	??_ADC_INIT^0,w,c
  2105   001864  0BC3               	andlw	-61
  2106   001866  183E               	xorwf	??_ADC_INIT^0,w,c
  2107   001868  6EC2               	movwf	194,c	;volatile
  2108   00186A                     
  2109                           ;MCAL_Layer/ADC/hal_adc.c: 34:   ADC_CHANNEL_PIN_CONFIGURE(obj);
  2110   00186A  C03D  F03A         	movff	ADC_INIT@obj,ADC_CHANNEL_PIN_CONFIGURE@obj
  2111   00186E  ECEC  F00A         	call	_ADC_CHANNEL_PIN_CONFIGURE	;wreg free
  2112   001872                     
  2113                           ;MCAL_Layer/ADC/hal_adc.c: 38:   (PIE1bits.ADIE = 1);
  2114   001872  8C9D               	bsf	157,6,c	;volatile
  2115   001874                     
  2116                           ;MCAL_Layer/ADC/hal_adc.c: 39:   (PIR1bits.ADIF = 0);
  2117   001874  9C9E               	bcf	158,6,c	;volatile
  2118   001876                     
  2119                           ;MCAL_Layer/ADC/hal_adc.c: 52:   (INTCONbits.GIE = 1);
  2120   001876  8EF2               	bsf	242,7,c	;volatile
  2121   001878                     
  2122                           ;MCAL_Layer/ADC/hal_adc.c: 53:   (INTCONbits.PEIE = 1);
  2123   001878  8CF2               	bsf	242,6,c	;volatile
  2124   00187A                     
  2125                           ;MCAL_Layer/ADC/hal_adc.c: 56:   ADC_CALLBACK = obj->ADC_CallBack;
  2126   00187A  503D               	movf	ADC_INIT@obj^0,w,c
  2127   00187C  6ED9               	movwf	fsr2l,c
  2128   00187E  6ADA               	clrf	fsr2h,c
  2129   001880  CFDE F053          	movff	postinc2,_ADC_CALLBACK
  2130   001884  CFDD F054          	movff	postdec2,_ADC_CALLBACK+1
  2131   001888                     
  2132                           ;MCAL_Layer/ADC/hal_adc.c: 59:   ADC_RESULT_ADJUST(obj);
  2133   001888  C03D  F03A         	movff	ADC_INIT@obj,ADC_RESULT_ADJUST@obj
  2134   00188C  ECA7  F00D         	call	_ADC_RESULT_ADJUST	;wreg free
  2135   001890                     
  2136                           ;MCAL_Layer/ADC/hal_adc.c: 61:   ADC_VOLTAGE_REFRECE_CONFIGURE(obj);
  2137   001890  C03D  F03A         	movff	ADC_INIT@obj,ADC_VOLTAGE_REFRECE_CONFIGURE@obj
  2138   001894  EC84  F00D         	call	_ADC_VOLTAGE_REFRECE_CONFIGURE	;wreg free
  2139   001898                     
  2140                           ;MCAL_Layer/ADC/hal_adc.c: 64:   (ADCON0bits.ADON = 1);
  2141   001898  80C2               	bsf	194,0,c	;volatile
  2142   00189A                     l764:
  2143   00189A  0012               	return		;funcret
  2144   00189C                     __end_of_ADC_INIT:
  2145                           	callstack 0
  2146                           
  2147 ;; *************** function _ADC_VOLTAGE_REFRECE_CONFIGURE *****************
  2148 ;; Defined at:
  2149 ;;		line 216 in file "MCAL_Layer/ADC/hal_adc.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  obj             1   10[COMRAM] PTR struct .
  2152 ;;		 -> ad1(7), 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;                  1    wreg      void 
  2157 ;; Registers used:
  2158 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2164 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2167 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2168 ;;Total ram usage:        1 bytes
  2169 ;; Hardware stack levels used: 1
  2170 ;; Hardware stack levels required when called: 4
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_ADC_INIT
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text12
  2179   001B08                     __ptext12:
  2180                           	callstack 0
  2181   001B08                     _ADC_VOLTAGE_REFRECE_CONFIGURE:
  2182                           	callstack 25
  2183   001B08                     
  2184                           ;MCAL_Layer/ADC/hal_adc.c: 216: static __attribute__((inline)) void ADC_VOLTAGE_REFRECE_
      +                          CONFIGURE(ADC_conf_t * obj);MCAL_Layer/ADC/hal_adc.c: 217: {;MCAL_Layer/ADC/hal_adc.c: 2
      +                          18:  if (obj->ADC_Vref == 0x01U) {
  2185   001B08  503A               	movf	ADC_VOLTAGE_REFRECE_CONFIGURE@obj^0,w,c
  2186   001B0A  6ED9               	movwf	fsr2l,c
  2187   001B0C  6ADA               	clrf	fsr2h,c
  2188   001B0E  0E06               	movlw	6
  2189   001B10  26D9               	addwf	fsr2l,f,c
  2190   001B12  A2DF               	btfss	indf2,1,c
  2191   001B14  EF8E  F00D         	goto	u2101
  2192   001B18  EF90  F00D         	goto	u2100
  2193   001B1C                     u2101:
  2194   001B1C  EF94  F00D         	goto	l3321
  2195   001B20                     u2100:
  2196   001B20                     
  2197                           ;MCAL_Layer/ADC/hal_adc.c: 219:   (ADCON1bits.VCFG0 = 1, ADCON1bits.VCFG1 = 1);
  2198   001B20  88C1               	bsf	193,4,c	;volatile
  2199   001B22  8AC1               	bsf	193,5,c	;volatile
  2200                           
  2201                           ;MCAL_Layer/ADC/hal_adc.c: 220:  } else if (obj->ADC_Vref == 0x00U) {
  2202   001B24  EFA6  F00D         	goto	l844
  2203   001B28                     l3321:
  2204   001B28  503A               	movf	ADC_VOLTAGE_REFRECE_CONFIGURE@obj^0,w,c
  2205   001B2A  6ED9               	movwf	fsr2l,c
  2206   001B2C  6ADA               	clrf	fsr2h,c
  2207   001B2E  0E06               	movlw	6
  2208   001B30  26D9               	addwf	fsr2l,f,c
  2209   001B32  B2DF               	btfsc	indf2,1,c
  2210   001B34  EF9E  F00D         	goto	u2111
  2211   001B38  EFA0  F00D         	goto	u2110
  2212   001B3C                     u2111:
  2213   001B3C  EFA4  F00D         	goto	l842
  2214   001B40                     u2110:
  2215   001B40                     
  2216                           ;MCAL_Layer/ADC/hal_adc.c: 221:   (ADCON1bits.VCFG0 = 0, ADCON1bits.VCFG1 = 0);
  2217   001B40  98C1               	bcf	193,4,c	;volatile
  2218   001B42  9AC1               	bcf	193,5,c	;volatile
  2219                           
  2220                           ;MCAL_Layer/ADC/hal_adc.c: 222:  } else {
  2221   001B44  EFA6  F00D         	goto	l844
  2222   001B48                     l842:
  2223                           
  2224                           ;MCAL_Layer/ADC/hal_adc.c: 223:   (ADCON1bits.VCFG0 = 0, ADCON1bits.VCFG1 = 0);
  2225   001B48  98C1               	bcf	193,4,c	;volatile
  2226   001B4A  9AC1               	bcf	193,5,c	;volatile
  2227   001B4C                     l844:
  2228   001B4C  0012               	return		;funcret
  2229   001B4E                     __end_of_ADC_VOLTAGE_REFRECE_CONFIGURE:
  2230                           	callstack 0
  2231                           
  2232 ;; *************** function _ADC_RESULT_ADJUST *****************
  2233 ;; Defined at:
  2234 ;;		line 205 in file "MCAL_Layer/ADC/hal_adc.c"
  2235 ;; Parameters:    Size  Location     Type
  2236 ;;  obj             1   10[COMRAM] PTR struct .
  2237 ;;		 -> ad1(7), 
  2238 ;; Auto vars:     Size  Location     Type
  2239 ;;		None
  2240 ;; Return value:  Size  Location     Type
  2241 ;;                  1    wreg      void 
  2242 ;; Registers used:
  2243 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2244 ;; Tracked objects:
  2245 ;;		On entry : 0/0
  2246 ;;		On exit  : 0/0
  2247 ;;		Unchanged: 0/0
  2248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2249 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2252 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2253 ;;Total ram usage:        1 bytes
  2254 ;; Hardware stack levels used: 1
  2255 ;; Hardware stack levels required when called: 4
  2256 ;; This function calls:
  2257 ;;		Nothing
  2258 ;; This function is called by:
  2259 ;;		_ADC_INIT
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           	psect	text13
  2264   001B4E                     __ptext13:
  2265                           	callstack 0
  2266   001B4E                     _ADC_RESULT_ADJUST:
  2267                           	callstack 25
  2268   001B4E                     
  2269                           ;MCAL_Layer/ADC/hal_adc.c: 205: static __attribute__((inline)) void ADC_RESULT_ADJUST(AD
      +                          C_conf_t * obj);MCAL_Layer/ADC/hal_adc.c: 206: {;MCAL_Layer/ADC/hal_adc.c: 207:  if (obj
      +                          ->ADC_LR_ADJUST == 0x00U) {
  2270   001B4E  503A               	movf	ADC_RESULT_ADJUST@obj^0,w,c
  2271   001B50  6ED9               	movwf	fsr2l,c
  2272   001B52  6ADA               	clrf	fsr2h,c
  2273   001B54  0E06               	movlw	6
  2274   001B56  26D9               	addwf	fsr2l,f,c
  2275   001B58  B0DF               	btfsc	indf2,0,c
  2276   001B5A  EFB1  F00D         	goto	u2081
  2277   001B5E  EFB3  F00D         	goto	u2080
  2278   001B62                     u2081:
  2279   001B62  EFB6  F00D         	goto	l3313
  2280   001B66                     u2080:
  2281   001B66                     
  2282                           ;MCAL_Layer/ADC/hal_adc.c: 208:   (ADCON2bits.ADFM = 0);
  2283   001B66  9EC0               	bcf	192,7,c	;volatile
  2284                           
  2285                           ;MCAL_Layer/ADC/hal_adc.c: 209:  } else if (obj->ADC_LR_ADJUST == 0x01U) {
  2286   001B68  EFC6  F00D         	goto	l837
  2287   001B6C                     l3313:
  2288   001B6C  503A               	movf	ADC_RESULT_ADJUST@obj^0,w,c
  2289   001B6E  6ED9               	movwf	fsr2l,c
  2290   001B70  6ADA               	clrf	fsr2h,c
  2291   001B72  0E06               	movlw	6
  2292   001B74  26D9               	addwf	fsr2l,f,c
  2293   001B76  A0DF               	btfss	indf2,0,c
  2294   001B78  EFC0  F00D         	goto	u2091
  2295   001B7C  EFC2  F00D         	goto	u2090
  2296   001B80                     u2091:
  2297   001B80  EFC5  F00D         	goto	l835
  2298   001B84                     u2090:
  2299   001B84                     
  2300                           ;MCAL_Layer/ADC/hal_adc.c: 210:   (ADCON2bits.ADFM = 1);
  2301   001B84  8EC0               	bsf	192,7,c	;volatile
  2302                           
  2303                           ;MCAL_Layer/ADC/hal_adc.c: 211:  } else {
  2304   001B86  EFC6  F00D         	goto	l837
  2305   001B8A                     l835:
  2306                           
  2307                           ;MCAL_Layer/ADC/hal_adc.c: 212:   (ADCON2bits.ADFM = 1);
  2308   001B8A  8EC0               	bsf	192,7,c	;volatile
  2309   001B8C                     l837:
  2310   001B8C  0012               	return		;funcret
  2311   001B8E                     __end_of_ADC_RESULT_ADJUST:
  2312                           	callstack 0
  2313                           
  2314 ;; *************** function _ADC_GetFrom_NON_BLOCKING *****************
  2315 ;; Defined at:
  2316 ;;		line 158 in file "MCAL_Layer/ADC/hal_adc.c"
  2317 ;; Parameters:    Size  Location     Type
  2318 ;;  obj             1   17[COMRAM] PTR const struct .
  2319 ;;		 -> ad1(7), 
  2320 ;;  channel         1   18[COMRAM] enum E3036
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;  ret             1   19[COMRAM] unsigned char 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  1    wreg      unsigned char 
  2325 ;; Registers used:
  2326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2335 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2336 ;;Total ram usage:        3 bytes
  2337 ;; Hardware stack levels used: 1
  2338 ;; Hardware stack levels required when called: 6
  2339 ;; This function calls:
  2340 ;;		_ADC_SelectChannnel
  2341 ;;		_ADC_StartConversion
  2342 ;; This function is called by:
  2343 ;;		_main
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text14
  2348   001C0A                     __ptext14:
  2349                           	callstack 0
  2350   001C0A                     _ADC_GetFrom_NON_BLOCKING:
  2351                           	callstack 24
  2352   001C0A                     
  2353                           ;MCAL_Layer/ADC/hal_adc.c: 158: STD_ReturnType ADC_GetFrom_NON_BLOCKING(const ADC_conf_t
      +                           * obj, ADC_CHANNELS_SELECT_t channel);MCAL_Layer/ADC/hal_adc.c: 159: {;MCAL_Layer/ADC/h
      +                          al_adc.c: 160:  STD_ReturnType ret = (STD_ReturnType) 0x01;
  2354   001C0A  0E01               	movlw	1
  2355   001C0C  6E43               	movwf	ADC_GetFrom_NON_BLOCKING@ret^0,c
  2356                           
  2357                           ;MCAL_Layer/ADC/hal_adc.c: 162:  if (((void*)0) == obj) {
  2358   001C0E  5041               	movf	ADC_GetFrom_NON_BLOCKING@obj^0,w,c
  2359   001C10  A4D8               	btfss	status,2,c
  2360   001C12  EF0D  F00E         	goto	u2271
  2361   001C16  EF0F  F00E         	goto	u2270
  2362   001C1A                     u2271:
  2363   001C1A  EF11  F00E         	goto	l3493
  2364   001C1E                     u2270:
  2365   001C1E                     
  2366                           ;MCAL_Layer/ADC/hal_adc.c: 164:  } else {
  2367   001C1E  EF1D  F00E         	goto	l812
  2368   001C22                     l3493:
  2369                           
  2370                           ;MCAL_Layer/ADC/hal_adc.c: 165:   ret &= ADC_SelectChannnel(obj, channel);
  2371   001C22  C041  F03D         	movff	ADC_GetFrom_NON_BLOCKING@obj,ADC_SelectChannnel@obj
  2372   001C26  C042  F03E         	movff	ADC_GetFrom_NON_BLOCKING@channel,ADC_SelectChannnel@channel
  2373   001C2A  EC60  F00D         	call	_ADC_SelectChannnel	;wreg free
  2374   001C2E  1643               	andwf	ADC_GetFrom_NON_BLOCKING@ret^0,f,c
  2375   001C30                     
  2376                           ;MCAL_Layer/ADC/hal_adc.c: 166:   ret &= ADC_StartConversion(obj);
  2377   001C30  C041  F03A         	movff	ADC_GetFrom_NON_BLOCKING@obj,ADC_StartConversion@obj
  2378   001C34  EC4D  F00E         	call	_ADC_StartConversion	;wreg free
  2379   001C38  1643               	andwf	ADC_GetFrom_NON_BLOCKING@ret^0,f,c
  2380   001C3A                     l812:
  2381   001C3A  0012               	return		;funcret
  2382   001C3C                     __end_of_ADC_GetFrom_NON_BLOCKING:
  2383                           	callstack 0
  2384                           
  2385 ;; *************** function _ADC_StartConversion *****************
  2386 ;; Defined at:
  2387 ;;		line 100 in file "MCAL_Layer/ADC/hal_adc.c"
  2388 ;; Parameters:    Size  Location     Type
  2389 ;;  obj             1   10[COMRAM] PTR const struct .
  2390 ;;		 -> ad1(7), 
  2391 ;; Auto vars:     Size  Location     Type
  2392 ;;  ret             1   11[COMRAM] unsigned char 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  1    wreg      unsigned char 
  2395 ;; Registers used:
  2396 ;;		wreg, status,2
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2402 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2403 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2405 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2406 ;;Total ram usage:        2 bytes
  2407 ;; Hardware stack levels used: 1
  2408 ;; Hardware stack levels required when called: 4
  2409 ;; This function calls:
  2410 ;;		Nothing
  2411 ;; This function is called by:
  2412 ;;		_ADC_GetFrom_NON_BLOCKING
  2413 ;;		_ADC_GetResFrom
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           
  2417                           	psect	text15
  2418   001C9A                     __ptext15:
  2419                           	callstack 0
  2420   001C9A                     _ADC_StartConversion:
  2421                           	callstack 25
  2422   001C9A                     
  2423                           ;MCAL_Layer/ADC/hal_adc.c: 100: STD_ReturnType ADC_StartConversion(const ADC_conf_t * ob
      +                          j);MCAL_Layer/ADC/hal_adc.c: 101: {;MCAL_Layer/ADC/hal_adc.c: 102:  STD_ReturnType ret =
      +                           (STD_ReturnType) 0x01;
  2424   001C9A  0E01               	movlw	1
  2425   001C9C  6E3B               	movwf	ADC_StartConversion@ret^0,c
  2426                           
  2427                           ;MCAL_Layer/ADC/hal_adc.c: 104:  if (((void*)0) == obj) {
  2428   001C9E  503A               	movf	ADC_StartConversion@obj^0,w,c
  2429   001CA0  A4D8               	btfss	status,2,c
  2430   001CA2  EF55  F00E         	goto	u2131
  2431   001CA6  EF57  F00E         	goto	u2130
  2432   001CAA                     u2131:
  2433   001CAA  EF5B  F00E         	goto	l777
  2434   001CAE                     u2130:
  2435   001CAE                     
  2436                           ;MCAL_Layer/ADC/hal_adc.c: 105:   ret = (STD_ReturnType) 0x00;
  2437   001CAE  0E00               	movlw	0
  2438   001CB0  6E3B               	movwf	ADC_StartConversion@ret^0,c
  2439                           
  2440                           ;MCAL_Layer/ADC/hal_adc.c: 106:  } else {
  2441   001CB2  EF5C  F00E         	goto	l3343
  2442   001CB6                     l777:
  2443                           
  2444                           ;MCAL_Layer/ADC/hal_adc.c: 107:   (ADCON0bits.GODONE = 1);
  2445   001CB6  82C2               	bsf	194,1,c	;volatile
  2446   001CB8                     l3343:
  2447                           
  2448                           ;MCAL_Layer/ADC/hal_adc.c: 109:  return ret;
  2449   001CB8  503B               	movf	ADC_StartConversion@ret^0,w,c
  2450   001CBA  0012               	return		;funcret
  2451   001CBC                     __end_of_ADC_StartConversion:
  2452                           	callstack 0
  2453                           
  2454 ;; *************** function _ADC_SelectChannnel *****************
  2455 ;; Defined at:
  2456 ;;		line 86 in file "MCAL_Layer/ADC/hal_adc.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  obj             1   13[COMRAM] PTR struct .
  2459 ;;		 -> ad1(7), 
  2460 ;;  channel         1   14[COMRAM] enum E3036
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;  ret             1   16[COMRAM] unsigned char 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  1    wreg      unsigned char 
  2465 ;; Registers used:
  2466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2473 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2474 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2475 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2476 ;;Total ram usage:        4 bytes
  2477 ;; Hardware stack levels used: 1
  2478 ;; Hardware stack levels required when called: 5
  2479 ;; This function calls:
  2480 ;;		_ADC_CHANNEL_PIN_CONFIGURE
  2481 ;; This function is called by:
  2482 ;;		_ADC_GetFrom_NON_BLOCKING
  2483 ;;		_ADC_GetResFrom
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           	psect	text16
  2488   001AC0                     __ptext16:
  2489                           	callstack 0
  2490   001AC0                     _ADC_SelectChannnel:
  2491                           	callstack 24
  2492   001AC0                     
  2493                           ;MCAL_Layer/ADC/hal_adc.c: 86: STD_ReturnType ADC_SelectChannnel(ADC_conf_t * obj, ADC_C
      +                          HANNELS_SELECT_t channel);MCAL_Layer/ADC/hal_adc.c: 87: {;MCAL_Layer/ADC/hal_adc.c: 88: 
      +                           STD_ReturnType ret = (STD_ReturnType) 0x01;
  2494   001AC0  0E01               	movlw	1
  2495   001AC2  6E40               	movwf	ADC_SelectChannnel@ret^0,c
  2496                           
  2497                           ;MCAL_Layer/ADC/hal_adc.c: 90:  if (((void*)0) == obj) {
  2498   001AC4  503D               	movf	ADC_SelectChannnel@obj^0,w,c
  2499   001AC6  A4D8               	btfss	status,2,c
  2500   001AC8  EF68  F00D         	goto	u2121
  2501   001ACC  EF6A  F00D         	goto	u2120
  2502   001AD0                     u2121:
  2503   001AD0  EF6E  F00D         	goto	l3329
  2504   001AD4                     u2120:
  2505   001AD4                     
  2506                           ;MCAL_Layer/ADC/hal_adc.c: 91:   ret = (STD_ReturnType) 0x00;
  2507   001AD4  0E00               	movlw	0
  2508   001AD6  6E40               	movwf	ADC_SelectChannnel@ret^0,c
  2509                           
  2510                           ;MCAL_Layer/ADC/hal_adc.c: 92:  } else {
  2511   001AD8  EF82  F00D         	goto	l3335
  2512   001ADC                     l3329:
  2513                           
  2514                           ;MCAL_Layer/ADC/hal_adc.c: 93:   ADCON0bits.CHS = channel;
  2515   001ADC  C03E  F03F         	movff	ADC_SelectChannnel@channel,??_ADC_SelectChannnel
  2516   001AE0  463F               	rlncf	??_ADC_SelectChannnel^0,f,c
  2517   001AE2  463F               	rlncf	??_ADC_SelectChannnel^0,f,c
  2518   001AE4  50C2               	movf	194,w,c	;volatile
  2519   001AE6  183F               	xorwf	??_ADC_SelectChannnel^0,w,c
  2520   001AE8  0BC3               	andlw	-61
  2521   001AEA  183F               	xorwf	??_ADC_SelectChannnel^0,w,c
  2522   001AEC  6EC2               	movwf	194,c	;volatile
  2523   001AEE                     
  2524                           ;MCAL_Layer/ADC/hal_adc.c: 94:   obj->ch = channel;
  2525   001AEE  503D               	movf	ADC_SelectChannnel@obj^0,w,c
  2526   001AF0  6ED9               	movwf	fsr2l,c
  2527   001AF2  6ADA               	clrf	fsr2h,c
  2528   001AF4  0E05               	movlw	5
  2529   001AF6  26D9               	addwf	fsr2l,f,c
  2530   001AF8  C03E  FFDF         	movff	ADC_SelectChannnel@channel,indf2
  2531   001AFC                     
  2532                           ;MCAL_Layer/ADC/hal_adc.c: 95:   ADC_CHANNEL_PIN_CONFIGURE(obj);
  2533   001AFC  C03D  F03A         	movff	ADC_SelectChannnel@obj,ADC_CHANNEL_PIN_CONFIGURE@obj
  2534   001B00  ECEC  F00A         	call	_ADC_CHANNEL_PIN_CONFIGURE	;wreg free
  2535   001B04                     l3335:
  2536                           
  2537                           ;MCAL_Layer/ADC/hal_adc.c: 97:  return ret;
  2538   001B04  5040               	movf	ADC_SelectChannnel@ret^0,w,c
  2539   001B06  0012               	return		;funcret
  2540   001B08                     __end_of_ADC_SelectChannnel:
  2541                           	callstack 0
  2542                           
  2543 ;; *************** function _ADC_CHANNEL_PIN_CONFIGURE *****************
  2544 ;; Defined at:
  2545 ;;		line 173 in file "MCAL_Layer/ADC/hal_adc.c"
  2546 ;; Parameters:    Size  Location     Type
  2547 ;;  obj             1   10[COMRAM] PTR struct .
  2548 ;;		 -> ad1(7), 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2560 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2564 ;;Total ram usage:        3 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; Hardware stack levels required when called: 4
  2567 ;; This function calls:
  2568 ;;		Nothing
  2569 ;; This function is called by:
  2570 ;;		_ADC_INIT
  2571 ;;		_ADC_SelectChannnel
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text17
  2576   0015D8                     __ptext17:
  2577                           	callstack 0
  2578   0015D8                     _ADC_CHANNEL_PIN_CONFIGURE:
  2579                           	callstack 25
  2580   0015D8                     
  2581                           ;MCAL_Layer/ADC/hal_adc.c: 173: static __attribute__((inline)) void ADC_CHANNEL_PIN_CONF
      +                          IGURE(ADC_conf_t * obj);MCAL_Layer/ADC/hal_adc.c: 174: {;MCAL_Layer/ADC/hal_adc.c: 175: 
      +                           switch (obj->ch) {
  2582   0015D8  EF15  F00B         	goto	l3205
  2583   0015DC                     l3177:
  2584   0015DC  8092               	bsf	146,0,c	;volatile
  2585                           
  2586                           ;MCAL_Layer/ADC/hal_adc.c: 177:   break;
  2587   0015DE  EF5B  F00B         	goto	l830
  2588   0015E2                     l3179:
  2589   0015E2  8292               	bsf	146,1,c	;volatile
  2590                           
  2591                           ;MCAL_Layer/ADC/hal_adc.c: 179:   break;
  2592   0015E4  EF5B  F00B         	goto	l830
  2593   0015E8                     l3181:
  2594   0015E8  8492               	bsf	146,2,c	;volatile
  2595                           
  2596                           ;MCAL_Layer/ADC/hal_adc.c: 181:   break;
  2597   0015EA  EF5B  F00B         	goto	l830
  2598   0015EE                     l3183:
  2599   0015EE  8692               	bsf	146,3,c	;volatile
  2600                           
  2601                           ;MCAL_Layer/ADC/hal_adc.c: 183:   break;
  2602   0015F0  EF5B  F00B         	goto	l830
  2603   0015F4                     l3185:
  2604   0015F4  8A92               	bsf	146,5,c	;volatile
  2605                           
  2606                           ;MCAL_Layer/ADC/hal_adc.c: 185:   break;
  2607   0015F6  EF5B  F00B         	goto	l830
  2608   0015FA                     l3187:
  2609   0015FA  8096               	bsf	150,0,c	;volatile
  2610                           
  2611                           ;MCAL_Layer/ADC/hal_adc.c: 187:   break;
  2612   0015FC  EF5B  F00B         	goto	l830
  2613   001600                     l3189:
  2614   001600  8296               	bsf	150,1,c	;volatile
  2615                           
  2616                           ;MCAL_Layer/ADC/hal_adc.c: 189:   break;
  2617   001602  EF5B  F00B         	goto	l830
  2618   001606                     l3191:
  2619   001606  8496               	bsf	150,2,c	;volatile
  2620                           
  2621                           ;MCAL_Layer/ADC/hal_adc.c: 191:   break;
  2622   001608  EF5B  F00B         	goto	l830
  2623   00160C                     l3193:
  2624   00160C  8493               	bsf	147,2,c	;volatile
  2625                           
  2626                           ;MCAL_Layer/ADC/hal_adc.c: 193:   break;
  2627   00160E  EF5B  F00B         	goto	l830
  2628   001612                     l3195:
  2629   001612  8693               	bsf	147,3,c	;volatile
  2630                           
  2631                           ;MCAL_Layer/ADC/hal_adc.c: 195:   break;
  2632   001614  EF5B  F00B         	goto	l830
  2633   001618                     l3197:
  2634   001618  8293               	bsf	147,1,c	;volatile
  2635                           
  2636                           ;MCAL_Layer/ADC/hal_adc.c: 197:   break;
  2637   00161A  EF5B  F00B         	goto	l830
  2638   00161E                     l3199:
  2639   00161E  8893               	bsf	147,4,c	;volatile
  2640                           
  2641                           ;MCAL_Layer/ADC/hal_adc.c: 199:   break;
  2642   001620  EF5B  F00B         	goto	l830
  2643   001624                     l3201:
  2644   001624  8093               	bsf	147,0,c	;volatile
  2645                           
  2646                           ;MCAL_Layer/ADC/hal_adc.c: 201:   break;
  2647   001626  EF5B  F00B         	goto	l830
  2648   00162A                     l3205:
  2649   00162A  503A               	movf	ADC_CHANNEL_PIN_CONFIGURE@obj^0,w,c
  2650   00162C  6ED9               	movwf	fsr2l,c
  2651   00162E  6ADA               	clrf	fsr2h,c
  2652   001630  0E05               	movlw	5
  2653   001632  26D9               	addwf	fsr2l,f,c
  2654   001634  50DF               	movf	indf2,w,c
  2655   001636  6E3B               	movwf	??_ADC_CHANNEL_PIN_CONFIGURE^0,c
  2656   001638  6A3C               	clrf	(??_ADC_CHANNEL_PIN_CONFIGURE+1)^0,c
  2657                           
  2658                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2659                           ; Switch size 1, requested type "simple"
  2660                           ; Number of cases is 1, Range of values is 0 to 0
  2661                           ; switch strategies available:
  2662                           ; Name         Instructions Cycles
  2663                           ; simple_byte            4     3 (average)
  2664                           ;	Chosen strategy is simple_byte
  2665   00163A  503C               	movf	(??_ADC_CHANNEL_PIN_CONFIGURE+1)^0,w,c
  2666   00163C  0A00               	xorlw	0	; case 0
  2667   00163E  B4D8               	btfsc	status,2,c
  2668   001640  EF24  F00B         	goto	l4985
  2669   001644  EF5B  F00B         	goto	l830
  2670   001648                     l4985:
  2671                           
  2672                           ; Switch size 1, requested type "simple"
  2673                           ; Number of cases is 13, Range of values is 0 to 12
  2674                           ; switch strategies available:
  2675                           ; Name         Instructions Cycles
  2676                           ; simple_byte           40    21 (average)
  2677                           ;	Chosen strategy is simple_byte
  2678   001648  503B               	movf	??_ADC_CHANNEL_PIN_CONFIGURE^0,w,c
  2679   00164A  0A00               	xorlw	0	; case 0
  2680   00164C  B4D8               	btfsc	status,2,c
  2681   00164E  EFEE  F00A         	goto	l3177
  2682   001652  0A01               	xorlw	1	; case 1
  2683   001654  B4D8               	btfsc	status,2,c
  2684   001656  EFF1  F00A         	goto	l3179
  2685   00165A  0A03               	xorlw	3	; case 2
  2686   00165C  B4D8               	btfsc	status,2,c
  2687   00165E  EFF4  F00A         	goto	l3181
  2688   001662  0A01               	xorlw	1	; case 3
  2689   001664  B4D8               	btfsc	status,2,c
  2690   001666  EFF7  F00A         	goto	l3183
  2691   00166A  0A07               	xorlw	7	; case 4
  2692   00166C  B4D8               	btfsc	status,2,c
  2693   00166E  EFFA  F00A         	goto	l3185
  2694   001672  0A01               	xorlw	1	; case 5
  2695   001674  B4D8               	btfsc	status,2,c
  2696   001676  EFFD  F00A         	goto	l3187
  2697   00167A  0A03               	xorlw	3	; case 6
  2698   00167C  B4D8               	btfsc	status,2,c
  2699   00167E  EF00  F00B         	goto	l3189
  2700   001682  0A01               	xorlw	1	; case 7
  2701   001684  B4D8               	btfsc	status,2,c
  2702   001686  EF03  F00B         	goto	l3191
  2703   00168A  0A0F               	xorlw	15	; case 8
  2704   00168C  B4D8               	btfsc	status,2,c
  2705   00168E  EF06  F00B         	goto	l3193
  2706   001692  0A01               	xorlw	1	; case 9
  2707   001694  B4D8               	btfsc	status,2,c
  2708   001696  EF09  F00B         	goto	l3195
  2709   00169A  0A03               	xorlw	3	; case 10
  2710   00169C  B4D8               	btfsc	status,2,c
  2711   00169E  EF0C  F00B         	goto	l3197
  2712   0016A2  0A01               	xorlw	1	; case 11
  2713   0016A4  B4D8               	btfsc	status,2,c
  2714   0016A6  EF0F  F00B         	goto	l3199
  2715   0016AA  0A07               	xorlw	7	; case 12
  2716   0016AC  B4D8               	btfsc	status,2,c
  2717   0016AE  EF12  F00B         	goto	l3201
  2718   0016B2  EF5B  F00B         	goto	l830
  2719   0016B6                     l830:
  2720   0016B6  0012               	return		;funcret
  2721   0016B8                     __end_of_ADC_CHANNEL_PIN_CONFIGURE:
  2722                           	callstack 0
  2723                           
  2724 ;; *************** function _InterruptManager *****************
  2725 ;; Defined at:
  2726 ;;		line 39 in file "C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c"
  2727 ;; Parameters:    Size  Location     Type
  2728 ;;		None
  2729 ;; Auto vars:     Size  Location     Type
  2730 ;;		None
  2731 ;; Return value:  Size  Location     Type
  2732 ;;                  1    wreg      void 
  2733 ;; Registers used:
  2734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  2735 ;; Tracked objects:
  2736 ;;		On entry : 0/0
  2737 ;;		On exit  : 0/0
  2738 ;;		Unchanged: 0/0
  2739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2742 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2743 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2744 ;;Total ram usage:        4 bytes
  2745 ;; Hardware stack levels used: 1
  2746 ;; Hardware stack levels required when called: 3
  2747 ;; This function calls:
  2748 ;;		_ADC_ISR
  2749 ;;		_INT0_ISR
  2750 ;;		_INT1_ISR
  2751 ;;		_INT2_ISR
  2752 ;;		_RB4_ISR
  2753 ;;		_RB5_ISR
  2754 ;;		_RB6_ISR
  2755 ;;		_RB7_ISR
  2756 ;; This function is called by:
  2757 ;;		Interrupt level 2
  2758 ;; This function uses a non-reentrant model
  2759 ;;
  2760                           
  2761                           	psect	intcode
  2762   000008                     __pintcode:
  2763                           	callstack 0
  2764   000008                     _InterruptManager:
  2765                           	callstack 22
  2766                           
  2767                           ;incstack = 0
  2768   000008  8275               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2769   00000A  ED07  F008         	call	int_func,f	;refresh shadow registers
  2770                           
  2771                           	psect	intcode_body
  2772   00100E                     __pintcode_body:
  2773                           	callstack 22
  2774   00100E                     int_func:
  2775                           	callstack 22
  2776   00100E  0006               	pop		; remove dummy address from shadow register refresh
  2777   001010  CFFA F036          	movff	pclath,??_InterruptManager
  2778   001014  CFFB F037          	movff	pclatu,??_InterruptManager+1
  2779   001018  CFD9 F038          	movff	fsr2l,??_InterruptManager+2
  2780   00101C  CFDA F039          	movff	fsr2h,??_InterruptManager+3
  2781   001020                     
  2782                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 41: 
      +                           if ((INTCONbits.INT0IE == 1) && (INTCONbits.INT0IF == 1)) {
  2783   001020  A8F2               	btfss	242,4,c	;volatile
  2784   001022  EF15  F008         	goto	i2u272_41
  2785   001026  EF17  F008         	goto	i2u272_40
  2786   00102A                     i2u272_41:
  2787   00102A  EF20  F008         	goto	i2l3971
  2788   00102E                     i2u272_40:
  2789   00102E  A2F2               	btfss	242,1,c	;volatile
  2790   001030  EF1C  F008         	goto	i2u273_41
  2791   001034  EF1E  F008         	goto	i2u273_40
  2792   001038                     i2u273_41:
  2793   001038  EF20  F008         	goto	i2l3971
  2794   00103C                     i2u273_40:
  2795   00103C                     
  2796                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 42: 
      +                            INT0_ISR();
  2797   00103C  EC76  F00E         	call	_INT0_ISR	;wreg free
  2798   001040                     i2l3971:
  2799                           
  2800                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 44: 
      +                           if ((INTCON3bits.INT1E == 1) && (INTCON3bits.INT1IF == 1)) {
  2801   001040  A6F0               	btfss	240,3,c	;volatile
  2802   001042  EF25  F008         	goto	i2u274_41
  2803   001046  EF27  F008         	goto	i2u274_40
  2804   00104A                     i2u274_41:
  2805   00104A  EF30  F008         	goto	i2l3977
  2806   00104E                     i2u274_40:
  2807   00104E  A0F0               	btfss	240,0,c	;volatile
  2808   001050  EF2C  F008         	goto	i2u275_41
  2809   001054  EF2E  F008         	goto	i2u275_40
  2810   001058                     i2u275_41:
  2811   001058  EF30  F008         	goto	i2l3977
  2812   00105C                     i2u275_40:
  2813   00105C                     
  2814                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 45: 
      +                            INT1_ISR();
  2815   00105C  EC74  F00E         	call	_INT1_ISR	;wreg free
  2816   001060                     i2l3977:
  2817                           
  2818                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 47: 
      +                           if ((INTCON3bits.INT2IE == 1) && (INTCON3bits.INT2IF == 1)) {
  2819   001060  A8F0               	btfss	240,4,c	;volatile
  2820   001062  EF35  F008         	goto	i2u276_41
  2821   001066  EF37  F008         	goto	i2u276_40
  2822   00106A                     i2u276_41:
  2823   00106A  EF40  F008         	goto	i2l3983
  2824   00106E                     i2u276_40:
  2825   00106E  A2F0               	btfss	240,1,c	;volatile
  2826   001070  EF3C  F008         	goto	i2u277_41
  2827   001074  EF3E  F008         	goto	i2u277_40
  2828   001078                     i2u277_41:
  2829   001078  EF40  F008         	goto	i2l3983
  2830   00107C                     i2u277_40:
  2831   00107C                     
  2832                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 48: 
      +                            INT2_ISR();
  2833   00107C  EC72  F00E         	call	_INT2_ISR	;wreg free
  2834   001080                     i2l3983:
  2835                           
  2836                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 51: 
      +                           if ((INTCONbits.RBIE == 1) && (INTCONbits.RBIF == 1) && (PORTBbits.RB4 == 1) &&(RB4_Fla
      +                          g == 1)) {
  2837   001080  A6F2               	btfss	242,3,c	;volatile
  2838   001082  EF45  F008         	goto	i2u278_41
  2839   001086  EF47  F008         	goto	i2u278_40
  2840   00108A                     i2u278_41:
  2841   00108A  EF62  F008         	goto	i2l3995
  2842   00108E                     i2u278_40:
  2843   00108E  A0F2               	btfss	242,0,c	;volatile
  2844   001090  EF4C  F008         	goto	i2u279_41
  2845   001094  EF4E  F008         	goto	i2u279_40
  2846   001098                     i2u279_41:
  2847   001098  EF62  F008         	goto	i2l3995
  2848   00109C                     i2u279_40:
  2849   00109C  A881               	btfss	129,4,c	;volatile
  2850   00109E  EF53  F008         	goto	i2u280_41
  2851   0010A2  EF55  F008         	goto	i2u280_40
  2852   0010A6                     i2u280_41:
  2853   0010A6  EF62  F008         	goto	i2l3995
  2854   0010AA                     i2u280_40:
  2855   0010AA  0422               	decf	_RB4_Flag^0,w,c
  2856   0010AC  A4D8               	btfss	status,2,c
  2857   0010AE  EF5B  F008         	goto	i2u281_41
  2858   0010B2  EF5D  F008         	goto	i2u281_40
  2859   0010B6                     i2u281_41:
  2860   0010B6  EF62  F008         	goto	i2l3995
  2861   0010BA                     i2u281_40:
  2862   0010BA                     
  2863                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 52: 
      +                            RB4_Flag = 0;
  2864   0010BA  0E00               	movlw	0
  2865   0010BC  6E22               	movwf	_RB4_Flag^0,c
  2866   0010BE                     
  2867                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 53: 
      +                            RB4_ISR(1);
  2868   0010BE  0E01               	movlw	1
  2869   0010C0  EC70  F00E         	call	_RB4_ISR
  2870   0010C4                     i2l3995:
  2871                           
  2872                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 55: 
      +                           if ((INTCONbits.RBIE == 1) && (INTCONbits.RBIF == 1) && (PORTBbits.RB4 == 0) &&(RB4_Fla
      +                          g == 0)) {
  2873   0010C4  A6F2               	btfss	242,3,c	;volatile
  2874   0010C6  EF67  F008         	goto	i2u282_41
  2875   0010CA  EF69  F008         	goto	i2u282_40
  2876   0010CE                     i2u282_41:
  2877   0010CE  EF84  F008         	goto	i2l4007
  2878   0010D2                     i2u282_40:
  2879   0010D2  A0F2               	btfss	242,0,c	;volatile
  2880   0010D4  EF6E  F008         	goto	i2u283_41
  2881   0010D8  EF70  F008         	goto	i2u283_40
  2882   0010DC                     i2u283_41:
  2883   0010DC  EF84  F008         	goto	i2l4007
  2884   0010E0                     i2u283_40:
  2885   0010E0  B881               	btfsc	129,4,c	;volatile
  2886   0010E2  EF75  F008         	goto	i2u284_41
  2887   0010E6  EF77  F008         	goto	i2u284_40
  2888   0010EA                     i2u284_41:
  2889   0010EA  EF84  F008         	goto	i2l4007
  2890   0010EE                     i2u284_40:
  2891   0010EE  5022               	movf	_RB4_Flag^0,w,c
  2892   0010F0  A4D8               	btfss	status,2,c
  2893   0010F2  EF7D  F008         	goto	i2u285_41
  2894   0010F6  EF7F  F008         	goto	i2u285_40
  2895   0010FA                     i2u285_41:
  2896   0010FA  EF84  F008         	goto	i2l4007
  2897   0010FE                     i2u285_40:
  2898   0010FE                     
  2899                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 56: 
      +                            RB4_Flag = 1;
  2900   0010FE  0E01               	movlw	1
  2901   001100  6E22               	movwf	_RB4_Flag^0,c
  2902   001102                     
  2903                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 57: 
      +                            RB4_ISR(0);
  2904   001102  0E00               	movlw	0
  2905   001104  EC70  F00E         	call	_RB4_ISR
  2906   001108                     i2l4007:
  2907                           
  2908                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 60: 
      +                           if ((INTCONbits.RBIE == 1) && (INTCONbits.RBIF == 1) && (PORTBbits.RB5 == 1) &&(RB5_Fla
      +                          g == 1)) {
  2909   001108  A6F2               	btfss	242,3,c	;volatile
  2910   00110A  EF89  F008         	goto	i2u286_41
  2911   00110E  EF8B  F008         	goto	i2u286_40
  2912   001112                     i2u286_41:
  2913   001112  EFA6  F008         	goto	i2l4019
  2914   001116                     i2u286_40:
  2915   001116  A0F2               	btfss	242,0,c	;volatile
  2916   001118  EF90  F008         	goto	i2u287_41
  2917   00111C  EF92  F008         	goto	i2u287_40
  2918   001120                     i2u287_41:
  2919   001120  EFA6  F008         	goto	i2l4019
  2920   001124                     i2u287_40:
  2921   001124  AA81               	btfss	129,5,c	;volatile
  2922   001126  EF97  F008         	goto	i2u288_41
  2923   00112A  EF99  F008         	goto	i2u288_40
  2924   00112E                     i2u288_41:
  2925   00112E  EFA6  F008         	goto	i2l4019
  2926   001132                     i2u288_40:
  2927   001132  0421               	decf	_RB5_Flag^0,w,c
  2928   001134  A4D8               	btfss	status,2,c
  2929   001136  EF9F  F008         	goto	i2u289_41
  2930   00113A  EFA1  F008         	goto	i2u289_40
  2931   00113E                     i2u289_41:
  2932   00113E  EFA6  F008         	goto	i2l4019
  2933   001142                     i2u289_40:
  2934   001142                     
  2935                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 61: 
      +                            RB5_Flag = 0;
  2936   001142  0E00               	movlw	0
  2937   001144  6E21               	movwf	_RB5_Flag^0,c
  2938   001146                     
  2939                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 62: 
      +                            RB5_ISR(1);
  2940   001146  0E01               	movlw	1
  2941   001148  EC6E  F00E         	call	_RB5_ISR
  2942   00114C                     i2l4019:
  2943                           
  2944                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 64: 
      +                           if ((INTCONbits.RBIE == 1) && (INTCONbits.RBIF == 1) && (PORTBbits.RB5 == 0) &&(RB5_Fla
      +                          g == 0)) {
  2945   00114C  A6F2               	btfss	242,3,c	;volatile
  2946   00114E  EFAB  F008         	goto	i2u290_41
  2947   001152  EFAD  F008         	goto	i2u290_40
  2948   001156                     i2u290_41:
  2949   001156  EFC8  F008         	goto	i2l4031
  2950   00115A                     i2u290_40:
  2951   00115A  A0F2               	btfss	242,0,c	;volatile
  2952   00115C  EFB2  F008         	goto	i2u291_41
  2953   001160  EFB4  F008         	goto	i2u291_40
  2954   001164                     i2u291_41:
  2955   001164  EFC8  F008         	goto	i2l4031
  2956   001168                     i2u291_40:
  2957   001168  BA81               	btfsc	129,5,c	;volatile
  2958   00116A  EFB9  F008         	goto	i2u292_41
  2959   00116E  EFBB  F008         	goto	i2u292_40
  2960   001172                     i2u292_41:
  2961   001172  EFC8  F008         	goto	i2l4031
  2962   001176                     i2u292_40:
  2963   001176  5021               	movf	_RB5_Flag^0,w,c
  2964   001178  A4D8               	btfss	status,2,c
  2965   00117A  EFC1  F008         	goto	i2u293_41
  2966   00117E  EFC3  F008         	goto	i2u293_40
  2967   001182                     i2u293_41:
  2968   001182  EFC8  F008         	goto	i2l4031
  2969   001186                     i2u293_40:
  2970   001186                     
  2971                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 65: 
      +                            RB5_Flag = 1;
  2972   001186  0E01               	movlw	1
  2973   001188  6E21               	movwf	_RB5_Flag^0,c
  2974   00118A                     
  2975                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 66: 
      +                            RB5_ISR(0);
  2976   00118A  0E00               	movlw	0
  2977   00118C  EC6E  F00E         	call	_RB5_ISR
  2978   001190                     i2l4031:
  2979                           
  2980                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 70: 
      +                           if ((INTCONbits.RBIE == 1) && (INTCONbits.RBIF == 1) && (PORTBbits.RB6 == 1) &&(RB6_Fla
      +                          g == 1)) {
  2981   001190  A6F2               	btfss	242,3,c	;volatile
  2982   001192  EFCD  F008         	goto	i2u294_41
  2983   001196  EFCF  F008         	goto	i2u294_40
  2984   00119A                     i2u294_41:
  2985   00119A  EFEA  F008         	goto	i2l4043
  2986   00119E                     i2u294_40:
  2987   00119E  A0F2               	btfss	242,0,c	;volatile
  2988   0011A0  EFD4  F008         	goto	i2u295_41
  2989   0011A4  EFD6  F008         	goto	i2u295_40
  2990   0011A8                     i2u295_41:
  2991   0011A8  EFEA  F008         	goto	i2l4043
  2992   0011AC                     i2u295_40:
  2993   0011AC  AC81               	btfss	129,6,c	;volatile
  2994   0011AE  EFDB  F008         	goto	i2u296_41
  2995   0011B2  EFDD  F008         	goto	i2u296_40
  2996   0011B6                     i2u296_41:
  2997   0011B6  EFEA  F008         	goto	i2l4043
  2998   0011BA                     i2u296_40:
  2999   0011BA  0420               	decf	_RB6_Flag^0,w,c
  3000   0011BC  A4D8               	btfss	status,2,c
  3001   0011BE  EFE3  F008         	goto	i2u297_41
  3002   0011C2  EFE5  F008         	goto	i2u297_40
  3003   0011C6                     i2u297_41:
  3004   0011C6  EFEA  F008         	goto	i2l4043
  3005   0011CA                     i2u297_40:
  3006   0011CA                     
  3007                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 71: 
      +                            RB6_Flag = 0;
  3008   0011CA  0E00               	movlw	0
  3009   0011CC  6E20               	movwf	_RB6_Flag^0,c
  3010   0011CE                     
  3011                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 72: 
      +                            RB6_ISR(1);
  3012   0011CE  0E01               	movlw	1
  3013   0011D0  EC6C  F00E         	call	_RB6_ISR
  3014   0011D4                     i2l4043:
  3015                           
  3016                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 74: 
      +                           if ((INTCONbits.RBIE == 1) && (INTCONbits.RBIF == 1) && (PORTBbits.RB6 == 0) &&(RB6_Fla
      +                          g == 0)) {
  3017   0011D4  A6F2               	btfss	242,3,c	;volatile
  3018   0011D6  EFEF  F008         	goto	i2u298_41
  3019   0011DA  EFF1  F008         	goto	i2u298_40
  3020   0011DE                     i2u298_41:
  3021   0011DE  EF0C  F009         	goto	i2l4055
  3022   0011E2                     i2u298_40:
  3023   0011E2  A0F2               	btfss	242,0,c	;volatile
  3024   0011E4  EFF6  F008         	goto	i2u299_41
  3025   0011E8  EFF8  F008         	goto	i2u299_40
  3026   0011EC                     i2u299_41:
  3027   0011EC  EF0C  F009         	goto	i2l4055
  3028   0011F0                     i2u299_40:
  3029   0011F0  BC81               	btfsc	129,6,c	;volatile
  3030   0011F2  EFFD  F008         	goto	i2u300_41
  3031   0011F6  EFFF  F008         	goto	i2u300_40
  3032   0011FA                     i2u300_41:
  3033   0011FA  EF0C  F009         	goto	i2l4055
  3034   0011FE                     i2u300_40:
  3035   0011FE  5020               	movf	_RB6_Flag^0,w,c
  3036   001200  A4D8               	btfss	status,2,c
  3037   001202  EF05  F009         	goto	i2u301_41
  3038   001206  EF07  F009         	goto	i2u301_40
  3039   00120A                     i2u301_41:
  3040   00120A  EF0C  F009         	goto	i2l4055
  3041   00120E                     i2u301_40:
  3042   00120E                     
  3043                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 75: 
      +                            RB6_Flag = 1;
  3044   00120E  0E01               	movlw	1
  3045   001210  6E20               	movwf	_RB6_Flag^0,c
  3046   001212                     
  3047                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 76: 
      +                            RB6_ISR(0);
  3048   001212  0E00               	movlw	0
  3049   001214  EC6C  F00E         	call	_RB6_ISR
  3050   001218                     i2l4055:
  3051                           
  3052                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 80: 
      +                           if ((INTCONbits.RBIE == 1) && (INTCONbits.RBIF == 1) && (PORTBbits.RB7 == 1) &&(RB7_Fla
      +                          g == 1)) {
  3053   001218  A6F2               	btfss	242,3,c	;volatile
  3054   00121A  EF11  F009         	goto	i2u302_41
  3055   00121E  EF13  F009         	goto	i2u302_40
  3056   001222                     i2u302_41:
  3057   001222  EF2E  F009         	goto	i2l4067
  3058   001226                     i2u302_40:
  3059   001226  A0F2               	btfss	242,0,c	;volatile
  3060   001228  EF18  F009         	goto	i2u303_41
  3061   00122C  EF1A  F009         	goto	i2u303_40
  3062   001230                     i2u303_41:
  3063   001230  EF2E  F009         	goto	i2l4067
  3064   001234                     i2u303_40:
  3065   001234  AE81               	btfss	129,7,c	;volatile
  3066   001236  EF1F  F009         	goto	i2u304_41
  3067   00123A  EF21  F009         	goto	i2u304_40
  3068   00123E                     i2u304_41:
  3069   00123E  EF2E  F009         	goto	i2l4067
  3070   001242                     i2u304_40:
  3071   001242  041F               	decf	_RB7_Flag^0,w,c
  3072   001244  A4D8               	btfss	status,2,c
  3073   001246  EF27  F009         	goto	i2u305_41
  3074   00124A  EF29  F009         	goto	i2u305_40
  3075   00124E                     i2u305_41:
  3076   00124E  EF2E  F009         	goto	i2l4067
  3077   001252                     i2u305_40:
  3078   001252                     
  3079                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 81: 
      +                            RB7_Flag = 0;
  3080   001252  0E00               	movlw	0
  3081   001254  6E1F               	movwf	_RB7_Flag^0,c
  3082   001256                     
  3083                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 82: 
      +                            RB7_ISR(1);
  3084   001256  0E01               	movlw	1
  3085   001258  EC6A  F00E         	call	_RB7_ISR
  3086   00125C                     i2l4067:
  3087                           
  3088                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 84: 
      +                           if ((INTCONbits.RBIE == 1) && (INTCONbits.RBIF == 1) && (PORTBbits.RB7 == 0) &&(RB7_Fla
      +                          g == 0)) {
  3089   00125C  A6F2               	btfss	242,3,c	;volatile
  3090   00125E  EF33  F009         	goto	i2u306_41
  3091   001262  EF35  F009         	goto	i2u306_40
  3092   001266                     i2u306_41:
  3093   001266  EF50  F009         	goto	i2l4079
  3094   00126A                     i2u306_40:
  3095   00126A  A0F2               	btfss	242,0,c	;volatile
  3096   00126C  EF3A  F009         	goto	i2u307_41
  3097   001270  EF3C  F009         	goto	i2u307_40
  3098   001274                     i2u307_41:
  3099   001274  EF50  F009         	goto	i2l4079
  3100   001278                     i2u307_40:
  3101   001278  BE81               	btfsc	129,7,c	;volatile
  3102   00127A  EF41  F009         	goto	i2u308_41
  3103   00127E  EF43  F009         	goto	i2u308_40
  3104   001282                     i2u308_41:
  3105   001282  EF50  F009         	goto	i2l4079
  3106   001286                     i2u308_40:
  3107   001286  501F               	movf	_RB7_Flag^0,w,c
  3108   001288  A4D8               	btfss	status,2,c
  3109   00128A  EF49  F009         	goto	i2u309_41
  3110   00128E  EF4B  F009         	goto	i2u309_40
  3111   001292                     i2u309_41:
  3112   001292  EF50  F009         	goto	i2l4079
  3113   001296                     i2u309_40:
  3114   001296                     
  3115                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 85: 
      +                            RB7_Flag = 1;
  3116   001296  0E01               	movlw	1
  3117   001298  6E1F               	movwf	_RB7_Flag^0,c
  3118   00129A                     
  3119                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 86: 
      +                            RB7_ISR(0);
  3120   00129A  0E00               	movlw	0
  3121   00129C  EC6A  F00E         	call	_RB7_ISR
  3122   0012A0                     i2l4079:
  3123                           
  3124                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 89: 
      +                           if ((PIE1bits.ADIE == 1) && (PIR1bits.ADIF == 1)) {
  3125   0012A0  AC9D               	btfss	157,6,c	;volatile
  3126   0012A2  EF55  F009         	goto	i2u310_41
  3127   0012A6  EF57  F009         	goto	i2u310_40
  3128   0012AA                     i2u310_41:
  3129   0012AA  EF60  F009         	goto	i2l694
  3130   0012AE                     i2u310_40:
  3131   0012AE  AC9E               	btfss	158,6,c	;volatile
  3132   0012B0  EF5C  F009         	goto	i2u311_41
  3133   0012B4  EF5E  F009         	goto	i2u311_40
  3134   0012B8                     i2u311_41:
  3135   0012B8  EF60  F009         	goto	i2l694
  3136   0012BC                     i2u311_40:
  3137   0012BC                     
  3138                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_interrupt_manager.c: 90: 
      +                            ADC_ISR();
  3139   0012BC  EC36  F00E         	call	_ADC_ISR	;wreg free
  3140   0012C0                     i2l694:
  3141   0012C0  C039  FFDA         	movff	??_InterruptManager+3,fsr2h
  3142   0012C4  C038  FFD9         	movff	??_InterruptManager+2,fsr2l
  3143   0012C8  C037  FFFB         	movff	??_InterruptManager+1,pclatu
  3144   0012CC  C036  FFFA         	movff	??_InterruptManager,pclath
  3145   0012D0  9275               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3146   0012D2  0011               	retfie		f
  3147   0012D4                     __end_of_InterruptManager:
  3148                           	callstack 0
  3149                           
  3150 ;; *************** function _RB7_ISR *****************
  3151 ;; Defined at:
  3152 ;;		line 93 in file "C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;  src             1    wreg     unsigned char 
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  src             1    0[COMRAM] unsigned char 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3167 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3169 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;Total ram usage:        1 bytes
  3171 ;; Hardware stack levels used: 1
  3172 ;; This function calls:
  3173 ;;		Nothing
  3174 ;; This function is called by:
  3175 ;;		_InterruptManager
  3176 ;; This function uses a non-reentrant model
  3177 ;;
  3178                           
  3179                           	psect	text19
  3180   001CD4                     __ptext19:
  3181                           	callstack 0
  3182   001CD4                     _RB7_ISR:
  3183                           	callstack 24
  3184   001CD4                     
  3185                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_external_interrupt.c: 93:
      +                           void RB7_ISR(uint8_t src);C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal
      +                          _external_interrupt.c: 94: {;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mc
      +                          al_external_interrupt.c: 95:  (INTCONbits.RBIF = 0);
  3186   001CD4  90F2               	bcf	242,0,c	;volatile
  3187   001CD6  0012               	return		;funcret
  3188   001CD8                     __end_of_RB7_ISR:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function _RB6_ISR *****************
  3192 ;; Defined at:
  3193 ;;		line 82 in file "C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  src             1    wreg     unsigned char 
  3196 ;; Auto vars:     Size  Location     Type
  3197 ;;  src             1    0[COMRAM] unsigned char 
  3198 ;; Return value:  Size  Location     Type
  3199 ;;                  1    wreg      void 
  3200 ;; Registers used:
  3201 ;;		wreg
  3202 ;; Tracked objects:
  3203 ;;		On entry : 0/0
  3204 ;;		On exit  : 0/0
  3205 ;;		Unchanged: 0/0
  3206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3208 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3210 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3211 ;;Total ram usage:        1 bytes
  3212 ;; Hardware stack levels used: 1
  3213 ;; This function calls:
  3214 ;;		Nothing
  3215 ;; This function is called by:
  3216 ;;		_InterruptManager
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text20
  3221   001CD8                     __ptext20:
  3222                           	callstack 0
  3223   001CD8                     _RB6_ISR:
  3224                           	callstack 24
  3225   001CD8                     
  3226                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_external_interrupt.c: 82:
      +                           void RB6_ISR(uint8_t src);C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal
      +                          _external_interrupt.c: 83: {;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mc
      +                          al_external_interrupt.c: 84:  (INTCONbits.RBIF = 0);
  3227   001CD8  90F2               	bcf	242,0,c	;volatile
  3228   001CDA  0012               	return		;funcret
  3229   001CDC                     __end_of_RB6_ISR:
  3230                           	callstack 0
  3231                           
  3232 ;; *************** function _RB5_ISR *****************
  3233 ;; Defined at:
  3234 ;;		line 71 in file "C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  src             1    wreg     unsigned char 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;  src             1    0[COMRAM] unsigned char 
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      void 
  3241 ;; Registers used:
  3242 ;;		wreg
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;Total ram usage:        1 bytes
  3253 ;; Hardware stack levels used: 1
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_InterruptManager
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text21
  3262   001CDC                     __ptext21:
  3263                           	callstack 0
  3264   001CDC                     _RB5_ISR:
  3265                           	callstack 24
  3266   001CDC                     
  3267                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_external_interrupt.c: 71:
      +                           void RB5_ISR(uint8_t src);C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal
      +                          _external_interrupt.c: 72: {;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mc
      +                          al_external_interrupt.c: 73:  (INTCONbits.RBIF = 0);
  3268   001CDC  90F2               	bcf	242,0,c	;volatile
  3269   001CDE  0012               	return		;funcret
  3270   001CE0                     __end_of_RB5_ISR:
  3271                           	callstack 0
  3272                           
  3273 ;; *************** function _RB4_ISR *****************
  3274 ;; Defined at:
  3275 ;;		line 60 in file "C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3276 ;; Parameters:    Size  Location     Type
  3277 ;;  src             1    wreg     unsigned char 
  3278 ;; Auto vars:     Size  Location     Type
  3279 ;;  src             1    0[COMRAM] unsigned char 
  3280 ;; Return value:  Size  Location     Type
  3281 ;;                  1    wreg      void 
  3282 ;; Registers used:
  3283 ;;		wreg
  3284 ;; Tracked objects:
  3285 ;;		On entry : 0/0
  3286 ;;		On exit  : 0/0
  3287 ;;		Unchanged: 0/0
  3288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3290 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3292 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3293 ;;Total ram usage:        1 bytes
  3294 ;; Hardware stack levels used: 1
  3295 ;; This function calls:
  3296 ;;		Nothing
  3297 ;; This function is called by:
  3298 ;;		_InterruptManager
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           	psect	text22
  3303   001CE0                     __ptext22:
  3304                           	callstack 0
  3305   001CE0                     _RB4_ISR:
  3306                           	callstack 24
  3307   001CE0                     
  3308                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_external_interrupt.c: 60:
      +                           void RB4_ISR(uint8_t src);C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal
      +                          _external_interrupt.c: 61: {;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mc
      +                          al_external_interrupt.c: 62:  (INTCONbits.RBIF = 0);
  3309   001CE0  90F2               	bcf	242,0,c	;volatile
  3310   001CE2  0012               	return		;funcret
  3311   001CE4                     __end_of_RB4_ISR:
  3312                           	callstack 0
  3313                           
  3314 ;; *************** function _INT2_ISR *****************
  3315 ;; Defined at:
  3316 ;;		line 50 in file "C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;		None
  3319 ;; Auto vars:     Size  Location     Type
  3320 ;;		None
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  1    wreg      void 
  3323 ;; Registers used:
  3324 ;;		None
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;Total ram usage:        0 bytes
  3335 ;; Hardware stack levels used: 1
  3336 ;; This function calls:
  3337 ;;		Nothing
  3338 ;; This function is called by:
  3339 ;;		_InterruptManager
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343                           	psect	text23
  3344   001CE4                     __ptext23:
  3345                           	callstack 0
  3346   001CE4                     _INT2_ISR:
  3347                           	callstack 24
  3348   001CE4                     
  3349                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_external_interrupt.c: 53:
      +                            (INTCON3bits.INT2F = 0);
  3350   001CE4  92F0               	bcf	240,1,c	;volatile
  3351   001CE6  0012               	return		;funcret
  3352   001CE8                     __end_of_INT2_ISR:
  3353                           	callstack 0
  3354                           
  3355 ;; *************** function _INT1_ISR *****************
  3356 ;; Defined at:
  3357 ;;		line 40 in file "C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3358 ;; Parameters:    Size  Location     Type
  3359 ;;		None
  3360 ;; Auto vars:     Size  Location     Type
  3361 ;;		None
  3362 ;; Return value:  Size  Location     Type
  3363 ;;                  1    wreg      void 
  3364 ;; Registers used:
  3365 ;;		None
  3366 ;; Tracked objects:
  3367 ;;		On entry : 0/0
  3368 ;;		On exit  : 0/0
  3369 ;;		Unchanged: 0/0
  3370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;Total ram usage:        0 bytes
  3376 ;; Hardware stack levels used: 1
  3377 ;; This function calls:
  3378 ;;		Nothing
  3379 ;; This function is called by:
  3380 ;;		_InterruptManager
  3381 ;; This function uses a non-reentrant model
  3382 ;;
  3383                           
  3384                           	psect	text24
  3385   001CE8                     __ptext24:
  3386                           	callstack 0
  3387   001CE8                     _INT1_ISR:
  3388                           	callstack 24
  3389   001CE8                     
  3390                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_external_interrupt.c: 43:
      +                            (INTCON3bits.INT1F = 0);
  3391   001CE8  90F0               	bcf	240,0,c	;volatile
  3392   001CEA  0012               	return		;funcret
  3393   001CEC                     __end_of_INT1_ISR:
  3394                           	callstack 0
  3395                           
  3396 ;; *************** function _INT0_ISR *****************
  3397 ;; Defined at:
  3398 ;;		line 31 in file "C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_external_interrupt.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;		None
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;		None
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      void 
  3405 ;; Registers used:
  3406 ;;		None
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3416 ;;Total ram usage:        0 bytes
  3417 ;; Hardware stack levels used: 1
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_InterruptManager
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text25
  3426   001CEC                     __ptext25:
  3427                           	callstack 0
  3428   001CEC                     _INT0_ISR:
  3429                           	callstack 24
  3430   001CEC                     
  3431                           ;C:/Users/Om562/MPLABXProjects/PIC18/MCAL_Layer/Interrupt/mcal_external_interrupt.c: 34:
      +                            (INTCONbits.INT0IF = 0);
  3432   001CEC  92F2               	bcf	242,1,c	;volatile
  3433   001CEE  0012               	return		;funcret
  3434   001CF0                     __end_of_INT0_ISR:
  3435                           	callstack 0
  3436                           
  3437 ;; *************** function _ADC_ISR *****************
  3438 ;; Defined at:
  3439 ;;		line 228 in file "MCAL_Layer/ADC/hal_adc.c"
  3440 ;; Parameters:    Size  Location     Type
  3441 ;;		None
  3442 ;; Auto vars:     Size  Location     Type
  3443 ;;		None
  3444 ;; Return value:  Size  Location     Type
  3445 ;;                  1    wreg      void 
  3446 ;; Registers used:
  3447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  3448 ;; Tracked objects:
  3449 ;;		On entry : 0/0
  3450 ;;		On exit  : 0/0
  3451 ;;		Unchanged: 0/0
  3452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3455 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3456 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3457 ;;Total ram usage:        0 bytes
  3458 ;; Hardware stack levels used: 1
  3459 ;; Hardware stack levels required when called: 2
  3460 ;; This function calls:
  3461 ;;		NULL
  3462 ;;		_adisr
  3463 ;; This function is called by:
  3464 ;;		_InterruptManager
  3465 ;; This function uses a non-reentrant model
  3466 ;;
  3467                           
  3468                           	psect	text26
  3469   001C6C                     __ptext26:
  3470                           	callstack 0
  3471   001C6C                     _ADC_ISR:
  3472                           	callstack 22
  3473   001C6C                     
  3474                           ;MCAL_Layer/ADC/hal_adc.c: 230:  (PIR1bits.ADIF = 0);
  3475   001C6C  9C9E               	bcf	158,6,c	;volatile
  3476   001C6E                     
  3477                           ;MCAL_Layer/ADC/hal_adc.c: 231:  if (ADC_CALLBACK)
  3478   001C6E  5053               	movf	_ADC_CALLBACK^0,w,c
  3479   001C70  1054               	iorwf	(_ADC_CALLBACK+1)^0,w,c
  3480   001C72  B4D8               	btfsc	status,2,c
  3481   001C74  EF3E  F00E         	goto	i2u224_41
  3482   001C78  EF40  F00E         	goto	i2u224_40
  3483   001C7C                     i2u224_41:
  3484   001C7C  EF4C  F00E         	goto	i2l848
  3485   001C80                     i2u224_40:
  3486   001C80                     
  3487                           ;MCAL_Layer/ADC/hal_adc.c: 232:   ADC_CALLBACK();
  3488   001C80  D802               	call	i2u225_48
  3489   001C82  EF4C  F00E         	goto	i2u225_49
  3490   001C86                     i2u225_48:
  3491   001C86  0005               	push	
  3492   001C88  6EFA               	movwf	pclath,c
  3493   001C8A  5053               	movf	_ADC_CALLBACK^0,w,c
  3494   001C8C  6EFD               	movwf	tosl,c
  3495   001C8E  5054               	movf	(_ADC_CALLBACK+1)^0,w,c
  3496   001C90  6EFE               	movwf	tosh,c
  3497   001C92  6AFF               	clrf	tosu,c
  3498   001C94  50FA               	movf	pclath,w,c
  3499   001C96  0012               	return		;indir
  3500   001C98                     i2u225_49:
  3501   001C98                     i2l848:
  3502   001C98  0012               	return		;funcret
  3503   001C9A                     __end_of_ADC_ISR:
  3504                           	callstack 0
  3505                           
  3506 ;; *************** function _adisr *****************
  3507 ;; Defined at:
  3508 ;;		line 52 in file "Application.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;		None
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;		None
  3513 ;; Return value:  Size  Location     Type
  3514 ;;                  1    wreg      void 
  3515 ;; Registers used:
  3516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3523 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3525 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3526 ;;Total ram usage:        0 bytes
  3527 ;; Hardware stack levels used: 1
  3528 ;; Hardware stack levels required when called: 1
  3529 ;; This function calls:
  3530 ;;		_ADC_GetConversionRes
  3531 ;; This function is called by:
  3532 ;;		_ADC_ISR
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           
  3536                           	psect	text27
  3537   001CBC                     __ptext27:
  3538                           	callstack 0
  3539   001CBC                     _adisr:
  3540                           	callstack 22
  3541   001CBC                     
  3542                           ;Application.c: 54:  ADC_GetConversionRes(&ad1, &res1);
  3543   001CBC  0E23               	movlw	low _ad1
  3544   001CBE  6E30               	movwf	ADC_GetConversionRes@obj^0,c
  3545   001CC0  0E73               	movlw	low _res1
  3546   001CC2  6E31               	movwf	ADC_GetConversionRes@res^0,c
  3547   001CC4  ECB1  F00B         	call	_ADC_GetConversionRes	;wreg free
  3548   001CC8                     
  3549                           ;Application.c: 55:  flag++;
  3550   001CC8  2A6B               	incf	_flag^0,f,c
  3551   001CCA  0012               	return		;funcret
  3552   001CCC                     __end_of_adisr:
  3553                           	callstack 0
  3554                           
  3555 ;; *************** function _ADC_GetConversionRes *****************
  3556 ;; Defined at:
  3557 ;;		line 124 in file "MCAL_Layer/ADC/hal_adc.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  obj             1    0[COMRAM] PTR const struct .
  3560 ;;		 -> ad1(7), 
  3561 ;;  res             1    1[COMRAM] PTR unsigned short 
  3562 ;;		 -> res1(2), 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  ret             1    5[COMRAM] unsigned char 
  3565 ;; Return value:  Size  Location     Type
  3566 ;;                  1    wreg      unsigned char 
  3567 ;; Registers used:
  3568 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3578 ;;Total ram usage:        6 bytes
  3579 ;; Hardware stack levels used: 1
  3580 ;; This function calls:
  3581 ;;		Nothing
  3582 ;; This function is called by:
  3583 ;;		_adisr
  3584 ;;		_ADC_GetResFrom
  3585 ;; This function uses a non-reentrant model
  3586 ;;
  3587                           
  3588                           	psect	text28
  3589   001762                     __ptext28:
  3590                           	callstack 0
  3591   001762                     _ADC_GetConversionRes:
  3592                           	callstack 22
  3593   001762                     
  3594                           ;MCAL_Layer/ADC/hal_adc.c: 124: STD_ReturnType ADC_GetConversionRes(const ADC_conf_t * o
      +                          bj, uint16_t* res);MCAL_Layer/ADC/hal_adc.c: 125: {;MCAL_Layer/ADC/hal_adc.c: 126:  STD_
      +                          ReturnType ret = (STD_ReturnType) 0x01;
  3595   001762  0E01               	movlw	1
  3596   001764  6E35               	movwf	ADC_GetConversionRes@ret^0,c
  3597                           
  3598                           ;MCAL_Layer/ADC/hal_adc.c: 128:  if ((((void*)0) == obj) || (((void*)0) == res)) {
  3599   001766  5030               	movf	ADC_GetConversionRes@obj^0,w,c
  3600   001768  B4D8               	btfsc	status,2,c
  3601   00176A  EFB9  F00B         	goto	i2u196_41
  3602   00176E  EFBB  F00B         	goto	i2u196_40
  3603   001772                     i2u196_41:
  3604   001772  EFC3  F00B         	goto	i2l3159
  3605   001776                     i2u196_40:
  3606   001776  5031               	movf	ADC_GetConversionRes@res^0,w,c
  3607   001778  A4D8               	btfss	status,2,c
  3608   00177A  EFC1  F00B         	goto	i2u197_41
  3609   00177E  EFC3  F00B         	goto	i2u197_40
  3610   001782                     i2u197_41:
  3611   001782  EFC7  F00B         	goto	i2l3161
  3612   001786                     i2u197_40:
  3613   001786                     i2l3159:
  3614                           
  3615                           ;MCAL_Layer/ADC/hal_adc.c: 129:   ret = (STD_ReturnType) 0x00;
  3616   001786  0E00               	movlw	0
  3617   001788  6E35               	movwf	ADC_GetConversionRes@ret^0,c
  3618                           
  3619                           ;MCAL_Layer/ADC/hal_adc.c: 130:  } else {
  3620   00178A  EFFF  F00B         	goto	i2l3171
  3621   00178E                     i2l3161:
  3622                           
  3623                           ;MCAL_Layer/ADC/hal_adc.c: 131:   if (obj->ADC_LR_ADJUST == 0x00U) {
  3624   00178E  5030               	movf	ADC_GetConversionRes@obj^0,w,c
  3625   001790  6ED9               	movwf	fsr2l,c
  3626   001792  6ADA               	clrf	fsr2h,c
  3627   001794  0E06               	movlw	6
  3628   001796  26D9               	addwf	fsr2l,f,c
  3629   001798  B0DF               	btfsc	indf2,0,c
  3630   00179A  EFD1  F00B         	goto	i2u198_41
  3631   00179E  EFD3  F00B         	goto	i2u198_40
  3632   0017A2                     i2u198_41:
  3633   0017A2  EFEE  F00B         	goto	i2l3165
  3634   0017A6                     i2u198_40:
  3635   0017A6                     
  3636                           ;MCAL_Layer/ADC/hal_adc.c: 132:    *res = (uint16_t) (((ADRESH << 8) + ADRESL) >> 6);
  3637   0017A6  50C3               	movf	195,w,c	;volatile
  3638   0017A8  CFC4 F032          	movff	4036,??_ADC_GetConversionRes	;volatile
  3639   0017AC  6A33               	clrf	(??_ADC_GetConversionRes+1)^0,c
  3640   0017AE  C032  F033         	movff	??_ADC_GetConversionRes,??_ADC_GetConversionRes+1
  3641   0017B2  6A32               	clrf	??_ADC_GetConversionRes^0,c
  3642   0017B4  2632               	addwf	??_ADC_GetConversionRes^0,f,c
  3643   0017B6  0E00               	movlw	0
  3644   0017B8  2233               	addwfc	(??_ADC_GetConversionRes+1)^0,f,c
  3645   0017BA  0E06               	movlw	6
  3646   0017BC  6E34               	movwf	(??_ADC_GetConversionRes+2)^0,c
  3647   0017BE                     i2u199_45:
  3648   0017BE  3433               	rlcf	(??_ADC_GetConversionRes+1)^0,w,c
  3649   0017C0  3233               	rrcf	(??_ADC_GetConversionRes+1)^0,f,c
  3650   0017C2  3232               	rrcf	??_ADC_GetConversionRes^0,f,c
  3651   0017C4  2E34               	decfsz	(??_ADC_GetConversionRes+2)^0,f,c
  3652   0017C6  EFDF  F00B         	goto	i2u199_45
  3653   0017CA  5031               	movf	ADC_GetConversionRes@res^0,w,c
  3654   0017CC  6ED9               	movwf	fsr2l,c
  3655   0017CE  6ADA               	clrf	fsr2h,c
  3656   0017D0  C032  FFDE         	movff	??_ADC_GetConversionRes,postinc2
  3657   0017D4  C033  FFDD         	movff	??_ADC_GetConversionRes+1,postdec2
  3658                           
  3659                           ;MCAL_Layer/ADC/hal_adc.c: 133:   } else if (obj->ADC_LR_ADJUST == 0x01U) {
  3660   0017D8  EFFF  F00B         	goto	i2l3171
  3661   0017DC                     i2l3165:
  3662   0017DC                     
  3663                           ;MCAL_Layer/ADC/hal_adc.c: 134:    *res = (uint16_t) ((ADRESH << 8) + ADRESL);
  3664   0017DC  50C3               	movf	195,w,c	;volatile
  3665   0017DE  CFC4 F032          	movff	4036,??_ADC_GetConversionRes	;volatile
  3666   0017E2  6A33               	clrf	(??_ADC_GetConversionRes+1)^0,c
  3667   0017E4  C032  F033         	movff	??_ADC_GetConversionRes,??_ADC_GetConversionRes+1
  3668   0017E8  6A32               	clrf	??_ADC_GetConversionRes^0,c
  3669   0017EA  2632               	addwf	??_ADC_GetConversionRes^0,f,c
  3670   0017EC  0E00               	movlw	0
  3671   0017EE  2233               	addwfc	(??_ADC_GetConversionRes+1)^0,f,c
  3672   0017F0  5031               	movf	ADC_GetConversionRes@res^0,w,c
  3673   0017F2  6ED9               	movwf	fsr2l,c
  3674   0017F4  6ADA               	clrf	fsr2h,c
  3675   0017F6  C032  FFDE         	movff	??_ADC_GetConversionRes,postinc2
  3676   0017FA  C033  FFDD         	movff	??_ADC_GetConversionRes+1,postdec2
  3677   0017FE                     i2l3171:
  3678                           
  3679                           ;MCAL_Layer/ADC/hal_adc.c: 139:  return ret;
  3680   0017FE  5035               	movf	ADC_GetConversionRes@ret^0,w,c
  3681   001800  0012               	return		;funcret
  3682   001802                     __end_of_ADC_GetConversionRes:
  3683                           	callstack 0
  3684                           
  3685                           	psect	text29
  3686   000000                     __ptext29:
  3687                           	callstack 0
  3688   000000                     
  3689                           	psect	rparam
  3690   000000                     
  3691                           	psect	temp
  3692   000075                     btemp:
  3693                           	callstack 0
  3694   000075                     	ds	1
  3695   000000                     int$flags	set	btemp
  3696   000000                     wtemp8	set	btemp+1
  3697   000000                     ttemp5	set	btemp+1
  3698   000000                     ttemp6	set	btemp+4
  3699   000000                     ttemp7	set	btemp+8
  3700                           
  3701                           	psect	config
  3702                           
  3703                           ; Padding undefined space
  3704   300000                     	org	3145728
  3705   300000  FF                 	db	255
  3706                           
  3707                           ;Config register CONFIG1H @ 0x300001
  3708                           ;	Oscillator Selection bits
  3709                           ;	OSC = HS, HS oscillator
  3710                           ;	Fail-Safe Clock Monitor Enable bit
  3711                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  3712                           ;	Internal/External Oscillator Switchover bit
  3713                           ;	IESO = OFF, Oscillator Switchover mode disabled
  3714   300001                     	org	3145729
  3715   300001  02                 	db	2
  3716                           
  3717                           ;Config register CONFIG2L @ 0x300002
  3718                           ;	Power-up Timer Enable bit
  3719                           ;	PWRT = OFF, PWRT disabled
  3720                           ;	Brown-out Reset Enable bits
  3721                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  3722                           ;	Brown Out Reset Voltage bits
  3723                           ;	BORV = 1, 
  3724   300002                     	org	3145730
  3725   300002  09                 	db	9
  3726                           
  3727                           ;Config register CONFIG2H @ 0x300003
  3728                           ;	Watchdog Timer Enable bit
  3729                           ;	WDT = ON, WDT enabled
  3730                           ;	Watchdog Timer Postscale Select bits
  3731                           ;	WDTPS = 32768, 1:32768
  3732   300003                     	org	3145731
  3733   300003  1F                 	db	31
  3734                           
  3735                           ; Padding undefined space
  3736   300004                     	org	3145732
  3737   300004  FF                 	db	255
  3738                           
  3739                           ;Config register CONFIG3H @ 0x300005
  3740                           ;	CCP2 MUX bit
  3741                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  3742                           ;	PORTB A/D Enable bit
  3743                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  3744                           ;	Low-Power Timer1 Oscillator Enable bit
  3745                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  3746                           ;	MCLR Pin Enable bit
  3747                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  3748   300005                     	org	3145733
  3749   300005  81                 	db	129
  3750                           
  3751                           ;Config register CONFIG4L @ 0x300006
  3752                           ;	Stack Full/Underflow Reset Enable bit
  3753                           ;	STVREN = ON, Stack full/underflow will cause Reset
  3754                           ;	Single-Supply ICSP Enable bit
  3755                           ;	LVP = OFF, Single-Supply ICSP disabled
  3756                           ;	Extended Instruction Set Enable bit
  3757                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  3758                           ;	Background Debugger Enable bit
  3759                           ;	DEBUG = 0x1, unprogrammed default
  3760   300006                     	org	3145734
  3761   300006  81                 	db	129
  3762                           
  3763                           ; Padding undefined space
  3764   300007                     	org	3145735
  3765   300007  FF                 	db	255
  3766                           
  3767                           ;Config register CONFIG5L @ 0x300008
  3768                           ;	Code Protection bit
  3769                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  3770                           ;	Code Protection bit
  3771                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  3772                           ;	Code Protection bit
  3773                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  3774                           ;	Code Protection bit
  3775                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  3776   300008                     	org	3145736
  3777   300008  0F                 	db	15
  3778                           
  3779                           ;Config register CONFIG5H @ 0x300009
  3780                           ;	Boot Block Code Protection bit
  3781                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  3782                           ;	Data EEPROM Code Protection bit
  3783                           ;	CPD = OFF, Data EEPROM not code-protected
  3784   300009                     	org	3145737
  3785   300009  C0                 	db	192
  3786                           
  3787                           ;Config register CONFIG6L @ 0x30000A
  3788                           ;	Write Protection bit
  3789                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  3790                           ;	Write Protection bit
  3791                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  3792                           ;	Write Protection bit
  3793                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  3794                           ;	Write Protection bit
  3795                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  3796   30000A                     	org	3145738
  3797   30000A  0F                 	db	15
  3798                           
  3799                           ;Config register CONFIG6H @ 0x30000B
  3800                           ;	Configuration Register Write Protection bit
  3801                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  3802                           ;	Boot Block Write Protection bit
  3803                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  3804                           ;	Data EEPROM Write Protection bit
  3805                           ;	WRTD = OFF, Data EEPROM not write-protected
  3806   30000B                     	org	3145739
  3807   30000B  E0                 	db	224
  3808                           
  3809                           ;Config register CONFIG7L @ 0x30000C
  3810                           ;	Table Read Protection bit
  3811                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  3812                           ;	Table Read Protection bit
  3813                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  3814                           ;	Table Read Protection bit
  3815                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  3816                           ;	Table Read Protection bit
  3817                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  3818   30000C                     	org	3145740
  3819   30000C  0F                 	db	15
  3820                           
  3821                           ;Config register CONFIG7H @ 0x30000D
  3822                           ;	Boot Block Table Read Protection bit
  3823                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  3824   30000D                     	org	3145741
  3825   30000D  40                 	db	64
  3826                           tosu	equ	0xFFF
  3827                           tosh	equ	0xFFE
  3828                           tosl	equ	0xFFD
  3829                           stkptr	equ	0xFFC
  3830                           pclatu	equ	0xFFB
  3831                           pclath	equ	0xFFA
  3832                           pcl	equ	0xFF9
  3833                           tblptru	equ	0xFF8
  3834                           tblptrh	equ	0xFF7
  3835                           tblptrl	equ	0xFF6
  3836                           tablat	equ	0xFF5
  3837                           prodh	equ	0xFF4
  3838                           prodl	equ	0xFF3
  3839                           indf0	equ	0xFEF
  3840                           postinc0	equ	0xFEE
  3841                           postdec0	equ	0xFED
  3842                           preinc0	equ	0xFEC
  3843                           plusw0	equ	0xFEB
  3844                           fsr0h	equ	0xFEA
  3845                           fsr0l	equ	0xFE9
  3846                           wreg	equ	0xFE8
  3847                           indf1	equ	0xFE7
  3848                           postinc1	equ	0xFE6
  3849                           postdec1	equ	0xFE5
  3850                           preinc1	equ	0xFE4
  3851                           plusw1	equ	0xFE3
  3852                           fsr1h	equ	0xFE2
  3853                           fsr1l	equ	0xFE1
  3854                           bsr	equ	0xFE0
  3855                           indf2	equ	0xFDF
  3856                           postinc2	equ	0xFDE
  3857                           postdec2	equ	0xFDD
  3858                           preinc2	equ	0xFDC
  3859                           plusw2	equ	0xFDB
  3860                           fsr2h	equ	0xFDA
  3861                           fsr2l	equ	0xFD9
  3862                           status	equ	0xFD8

Data Sizes:
    Strings     12
    Constant    0
    Data        55
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     35     116
    BANK0           128     11      19
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    ad1$ADC_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> adisr(), 

    ADC_CALLBACK	PTR FTN()void  size(2) Largest target is 1
		 -> adisr(), NULL(), 

    ADC_CHANNEL_PIN_CONFIGURE@obj	PTR struct . size(1) Largest target is 7
		 -> ad1(COMRAM[7]), 

    ADC_CHANNEL_PIN_CONFIGURE@obj$ADC_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> adisr(), 

    ADC_GetConversionRes@obj	PTR const struct . size(1) Largest target is 7
		 -> ad1(COMRAM[7]), 

    ADC_GetConversionRes@obj$ADC_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> adisr(), 

    ADC_GetConversionRes@res	PTR unsigned short  size(1) Largest target is 2
		 -> res1(COMRAM[2]), 

    ADC_GetFrom_NON_BLOCKING@obj	PTR const struct . size(1) Largest target is 7
		 -> ad1(COMRAM[7]), 

    ADC_INIT@obj	PTR const struct . size(1) Largest target is 7
		 -> ad1(COMRAM[7]), 

    ADC_INIT@obj$ADC_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> adisr(), 

    ADC_RESULT_ADJUST@obj	PTR struct . size(1) Largest target is 7
		 -> ad1(COMRAM[7]), 

    ADC_RESULT_ADJUST@obj$ADC_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> adisr(), 

    ADC_SelectChannnel@obj	PTR struct . size(1) Largest target is 7
		 -> ad1(COMRAM[7]), 

    ADC_SelectChannnel@obj$ADC_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> adisr(), 

    ADC_StartConversion@obj	PTR const struct . size(1) Largest target is 7
		 -> ad1(COMRAM[7]), 

    ADC_VOLTAGE_REFRECE_CONFIGURE@obj	PTR struct . size(1) Largest target is 7
		 -> ad1(COMRAM[7]), 

    ADC_VOLTAGE_REFRECE_CONFIGURE@obj$ADC_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> adisr(), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    gpio_pin_direction_initialize@pin_config	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), lcd_1$data_pin(COMRAM[4]), led_init@pin_obj(COMRAM[1]), relayInit@pinObj(COMRAM[1]), 

    gpio_pin_initialize@pin_config	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), lcd_1$data_pin(COMRAM[4]), led_init@pin_obj(COMRAM[1]), relayInit@pinObj(COMRAM[1]), 

    gpio_pin_write_logic@pin_config	PTR struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), lcd_1$data_pin(COMRAM[4]), lcd_1$rs(COMRAM[1]), led_init@pin_obj(COMRAM[1]), 
		 -> led_off@pin_obj(COMRAM[1]), led_on@pin_obj(COMRAM[1]), relayInit@pinObj(COMRAM[1]), relayOFF@pinObj(COMRAM[1]), 
		 -> relayON@pinObj(COMRAM[1]), 

    INT0_CALBACK	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT1_CALBACK	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    INT2_CALBACK	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    interrupt_INTx_CallBack_Init@obj$callback_function	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_Clear_Flag@obj$callback_function	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_Disable@obj$callback_function	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_Edge_Init@obj$callback_function	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_Enable@obj$callback_function	PTR FTN()void  size(2) Largest target is 0

    interrupt_INTx_Pin_Init@obj$callback_function	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@obj$callback_function_HIGH	PTR FTN()void  size(2) Largest target is 0

    Interrupt_RBx_Init@obj$callback_function_LOW	PTR FTN()void  size(2) Largest target is 0

    keypadInit@pad$keypadMatrix	PTR unsigned char [6][4] size(2) Largest target is 0

    keypadReadValue@pad$keypadMatrix	PTR unsigned char [6][4] size(2) Largest target is 0

    lat_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRlllll[1]), LATB(BITBIGSFRllllh[1]), LATC(BITBIGSFRllllh[1]), LATD(BITBIGSFRllllh[1]), 
		 -> LATE(BITBIGSFRllllh[1]), 

    lcd_4bit_blink_en@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_intialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_data@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(1) Largest target is 9
		 -> STR_4(CODE[9]), 

    lcd_4bit_set_cursor_At@lcd	PTR struct . size(1) Largest target is 6
		 -> lcd_1(COMRAM[6]), 

    port_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRlllll[1]), PORTB(BITBIGSFRlllll[1]), PORTC(BITBIGSFRlllll[1]), PORTD(BITBIGSFRlllll[1]), 
		 -> PORTE(BITBIGSFRlllll[1]), 

    RB4_CallBack_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB4_CallBack_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_CallBack_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB5_CallBack_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_CallBack_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB6_CallBack_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_CallBack_HIGH	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    RB7_CallBack_LOW	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1015$callback_function_HIGH	PTR FTN()void  size(2) Largest target is 0

    S1015$callback_function_LOW	PTR FTN()void  size(2) Largest target is 0

    S151$keypadMatrix	PTR unsigned char [6][4] size(2) Largest target is 0

    S1521$ADC_CallBack	PTR FTN()void  size(2) Largest target is 1
		 -> adisr(), 

    S2401$buffer	PTR unsigned char  size(2) Largest target is 0

    S2401$source	PTR const unsigned char  size(2) Largest target is 0

    S977$callback_function	PTR FTN()void  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 0

    tris_regs	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRlllll[1]), TRISB(BITBIGSFRlllhl[1]), TRISC(BITBIGSFRlllhl[1]), TRISD(BITBIGSFRlllhl[1]), 
		 -> TRISE(BITBIGSFRlllhl[1]), 

    vfprintf$0	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    vfprintf$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), STR_2(CODE[3]), STR_3(CODE[3]), 

    vfprintf$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMRAM[1]), 


Critical Paths under _main in COMRAM

    _main->_lcd_4bit_intialize
    _lcd_4bit_send_string_pos->_lcd_4bit_set_cursor_At
    _lcd_4bit_send_char_data->_lcd_4bit_send_data
    _lcd_4bit_intialize->_lcd_4bit_set_cursor_At
    _lcd_4bit_set_cursor_At->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_4bit_send_data
    _lcd_4bit_send_data->_gpio_pin_write_logic
    _lcd_4bit_blink_en->_gpio_pin_write_logic
    _gpio_pin_initialize->_gpio_pin_write_logic
    _ADC_INIT->_ADC_CHANNEL_PIN_CONFIGURE
    _ADC_GetFrom_NON_BLOCKING->_ADC_SelectChannnel
    _ADC_SelectChannnel->_ADC_CHANNEL_PIN_CONFIGURE

Critical Paths under _InterruptManager in COMRAM

    _adisr->_ADC_GetConversionRes

Critical Paths under _main in BANK0

    _main->_lcd_4bit_send_string_pos

Critical Paths under _InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     2      5   92720
                                              4 BANK0      7     2      5
           _ADC_GetFrom_NON_BLOCKING
                           _ADC_INIT
                 _lcd_4bit_intialize
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_send_string_pos                             5     1      4   40906
                                              0 BANK0      4     0      4
            _lcd_4bit_send_char_data
             _lcd_4bit_set_cursor_At
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data                              3     1      2   18669
                                             24 COMRAM     3     1      2
               _gpio_pin_write_logic
                  _lcd_4bit_blink_en
                 _lcd_4bit_send_data
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_intialize                                   4     3      1   50080
                                             33 COMRAM     2     1      1
                                              0 BANK0      1     1      0
                _gpio_pin_initialize
              _lcd_4bit_send_command
             _lcd_4bit_set_cursor_At
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_set_cursor_At                               6     3      3   21638
                                             27 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_command                                3     1      2   20469
                                             24 COMRAM     3     1      2
               _gpio_pin_write_logic
                  _lcd_4bit_blink_en
                 _lcd_4bit_send_data
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_data                                   6     4      2    6373
                                             18 COMRAM     6     4      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_blink_en                                    2     1      1    5886
                                             18 COMRAM     2     1      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (2) _gpio_pin_initialize                                  2     1      1    7307
                                             18 COMRAM     2     1      1
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_write_logic                                 8     6      2    5390
                                             10 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_direction_initialize                        7     6      1     496
                                             10 COMRAM     7     6      1
 ---------------------------------------------------------------------------------
 (1) _ADC_INIT                                             3     2      1     674
                                             13 COMRAM     2     1      1
          _ADC_CHANNEL_PIN_CONFIGURE
                  _ADC_RESULT_ADJUST
      _ADC_VOLTAGE_REFRECE_CONFIGURE
 ---------------------------------------------------------------------------------
 (2) _ADC_VOLTAGE_REFRECE_CONFIGURE                        1     0      1     120
                                             10 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (2) _ADC_RESULT_ADJUST                                    1     0      1     120
                                             10 COMRAM     1     0      1
 ---------------------------------------------------------------------------------
 (1) _ADC_GetFrom_NON_BLOCKING                             3     1      2    1060
                                             17 COMRAM     3     1      2
                 _ADC_SelectChannnel
                _ADC_StartConversion
 ---------------------------------------------------------------------------------
 (2) _ADC_StartConversion                                  2     1      1     198
                                             10 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _ADC_SelectChannnel                                   4     2      2     612
                                             13 COMRAM     4     2      2
          _ADC_CHANNEL_PIN_CONFIGURE
 ---------------------------------------------------------------------------------
 (2) _ADC_CHANNEL_PIN_CONFIGURE                            3     2      1     174
                                             10 COMRAM     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _InterruptManager                                     4     4      0     602
                                              6 COMRAM     4     4      0
                            _ADC_ISR
                           _INT0_ISR
                           _INT1_ISR
                           _INT2_ISR
                            _RB4_ISR
                            _RB5_ISR
                            _RB6_ISR
                            _RB7_ISR
 ---------------------------------------------------------------------------------
 (7) _RB7_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB6_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB5_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _RB4_ISR                                              1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _INT2_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT1_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _INT0_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _ADC_ISR                                              0     0      0     482
                                NULL *
                              _adisr *
 ---------------------------------------------------------------------------------
 (8) _adisr                                                0     0      0     482
               _ADC_GetConversionRes
 ---------------------------------------------------------------------------------
 (9) _ADC_GetConversionRes                                 6     4      2     482
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_GetFrom_NON_BLOCKING
     _ADC_SelectChannnel
       _ADC_CHANNEL_PIN_CONFIGURE
     _ADC_StartConversion
   _ADC_INIT
     _ADC_CHANNEL_PIN_CONFIGURE
     _ADC_RESULT_ADJUST
     _ADC_VOLTAGE_REFRECE_CONFIGURE
   _lcd_4bit_intialize
     _gpio_pin_initialize
       _gpio_pin_direction_initialize
       _gpio_pin_write_logic
     _lcd_4bit_send_command
       _gpio_pin_write_logic
       _lcd_4bit_blink_en
         _gpio_pin_write_logic
       _lcd_4bit_send_data
         _gpio_pin_write_logic
     _lcd_4bit_set_cursor_At
       _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
     _lcd_4bit_send_char_data
       _gpio_pin_write_logic
       _lcd_4bit_blink_en
       _lcd_4bit_send_data
     _lcd_4bit_set_cursor_At

 _InterruptManager (ROOT)
   _ADC_ISR
     NULL(Fake) *
     _adisr *
       _ADC_GetConversionRes
   _INT0_ISR
   _INT1_ISR
   _INT2_ISR
   _RB4_ISR
   _RB5_ISR
   _RB6_ISR
   _RB7_ISR

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      B      13       5       14.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     23      74       1       92.1%
BITBIGSFRlhlhh      2B      0       0      38        0.0%
BITBIGSFRlhlll      15      0       0      39        0.0%
BITBIGSFRh           D      0       0      37        0.0%
BITBIGSFRlllhh       7      0       0      40        0.0%
BITBIGSFRlllhl       6      0       0      41        0.0%
BITBIGSFRllllh       4      0       0      42        0.0%
BITBIGSFRlllll       4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      87      12        0.0%
DATA                 0      0      87       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sun Jan 21 22:26:22 2024

                     ??_InterruptManager 0036                                      l124 15D6  
                                    l230 195E                                      l134 19BA  
                                    l129 1A16                                      l403 14E8  
                                    l235 1BCA                                      l155 1900  
                                    l420 13E2                                      l247 1760  
                                    l432 1C08                                      l812 1C3A  
                                    l830 16B6                                      l842 1B48  
                                    l762 1816                                      l835 1B8A  
                                    l844 1B4C                                      l764 189A  
                                    l837 1B8C                                      l774 1B06  
                                    l777 1CB6                                      l779 1CBA  
                                    _ad1 0023            gpio_pin_initialize@pin_config 0042  
                                    _chr 008B                          __end_of_ADC_ISR 1C9A  
                                    tosl 0FFD                                      wreg 0FE8  
                            led_on@F3058 0071                 ??_lcd_4bit_set_cursor_At 004E  
                        __end_of_RB4_ISR 1CE4                          __end_of_RB5_ISR 1CE0  
                        __end_of_RB6_ISR 1CDC                          __end_of_RB7_ISR 1CD8  
                           _ADC_CALLBACK 0053                                     l3201 1624  
                                   l3205 162A                                     l3311 1B66  
                                   l3313 1B6C                                     l3321 1B28  
                                   l4201 14E6                                     l3331 1AEE  
                                   l3315 1B84                                     l3323 1B40  
                                   l4131 12F0                                     l4211 19CC  
                                   l3181 15E8                                     l3333 1AFC  
                                   l3325 1AC0                                     l3341 1CAE  
                                   l3309 1B4E                                     l3317 1B08  
                                   l4133 1342                                     l4221 1BE0  
                                   l4213 19D4                                     l3191 1606  
                                   l3183 15EE                                     l3175 15D8  
                                   l3335 1B04                                     l3327 1AD4  
                                   l3343 1CB8                                     l3319 1B20  
                                   l4135 1356                                     l4143 13B6  
                                   l4127 12D4                                     l4223 1BE8  
                                   l4215 1A14                                     l4231 16CC  
                                   l3193 160C                                     l3185 15F4  
                                   l3177 15DC                                     l3329 1ADC  
                                   l4137 13A2                                     l4145 13E0  
                                   l4129 12E8                                     l4225 1C06  
                                   l4153 1902                                     l4209 19BC  
                                   l4233 16D4                                     l4313 14EA  
                                   l3195 1612                                     l3187 15FA  
                                   l3179 15E2                                     l3339 1C9A  
                                   l4219 1BCC                                     l4163 191E  
                                   l4155 1912                                     l4235 16E8  
                                   l4243 1724                                     l4331 1534  
                                   l4315 14FA                                     l3197 1618  
                                   l3189 1600                                     l4181 1BBA  
                                   l4173 1B8E                                     l4165 194A  
                                   l4157 191A                                     l4237 16FC  
                                   l4245 175E                                     l4229 16B8  
                                   l4341 157E                                     l4333 1544  
                                   l4325 1514                                     l4317 14FE  
                                   l4253 1960                                     l3199 161E  
                                   l3471 1872                                     l3463 1802  
                                   l4191 1400                                     l4183 1BC8  
                                   l4175 1B9E                                     l4167 194C  
                                   l4239 1710                                     l4351 15BA  
                                   l4343 158A                                     l4335 1550  
                                   l4327 1520                                     l4319 150E  
                                   l4255 1970                                     l3481 1888  
                                   l3473 1874                                     l3465 1812  
                                   l4193 1456                                     l4177 1BA6  
                                   l4169 195C                                     l4353 15C6  
                                   l4345 1596                                     l4337 156C  
                                   l4329 1524                                     l4257 1978  
                                   l3491 1C1E                                     l3483 1890  
                                   l3475 1876                                     l3467 1818  
                                   l4187 13E4                                     l4179 1BB2  
                                   l4347 15A2                                     l4339 1572  
                                   l4259 19B8                                     l4371 18AE  
                                   l3493 1C22                                     l3485 1898  
                                   l3477 1878                                     l3469 186A  
                                   l4189 13F8                                     l4349 15AE  
                                   l4373 18B2                                     l3495 1C30  
                                   l3479 187A                                     l4199 14A6  
                                   l4375 18C6                                     l3489 1C0A  
                                   l4377 18DE                                     l4369 189C  
                                   l4379 18E2                                     l4891 1A76  
                                   l4981 13CA                                     l4893 1A7E  
                                   l4983 14D0                                     l4895 1A94  
                                   l4985 1648                                     l4897 1AAC  
                                   l4889 1A6E                                     l4979 1738  
                                   STR_1 100A                                     STR_4 1001  
                                   u2100 1B20                                     u2101 1B1C  
                                   u2110 1B40                                     u2111 1B3C  
                                   u2120 1AD4                                     u2121 1AD0  
                                   u2130 1CAE                                     u2131 1CAA  
                                   _LATA 0F89                                     _LATB 0F8A  
                                   _LATC 0F8B                                     u2080 1B66  
                                   u3200 1912                                     _LATD 0F8C  
                                   u2081 1B62                                     u3201 190E  
                                   _LATE 0F8D                                     u2090 1B84  
                                   u2091 1B80                                     u2260 1812  
                                   u3300 1BE0                                     u3220 195C  
                                   u2261 180E                                     u3301 1BDC  
                                   u3221 1958                                     u2270 1C1E  
                                   u3150 12E8                                     u3230 1B9E  
                                   u3214 1938                                     u3310 16CC  
                                   u2271 1C1A                                     u3151 12E4  
                                   u3231 1B9A                                     u3215 1934  
                                   u3311 16C8                                     u3240 13F8  
                                   u3320 1970                                     u3241 13F4  
                                   u3321 196C                                     u3410 18AE  
                                   u3411 18AA                                     u3164 130E  
                                   u3420 1900                                     u3165 130A  
                                   u3421 18FC                                     u3270 14BC  
                                   u3254 141E                                     u3271 14B6  
                                   u3255 141A                                     u3175 1350  
                                   u3280 14BE                                     u3264 1474  
                                   u3184 1374                                     u3176 1352  
                                   u3265 1470                                     u3185 1370  
                                   u3290 19CC                                     u3195 13B0  
                                   u3291 19C8                                     u3196 13B2  
                                   u3380 14FA                                     u3381 14F6  
                                   u3390 1534                                     u3391 1530  
                                   u3927 1AA0                                     u3937 153A  
                                   u3947 1556                                     u3957 156E  
                                   u3967 1BB4               __end_of_ADC_SelectChannnel 1B08  
                                   _flag 006B                         __end_of_ADC_INIT 189C  
                                   _main 1A6E                                     _res1 0073  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   btemp 0075                                     prodl 0FF3  
                                   start 000E                             ___param_bank 0000  
                  _lcd_4bit_send_command 19BC                     _gpio_pin_write_logic 12D4  
         lcd_4bit_send_string_pos@column 0082                    lcd_4bit_intialize@lcd 0051  
                       __end_of_INT0_ISR 1CF0                         __end_of_INT1_ISR 1CEC  
                       __end_of_INT2_ISR 1CE8              ??_ADC_CHANNEL_PIN_CONFIGURE 003B  
                                  ?_main 0084                                    _EEADR 0FA9  
                           led_off@F3063 0070               ??_ADC_GetFrom_NON_BLOCKING 0043  
                                  i2l504 1CEE                                    i2l512 1CE6  
                                  i2l508 1CEA                                    i2l540 1CD6  
                                  i2l533 1CDA                                    i2l526 1CDE  
                                  i2l519 1CE2                                    i2l719 1CCA  
                                  i2l694 12C0                                    i2l848 1C98  
                                  i2l797 1800                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                                    _adisr 1CBC  
                                  _lcd_1 002A                lcd_4bit_set_cursor_At@col 004D  
              lcd_4bit_set_cursor_At@lcd 004B                lcd_4bit_set_cursor_At@ret 0050  
              lcd_4bit_set_cursor_At@row 004C                                    pclath 0FFA  
                                  pclatu 0FFB                                    tablat 0FF5  
                                  ttemp5 0076                                    ttemp6 0079  
                                  ttemp7 007D                                    status 0FD8  
                                  wtemp8 0076           ?_gpio_pin_direction_initialize 003A  
                        __initialization 1A18                  ADC_GetConversionRes@obj 0030  
                ADC_GetConversionRes@res 0031                  ADC_GetConversionRes@ret 0035  
                           __end_of_main 1AC0                    ?_gpio_pin_write_logic 003A  
                              ??_ADC_ISR 0036                                   ??_main 0089  
                          __activetblptr 0003                                ??_RB4_ISR 0030  
                              ??_RB5_ISR 0030                                ??_RB6_ISR 0030  
                              ??_RB7_ISR 0030                                   ?_adisr 0030  
                      _RB6_CallBack_HIGH 005F                                   _ADRESH 0FC4  
                                 _EEADRH 0FAA                                   _ADRESL 0FC3  
                                 _EEDATA 0FA8                                   _EECON2 0FA7  
                                 i2l4001 10EE                                   i2l4011 1124  
                                 i2l4003 10FE                                   i2l4021 115A  
                                 i2l4013 1132                                   i2l4005 1102  
                                 i2l4023 1168                                   i2l4031 1190  
                                 i2l4015 1142                                   i2l4007 1108  
                                 i2l3161 178E                                   i2l3305 1CBC  
                                 i2l4041 11CE                                   i2l4033 119E  
                                 i2l4025 1176                                   i2l4017 1146  
                                 i2l4009 1116                                   i2l3163 17A6  
                                 i2l3171 17FE                                   i2l3155 1762  
                                 i2l3307 1CC8                                   i2l4051 120E  
                                 i2l4035 11AC                                   i2l4043 11D4  
                                 i2l4027 1186                                   i2l4019 114C  
                                 i2l3165 17DC                                   i2l3157 1776  
                                 i2l4061 1242                                   i2l4053 1212  
                                 i2l4045 11E2                                   i2l4037 11BA  
                                 i2l4029 118A                                   i2l3167 17DC  
                                 i2l3159 1786                                   i2l4071 1278  
                                 i2l4063 1252                                   i2l4047 11F0  
                                 i2l4055 1218                                   i2l4039 11CA  
                                 i2l4081 12AE                                   i2l4073 1286  
                                 i2l4065 1256                                   i2l4057 1226  
                                 i2l4049 11FE                                   i2l4083 12BC  
                                 i2l4075 1296                                   i2l4059 1234  
                                 i2l4067 125C                                   i2l3461 1C80  
                                 i2l1933 1CEC                                   i2l1941 1CE4  
                                 i2l4077 129A                                   i2l4069 126A  
                                 i2l4079 12A0                                   i2l3457 1C6C  
                                 i2l1937 1CE8                                   i2l1945 1CE0  
                                 i2l3459 1C6E                                   i2l1955 1CDC  
                                 i2l1965 1CD8                                   i2l1975 1CD4  
                                 i2l3971 1040                                   i2l3981 107C  
                                 i2l3973 104E                                   i2l3965 1020  
                                 i2l3991 10BA                                   i2l3983 1080  
                                 i2l3975 105C                                   i2l3967 102E  
                                 i2l3993 10BE                                   i2l3985 108E  
                                 i2l3977 1060                                   i2l3969 103C  
                                 i2l3987 109C                                   i2l3995 10C4  
                                 i2l3979 106E                                   i2l3997 10D2  
                                 i2l3989 10AA                                   i2l3999 10E0  
              _ADC_CHANNEL_PIN_CONFIGURE 15D8         __end_of_lcd_4bit_send_string_pos 1902  
                   lcd_4bit_blink_en@lcd 0042             ADC_CHANNEL_PIN_CONFIGURE@obj 003A  
                   lcd_4bit_blink_en@ret 0043                   ?_lcd_4bit_send_command 0048  
                   ADC_RESULT_ADJUST@obj 003A                                   clear_0 1A5E  
                                 isa$std 0001                            relayOFF@F3056 006C  
                          led_init@F3053 0072                                ?_ADC_INIT 003D  
                           __pdataCOMRAM 0001                             __mediumconst 0000  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8             __end_of_ADC_GetConversionRes 1802  
                             __accesstop 0080                  __end_of__initialization 1A64  
                              ?_INT0_ISR 0030                                ?_INT1_ISR 0030  
                              ?_INT2_ISR 0030                            ___rparam_used 0001  
                _lcd_4bit_send_char_data 1960                   _lcd_4bit_set_cursor_At 16B8  
                 ??_gpio_pin_write_logic 003C                           __pcstackCOMRAM 0030  
                  lcd_4bit_send_data@lcd 0042                      lcd_4bit_intialize@i 0080  
                  lcd_4bit_send_data@ret 0046                             __pidataBANK0 1CCC  
                          __end_of_adisr 1CCC                 lcd_4bit_send_command@lcd 0048  
               lcd_4bit_send_command@ret 004A                               ??_ADC_INIT 003E  
                                ??_adisr 0036                ADC_SelectChannnel@channel 003E  
                 ADC_StartConversion@obj 003A                   ADC_StartConversion@ret 003B  
                       _RB4_CallBack_LOW 005B                      lcd_4bit_send_data@i 0047  
                             ??_INT0_ISR 0030                               ??_INT1_ISR 0030  
                             ??_INT2_ISR 0030                       _ADC_SelectChannnel 1AC0  
                                _ADC_ISR 1C6C                          led_toggle@F3068 006F  
                    ?_ADC_SelectChannnel 003D                                  _RB4_ISR 1CE0  
                                _RB5_ISR 1CDC                                  _RB6_ISR 1CD8  
                                _RB7_ISR 1CD4                ?_lcd_4bit_send_string_pos 0080  
              ??_lcd_4bit_send_char_data 004A                     ??_ADC_SelectChannnel 003F  
                                __Hparam 0000                                  __Lparam 0000  
                    _gpio_pin_initialize 1BCC                     _ADC_GetConversionRes 1762  
                           __psmallconst 1000                                  __pcinit 1A18  
                                __ramtop 1000                                  __ptext0 1A6E  
                                __ptext1 189C                                  __ptext2 1960  
                                __ptext3 14EA                                  __ptext4 16B8  
                                __ptext5 19BC                                  __ptext6 1902  
                                __ptext7 1B8E                                  __ptext8 1BCC  
                                __ptext9 12D4          ??_gpio_pin_direction_initialize 003B  
                   ?_gpio_pin_initialize 0042                        _RB7_CallBack_HIGH 005D  
                         __pintcode_body 100E                     end_of_initialization 1A64  
                       _RB5_CallBack_LOW 0059                                  int_func 100E  
             __end_of_lcd_4bit_intialize 15D8                ?_ADC_GetFrom_NON_BLOCKING 0041  
                ??_lcd_4bit_send_command 004A         ADC_VOLTAGE_REFRECE_CONFIGURE@obj 003A  
             __end_of_lcd_4bit_send_data 1960                                  postdec1 0FE5  
                                postdec2 0FDD                                  postinc0 0FEE  
                                postinc2 0FDE                    ?_ADC_GetConversionRes 0030  
                           _INT0_CALBACK 0069          __end_of_lcd_4bit_send_char_data 19BC  
                              _PORTBbits 0F81                             _INT1_CALBACK 0067  
                       _InterruptManager 0008                             _INT2_CALBACK 0065  
             lcd_4bit_send_char_data@lcd 0048               lcd_4bit_send_char_data@ret 004A  
        ??_ADC_VOLTAGE_REFRECE_CONFIGURE 003B                    ??_gpio_pin_initialize 0043  
                    _ADC_StartConversion 1C9A                  ?_lcd_4bit_set_cursor_At 004B  
                             RB4_ISR@src 0030                     ?_ADC_StartConversion 003A  
                             RB5_ISR@src 0030              lcd_4bit_send_string_pos@lcd 0080  
            lcd_4bit_send_string_pos@row 0081              lcd_4bit_send_string_pos@str 0083  
                             RB6_ISR@src 0030                               RB7_ISR@src 0030  
                          __pidataCOMRAM 1C3C                      start_initialization 1A18  
  __end_of_gpio_pin_direction_initialize 14EA            _gpio_pin_direction_initialize 13E4  
         __end_of_lcd_4bit_set_cursor_At 1762                         _RB6_CallBack_LOW 0057  
                  ??_ADC_StartConversion 003B                   ??_ADC_GetConversionRes 0032  
                  ADC_SelectChannnel@obj 003D                    ADC_SelectChannnel@ret 0040  
                            __pdataBANK0 008B                                 ?_ADC_ISR 0030  
                           relayON@F3051 006D             lcd_4bit_send_command@command 0049  
                               ?_RB4_ISR 0030                                 ?_RB5_ISR 0030  
                               ?_RB6_ISR 0030                                 ?_RB7_ISR 0030  
                      _RB4_CallBack_HIGH 0063                              __pbssCOMRAM 0053  
                          __pcstackBANK0 0080                              ADC_INIT@obj 003D  
  __end_of_ADC_VOLTAGE_REFRECE_CONFIGURE 1B4E            _ADC_VOLTAGE_REFRECE_CONFIGURE 1B08  
         gpio_pin_write_logic@pin_config 003A                                __pintcode 0008  
              gpio_pin_write_logic@logic 003B          ADC_GetFrom_NON_BLOCKING@channel 0042  
                            __smallconst 1000                                 _ADC_INIT 1802  
                         relayInit@F3046 006E         __end_of_ADC_GetFrom_NON_BLOCKING 1C3C  
                               _INT0_ISR 1CEC                                 _INT1_ISR 1CE8  
                               _INT2_ISR 1CE4                                 _RB4_Flag 0022  
                       _RB7_CallBack_LOW 0055                                 _RB5_Flag 0021  
                               _RB6_Flag 0020                                 _RB7_Flag 001F  
               __end_of_InterruptManager 12D4                                 _PIE1bits 0F9D  
                               i2u300_40 11FE                                 i2u300_41 11FA  
          __end_of_lcd_4bit_send_command 1A18                                 i2u301_40 120E  
                               i2u301_41 120A                                 i2u310_40 12AE  
                               i2u302_40 1226                                 i2u310_41 12AA  
                               i2u302_41 1222                                 i2u311_40 12BC  
                               i2u303_40 1234                                 i2u311_41 12B8  
                               i2u303_41 1230                                 i2u224_40 1C80  
                               i2u304_40 1242                                 i2u224_41 1C7C  
                               i2u304_41 123E                                 i2u305_40 1252  
                               i2u305_41 124E                                 i2u225_48 1C86  
                               i2u306_40 126A                                 i2u225_49 1C98  
                               i2u306_41 1266                                 i2u307_40 1278  
                               i2u307_41 1274                                 i2u308_40 1286  
                               i2u308_41 1282                                 i2u309_40 1296  
                               i2u309_41 1292                                 i2u280_40 10AA  
                               i2u272_40 102E                                 i2u280_41 10A6  
                               i2u272_41 102A                                 i2u281_40 10BA  
                               i2u273_40 103C                                 i2u281_41 10B6  
                               i2u273_41 1038                                 _PIR1bits 0F9E  
                               i2u290_40 115A                                 i2u282_40 10D2  
                               i2u274_40 104E                                 i2u290_41 1156  
                               i2u282_41 10CE                                 i2u274_41 104A  
                               i2u291_40 1168                                 i2u283_40 10E0  
                               i2u275_40 105C                                 i2u291_41 1164  
                               i2u283_41 10DC                                 i2u275_41 1058  
                               i2u196_40 1776                                 i2u292_40 1176  
                               i2u284_40 10EE                                 i2u276_40 106E  
                               i2u196_41 1772                                 i2u292_41 1172  
                               i2u284_41 10EA                                 i2u276_41 106A  
                               i2u197_40 1786                                 i2u293_40 1186  
                               i2u285_40 10FE                                 i2u277_40 107C  
                               i2u197_41 1782                                 i2u293_41 1182  
                               i2u285_41 10FA                                 i2u277_41 1078  
                               i2u198_40 17A6                                 i2u294_40 119E  
                               i2u286_40 1116                                 i2u278_40 108E  
                               i2u198_41 17A2                                 i2u294_41 119A  
                               i2u286_41 1112                                 i2u278_41 108A  
                               i2u295_40 11AC                                 i2u287_40 1124  
                               i2u279_40 109C                                 i2u295_41 11A8  
                               i2u287_41 1120                                 i2u279_41 1098  
                               i2u199_45 17BE                                 i2u296_40 11BA  
                               i2u288_40 1132                                 i2u296_41 11B6  
                               i2u288_41 112E                                 i2u297_40 11CA  
                               i2u289_40 1142                                 i2u297_41 11C6  
                               i2u289_41 113E                                 i2u298_40 11E2  
                               i2u298_41 11DE                                 i2u299_40 11F0  
                               i2u299_41 11EC         gpio_pin_direction_initialize@ret 0040  
                     _lcd_4bit_intialize 14EA                                _port_regs 0001  
               _lcd_4bit_send_string_pos 189C                               _ADCON0bits 0FC2  
                             _ADCON1bits 0FC1                               _ADCON2bits 0FC0  
gpio_pin_direction_initialize@pin_config 003A                       _lcd_4bit_send_data 1902  
                              _tris_regs 0015                      ?_lcd_4bit_intialize 0051  
                 gpio_pin_initialize@ret 0043                  gpio_pin_write_logic@ret 0041  
                    ?_lcd_4bit_send_data 0042                              _INTCON2bits 0FF1  
                            _INTCON3bits 0FF0                 ?_lcd_4bit_send_char_data 0048  
                              copy_data0 1A2C                                copy_data1 1A4C  
                      _ADC_RESULT_ADJUST 1B4E                               _EECON1bits 0FA6  
         ?_ADC_VOLTAGE_REFRECE_CONFIGURE 003A                     ??_lcd_4bit_intialize 0052  
                               __Hrparam 0000                       ?_ADC_RESULT_ADJUST 003A  
                               __Lrparam 0000                     ??_lcd_4bit_send_data 0044  
                    ??_ADC_RESULT_ADJUST 003B               ?_ADC_CHANNEL_PIN_CONFIGURE 003A  
            __end_of_gpio_pin_initialize 1C0A                                 __ptext10 13E4  
                               __ptext11 1802                                 __ptext20 1CD8  
                               __ptext12 1B08                                 __ptext21 1CDC  
                               __ptext13 1B4E                                 __ptext22 1CE0  
                               __ptext14 1C0A                                 __ptext23 1CE4  
                               __ptext15 1C9A                                 __ptext24 1CE8  
                               __ptext16 1AC0                                 __ptext25 1CEC  
                               __ptext17 15D8                                 __ptext26 1C6C  
                               __ptext27 1CBC                                 __ptext19 1CD4  
                               __ptext28 1762                                 __ptext29 0000  
               _ADC_GetFrom_NON_BLOCKING 1C0A                                 _lat_regs 000B  
              __end_of_ADC_RESULT_ADJUST 1B8E                        _lcd_4bit_blink_en 1B8E  
            ADC_GetFrom_NON_BLOCKING@obj 0041              ADC_GetFrom_NON_BLOCKING@ret 0043  
                     ?_lcd_4bit_blink_en 0042                                 isa$xinst 0000  
                               fp__adisr 0000                                 int$flags 0075  
                    ??_lcd_4bit_blink_en 0043                                 main@argc 0084  
                               main@argv 0086        __end_of_ADC_CHANNEL_PIN_CONFIGURE 16B8  
                             _INTCONbits 0FF2                lcd_4bit_send_data@command 0043  
                      _RB5_CallBack_HIGH 0061             __end_of_gpio_pin_write_logic 13E4  
              __end_of_lcd_4bit_blink_en 1BCC                                 intlevel2 0000  
            __end_of_ADC_StartConversion 1CBC              lcd_4bit_send_char_data@data 0049  
                      ?_InterruptManager 0030               ??_lcd_4bit_send_string_pos 0051  
